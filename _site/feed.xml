<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://jameslieu.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://jameslieu.github.io/" rel="alternate" type="text/html" /><updated>2020-06-07T23:39:22+01:00</updated><id>http://jameslieu.github.io/feed.xml</id><title type="html">James Lieu</title><subtitle>Software Developer</subtitle><author><name>James Lieu</name></author><entry><title type="html">How To Improve Retention Rate When Learning</title><link href="http://jameslieu.github.io/how-to-improve-retention-rate-when-learning/" rel="alternate" type="text/html" title="How To Improve Retention Rate When Learning" /><published>2020-06-07T00:00:00+01:00</published><updated>2020-06-07T00:00:00+01:00</updated><id>http://jameslieu.github.io/how-to-improve-retention-rate-when-learning</id><content type="html" xml:base="http://jameslieu.github.io/how-to-improve-retention-rate-when-learning/">&lt;p&gt;For me personally, I struggle to remember much of conversations I‚Äôve had, places I‚Äôve visited or content I‚Äôve read.&lt;/p&gt;

&lt;p&gt;It‚Äôs one of the reasons why I find little value in travelling abroad for holidays. Not being able to remember much when compared to the cost associated, makes the whole experience less worth it for me from a financial perspective.&lt;/p&gt;

&lt;p&gt;My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.&lt;/p&gt;

&lt;h2 id=&quot;the-learning-pyramid-&quot;&gt;The Learning Pyramid üéì&lt;/h2&gt;

&lt;p&gt;There is a representation for retention for different types of learning called  &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;. Which I ironically learned from someone else ‚Äòteaching‚Äô it to me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/Learning-Pyramid.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The learning pyramid is a group of popular learning models and representations relating different degrees of retention induced from various type of learning.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Retention rate&lt;/th&gt;
      &lt;th&gt;Learning activity before test of knowledge&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;90%&lt;/td&gt;
      &lt;td&gt;Teach someone else/use immediately.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;75%&lt;/td&gt;
      &lt;td&gt;Practice what one learned.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50%&lt;/td&gt;
      &lt;td&gt;Engaged in a group discussion.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30%&lt;/td&gt;
      &lt;td&gt;Watch a demonstration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;20%&lt;/td&gt;
      &lt;td&gt;Watch audiovisual.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10%&lt;/td&gt;
      &lt;td&gt;Reading.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5%&lt;/td&gt;
      &lt;td&gt;Listening to a lecture.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;, if I just read or listen to a lecture, the retention rate for that knowledge is low. However, if I were to practice what I‚Äôve learned or teach someone else, then my retention rate would be substantially higher.&lt;/p&gt;

&lt;h2 id=&quot;improving-my-retention-rate-&quot;&gt;Improving My Retention Rate üìà&lt;/h2&gt;

&lt;p&gt;While I don‚Äôt actively teach anyone, I can think of some ways to practice what I‚Äôve learned (depending on the topic).
Alternatively, I think writing notes on what I‚Äôve learned, can at least allow me to re-read key points and hopefully absorb the knowledge better.&lt;/p&gt;

&lt;p&gt;As I learn something either from a book, from someone at work or an article on the internet, it‚Äôs probably a good idea to write notes somewhere I visit regularly so I can re-read it. I used to write in a journal, both physical and on the computer, but I never read from there regularly enough. So I think I‚Äôll try adding these notes on this blog instead.&lt;/p&gt;

&lt;p&gt;Writing in my own words can be a way to improve my understanding of the topic. Also leaving the notes somewhere I can access and shared publicly can maybe be a form of ‚Äòteaching‚Äô as well.&lt;/p&gt;

&lt;p&gt;Although, I suspect some of the notes will be written based on content I‚Äôve read somewhere else, so depending on the content, I may or may not write it in my own words.&lt;/p&gt;

&lt;p&gt;It will likely be written in similar way to taking notes when watching a lecture or powerpoint presentation unlike previous blog posts where they‚Äôre written in a perspective where I‚Äôm sharing my opinion on a topic.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;For me, I‚Äôve been reading more and also stumbling across articles on the internet that has great nuggets of information and not being able to remember much of it is the issue.&lt;/p&gt;

&lt;p&gt;Writing more is only &lt;strong&gt;one&lt;/strong&gt; way for me to address this and leaving them somewhere I can easily read and share in the form of blog posts is the plan, thankfully I‚Äôve taken a liking to writing lately.&lt;/p&gt;

&lt;p&gt;In many ways, I‚Äôm already resolving this issue by adding blog entries. However, they‚Äôre often based on topics on my mind, I wish to share, I do some degree of research and thinking before I write.&lt;/p&gt;

&lt;p&gt;For this however, writing notes as and when I learn something of value is where I think is slightly different. And so I think I‚Äôll prefix these particular posts with &lt;strong&gt;‚Äù&amp;lt;Category&amp;gt; Notes: &amp;lt;title&amp;gt;‚Äú&lt;/strong&gt; i.e. ‚ÄúProgramming Notes: Software Construction‚Äù&lt;/p&gt;

&lt;p&gt;I don‚Äôt expect anyone to read these but myself, it will primarily be used as a place for me to refer or to stumble across it if I ever browse through my blog. But the end goal is the continued learning and hopefully a strong retention rate off the back of it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I struggle to remember much of conversations I've had, places I've visited or content I've read. My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.</summary></entry><entry><title type="html">Pluralsight Review</title><link href="http://jameslieu.github.io/pluralsight-review/" rel="alternate" type="text/html" title="Pluralsight Review" /><published>2020-06-05T00:00:00+01:00</published><updated>2020-06-05T00:00:00+01:00</updated><id>http://jameslieu.github.io/pluralsight-review</id><content type="html" xml:base="http://jameslieu.github.io/pluralsight-review/">&lt;p&gt;On 17th Oct 2019 I‚Äôve purchased an annual Pluralsight subscription.&lt;/p&gt;

&lt;p&gt;I‚Äôve watched it on and off around that time but since 24th February 2020 I‚Äôve been watching it almost daily now and thought to myself to write a review here on my blog.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Pluralsight is a premium video streaming service dedicated to teaching courses relating to technology such as Software Development, Cyber Security and IT Ops.&lt;/p&gt;

&lt;p&gt;The courses are focused on a specific topic which is broken down into smaller digestible videos.&lt;/p&gt;

&lt;h3 id=&quot;pricing-plans&quot;&gt;Pricing Plans&lt;/h3&gt;

&lt;p&gt;There are three personal plans you can choose from.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The monthly plan costs &lt;strong&gt;¬£24.00pcm&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;the annual subscription &lt;strong&gt;¬£245.00&lt;/strong&gt; per year&lt;/li&gt;
  &lt;li&gt;the premium plan is &lt;strong&gt;¬£370.00&lt;/strong&gt; per year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I had gone with the annual subscription as my company offered this as a perk. Although when I paid via PayPal, it had used the US pricing which was &lt;strong&gt;$299.00&lt;/strong&gt; and then I accrued an additional charge of &lt;strong&gt;¬£7.00&lt;/strong&gt; from my bank because of that transaction My mistake.&lt;/p&gt;

&lt;p&gt;The monthly cost is a bit more affordable, but going for the annual cost is lower overall (versus being on the monthly plan for 12 months). If you‚Äôre planning on using for under 10 months then the monthly plan would work out cheaper.&lt;/p&gt;

&lt;h2 id=&quot;content&quot;&gt;Content&lt;/h2&gt;

&lt;p&gt;So the main service is the huge video library of various courses you can learn from. It covers multiple specialities and technologies in different areas. For example, for software development, there are courses in C#, JavaScript, .NET Core, VueJS,  AWS, Azure etc.&lt;/p&gt;

&lt;p&gt;There are other types of programming topics such as design patterns, domain driven design, unit testing and courses outside of technology such as ‚ÄòMindfulness for Technologists‚Äô or ‚ÄòCommunications for Technologists‚Äô.&lt;/p&gt;

&lt;p&gt;The video library is occasionally updated and new courses added regularly.&lt;/p&gt;

&lt;p&gt;Each course and its video clips are pretty good. The quality of the content is done to a high standard and the videos are concise and  the length of the video clips are short enough to keep your attention.&lt;/p&gt;

&lt;p&gt;One thing I noticed is that feels like each video clip speed is slower than how the course author recorded it. So I have to watch it at 1.5x - 2.0x speed in order for it to sound more natural. This suggests that the courses are actually shorter than it claims. It also skews the usage statistics as watching a course for &lt;strong&gt;45 minutes&lt;/strong&gt; will record as &lt;strong&gt;60 minutes&lt;/strong&gt; in the report.&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;h3 id=&quot;paths-and-skill-iq&quot;&gt;Paths and Skill IQ&lt;/h3&gt;
&lt;p&gt;Pluralsight has a nice feature called ‚ÄòPaths‚Äô. Paths are a collection of courses which were curated by Pluralsight to provide a degree of progression for the user as they learn. It is broken down into ‚ÄòBeginner‚Äô, ‚ÄòIntermediate‚Äô  and ‚ÄòAdvance‚Äô categories each containing courses of the relevant level.&lt;/p&gt;

&lt;p&gt;Before you begin a path, you‚Äôre encouraged to take a ‚ÄòSkill IQ‚Äô test in order to recommend you a category based on how well you do.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-0.png&quot; /&gt;
&lt;em&gt;My Current Skill IQ rating as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They also allow you to take this test as many times you like. I recommend doing it a few months after starting a path. It‚Äôs good to see how you‚Äôve progressed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-1.png&quot; /&gt;
&lt;em&gt;My Skill IQ history&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So in this example, I had taken the C# Skill IQ on 3rd February 2020 and had scored around 100. When I took the test again on April 16th 2020, my score is now at &lt;strong&gt;206&lt;/strong&gt; which moves me a from &lt;strong&gt;Proficient&lt;/strong&gt; to just above &lt;strong&gt;Expert&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This isn‚Äôt some indicator of my &lt;em&gt;actual&lt;/em&gt; skill level really but is scored based on how well I answered the multiple choice questions in the test. Some questions, I must admit, I did not know the answer to but had answered correctly either by accident or answering using process of elimination.&lt;/p&gt;

&lt;p&gt;What I liked about the Path feature is that it provides me some direction when deciding what course or videos to watch. At the time, I had selected the C# path and seeing the courses in their associated category based on the skill level helps me choose which course to take next.&lt;/p&gt;

&lt;p&gt;One minor critique I have of the ‚ÄòSkill IQ‚Äô is, it may discourage the user from considering courses that are in the lower skill category. I think even though I have some experience with C# (in this scenario), that doesn‚Äôt necessarily mean I‚Äôm an ‚Äòexpert‚Äô because my ‚ÄòSkill IQ‚Äô score claims I am. Even with many years of experience, there can be gaps in your knowledge base and so the user shouldn‚Äôt ignore courses in a lower skill category such as the ‚ÄòC# fundamentals‚Äô course.&lt;/p&gt;

&lt;h2 id=&quot;personal-profile&quot;&gt;Personal Profile&lt;/h2&gt;

&lt;p&gt;Pluralsight provides some data to help you track your progress. Its good to be able to see what your daily streak is and compare progress on a month to month basis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-2.png&quot; /&gt;
&lt;em&gt;My Personal Profile as of 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;These kind of charts can be very insightful and motivate you to maintain your daily/monthly streaks. Also to give some indication of the value you‚Äôre getting out of the subscription.&lt;/p&gt;

&lt;h2 id=&quot;engagement&quot;&gt;Engagement&lt;/h2&gt;

&lt;p&gt;Pluralsight sends monthly usage statistics to your email. This reports on&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How many minutes watched&lt;/li&gt;
  &lt;li&gt;How many minutes watched since the previous month&lt;/li&gt;
  &lt;li&gt;Total over past three months&lt;/li&gt;
  &lt;li&gt;How many video clips completed&lt;/li&gt;
  &lt;li&gt;Most viewed subject&lt;/li&gt;
  &lt;li&gt;Current daily streak&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-3.png&quot; /&gt;
&lt;em&gt;My monthly usage statistics email received on 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs good to see your progress broken down like this but I can also see that it was designed to ‚Äòappear‚Äô better than it actually is.&lt;/p&gt;

&lt;p&gt;For example, the report is broken down into minutes instead of hours. I wonder if it‚Äôs because it doesn‚Äôt look as good if you‚Äôre a casual user who doesn‚Äôt log in as much.&lt;/p&gt;

&lt;p&gt;For me personally though, it‚Äôs pretty insightful and motivating.
It also presents some of the courses I‚Äôve just started as well including your progress.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-4.png&quot; /&gt;
&lt;em&gt;My monthly usage statistics email received on 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Seeing a report like this can prompt you to unsubscribe to the service if you‚Äôre not using it enough and you‚Äôre on the monthly plan. If you‚Äôre on the annual plan then you wouldn‚Äôt be able to unsubscribe straight away but you may consider not renewing your membership the following year.&lt;/p&gt;

&lt;p&gt;One problem I can see is that its also a little inaccurate for me personally as I watch the course at 1.5x - 2.0x speed which isn‚Äôt factored in the usage statistics.&lt;/p&gt;

&lt;p&gt;There are many other features I haven‚Äôt mentioned such as being able to write notes and downloading exercise files to with when watching a course, I‚Äôve never personally used those features and so I shouldn‚Äôt comment on them.&lt;/p&gt;

&lt;h2 id=&quot;pros-and-cons&quot;&gt;Pros and Cons&lt;/h2&gt;

&lt;p&gt;I‚Äôll quickly break down my opinion on the pros and cons of Pluralsight.&lt;/p&gt;

&lt;h6 id=&quot;pros&quot;&gt;Pros&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;The course library is abundant and varied&lt;/li&gt;
  &lt;li&gt;The authors and structure of the content is excellent&lt;/li&gt;
  &lt;li&gt;I like the usage statistics on both the profile section and the monthly emails&lt;/li&gt;
  &lt;li&gt;The Path and Skill IQ feature&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;cons&quot;&gt;Cons&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;It‚Äôs really expensive&lt;/li&gt;
  &lt;li&gt;I wished there were more business, communication or office related courses&lt;/li&gt;
  &lt;li&gt;Each video clip speed feels slower than how the course author recorded it&lt;/li&gt;
  &lt;li&gt;Usage Statistics can be inaccurate depending on what speed you‚Äôre watching the courses in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the cons can be written off depending on the user. But the main one I think is the price which is arguably strong enough to supercede &lt;strong&gt;all&lt;/strong&gt; of the pros I‚Äôve listed here. While the content and features are nice, I‚Äôm wondering in terms of raw value, is it worth the cost? Especially because there are other cheaper services you can subscribe to.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Overall I like the service, it‚Äôs great for IT professionals and the software development courses I‚Äôve seen so far are very good. Watching courses like these can really improve your knowledge base on the subject you choose. There are courses for users of all levels and being able to track your progress through the Skill IQ and usage statistics are very welcome features. I had heard that Pluralsight used to specialize in C# specific courses, which is probably why there are so many to choose from.&lt;/p&gt;

&lt;p&gt;The main issue I have is the price. Its very expensive, so to justify it, you need to make the most of the subscription by watching the course.&lt;/p&gt;

&lt;p&gt;There are alternative services which are very similar to Pluralsight but cheaper such as &lt;a href=&quot;https://www.linkedin.com/learning/&quot;&gt;LinkedIn Learning&lt;/a&gt;. Its also worth noting that there are free resources as well you can try, while its true that the content or teaching quality may not be as good as the paid courses they can still be very good. So its worth looking around.&lt;/p&gt;

&lt;p&gt;Either way, I would only recommend it if you‚Äôre able to get your company to pay for it, otherwise I‚Äôd consider another cheaper service or opt for the free options if you can‚Äôt afford to pay for the premium courses. I probably wouldn‚Äôt renew my subscription if my company can‚Äôt cover the costs.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I've been using Pluralsight for a few months now. Here is my review.</summary></entry><entry><title type="html">Are Ruby Jobs On A Decline?</title><link href="http://jameslieu.github.io/are-ruby-jobs-on-a-decline/" rel="alternate" type="text/html" title="Are Ruby Jobs On A Decline?" /><published>2020-06-03T00:00:00+01:00</published><updated>2020-06-03T00:00:00+01:00</updated><id>http://jameslieu.github.io/are-ruby-jobs-on-a-decline</id><content type="html" xml:base="http://jameslieu.github.io/are-ruby-jobs-on-a-decline/">&lt;h2 id=&quot;a-decline-in-ruby-opportunities-&quot;&gt;A Decline in Ruby Opportunities? üìâ&lt;/h2&gt;

&lt;p&gt;I love Ruby but would I recommend learning it today? No.&lt;/p&gt;

&lt;p&gt;Ruby was my first programming language and I love it even today.&lt;/p&gt;

&lt;p&gt;Ruby was designed to make programming fun. It is succinct and reads like English. To use alongside Ruby on Rails can make for a satisfying coding experience. The community is very welcoming and the vast number of open-source libraries (known as Gems) have made developing with Ruby enjoyable.&lt;/p&gt;

&lt;p&gt;But despite this, there seems to be a decline in job opportunities in London.&lt;/p&gt;

&lt;p&gt;According to this &lt;a href=&quot;https://blog.makersacademy.com/what-is-the-demand-for-ruby-developers-in-london-today-42e05f23656d&quot;&gt;blog post&lt;/a&gt; published in &lt;strong&gt;28th March 2013&lt;/strong&gt;. It states:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Indeed.co.uk lists &lt;a href=&quot;https://www.indeed.co.uk/Ruby-Developer-jobs-in-London&quot;&gt;1,136 Ruby jobs in London&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The search query for job title &lt;strong&gt;Ruby Developer&lt;/strong&gt; in &lt;strong&gt;London&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;1,136&lt;/strong&gt; Ruby Jobs In London in &lt;strong&gt;March 2013&lt;/strong&gt;. If you were to click that &lt;a href=&quot;https://www.indeed.co.uk/Ruby-Developer-jobs-in-London&quot;&gt;same link&lt;/a&gt; today (&lt;strong&gt;3rd June 2020&lt;/strong&gt;). There are now only &lt;strong&gt;266&lt;/strong&gt; jobs which is a &lt;strong&gt;76.58%&lt;/strong&gt; decline in 7 years which is huge!&lt;/p&gt;

&lt;p&gt;This was always a concern of mine, I remember speaking to a colleague back in &lt;strong&gt;2014&lt;/strong&gt;. Our tech stack was Ruby on Rails, I asked him whether he thinks Ruby and Ruby on Rails is losing its popularity. He said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;even if that happens, there will be a lot of projects to maintain and so the job opportunities will still be there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I‚Äôm a little less confident about that statement today. Perhaps that was already happening when I asked him. While there are still a few opportunities (in London), its not looking healthy when compared to other programming languages.&lt;/p&gt;

&lt;h2 id=&quot;is-there-a-reason-to-learn-ruby-today-&quot;&gt;Is there a reason to learn Ruby today? ü§î&lt;/h2&gt;

&lt;p&gt;From a career standpoint, in my opinion, no. I think that if you haven‚Äôt already had experience with Ruby, you should avoid it, especially if you‚Äôre a beginner. There are other languages that may be more worth investing your time into, particularly due to the job opportunities.&lt;/p&gt;

&lt;p&gt;As of &lt;strong&gt;3rd of June 2020&lt;/strong&gt;, when searching for job opportunities from &lt;a href=&quot;https://indeed.co.uk&quot;&gt;Indeed&lt;/a&gt;, I‚Äôve filtered on job title: &lt;strong&gt;&amp;lt;programming language&amp;gt; Developer&lt;/strong&gt; from &lt;strong&gt;London&lt;/strong&gt; (which is the same filter as the blog post above) for some modern programming languages. Here are the results:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;‚ÄØLanguage‚ÄØ&lt;/th&gt;
      &lt;th&gt;Number Of Jobs&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;C#&lt;/td&gt;
      &lt;td&gt;865&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C++&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Go&lt;/td&gt;
      &lt;td&gt;568&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;1727&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JavaScript&lt;/td&gt;
      &lt;td&gt;1589&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PHP&lt;/td&gt;
      &lt;td&gt;356&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;1076&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;266&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Based on these numbers alone, as a beginner, you‚Äôre better off choosing between JavaScript, Python, C# or Java. In fact, all of those Ruby Job Opportunities seem to start at &lt;strong&gt;¬£45,000&lt;/strong&gt; anyway meaning that they‚Äôre not roles aimed towards juniors.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-1.png&quot; style=&quot;border: 1px solid #ccc&quot; /&gt;
&lt;em&gt;Job opportunities on Indeed.co.uk as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;already-an-experienced-developer-&quot;&gt;Already An Experienced Developer? ü§ì&lt;/h2&gt;

&lt;p&gt;What if you‚Äôre an experienced developer. Is there value in learning Ruby? Maybe.&lt;/p&gt;

&lt;p&gt;According to the very recent &lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#top-paying-technologies&quot;&gt;2020 Stack Overflow Survey&lt;/a&gt;. Despite Ruby‚Äôs decline, it is in the most top paying technologies ranking at 5th place globally.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-2.png&quot; /&gt;
&lt;em&gt;Top Paying Technologies - Stack Overflow Survey 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While it‚Äôs true that there are fewer Ruby job opportunities, the salaries for those jobs start at &lt;strong&gt;¬£45,000&lt;/strong&gt; and can be as high as &lt;strong&gt;¬£100k&lt;/strong&gt; full-time. There seems to be a high number of contract work as well, starting at &lt;strong&gt;¬£450&lt;/strong&gt; per day and as high as &lt;strong&gt;¬£650&lt;/strong&gt; per day.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-3.png&quot; style=&quot;border: 1px solid #ccc&quot; /&gt;
&lt;em&gt;Ruby Developer Salary Estimates on Indeed.co.uk as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you already experienced with Ruby then there is value continue using it as the salaries are very generous, the disadvantages are that there are fewer opportunities meaning its harder to get a (Ruby Developer) role if that‚Äôs all you can do.&lt;/p&gt;

&lt;p&gt;Its like my old colleague said:&lt;/p&gt;

&lt;h6 id=&quot;there-will-be-a-lot-of-projects-to-maintain-and-so-the-job-opportunities-will-still-be-there&quot;&gt;‚Ä¶there will be a lot of projects to maintain and so the job opportunities will still be there.&lt;/h6&gt;

&lt;p&gt;It would seem there are some opportunities but very few when compared to similar programming languages like Python and JavaScript.&lt;/p&gt;

&lt;p&gt;There are other considerations such as, will there be innovation? New interesting greenfield projects you‚Äôll be working on? Or will it be legacy projects and maintenance?&lt;/p&gt;

&lt;p&gt;Will you even enjoy Ruby? While I personally love Ruby, according to the &lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-dreaded&quot;&gt;2020 Stack Overflow Survey&lt;/a&gt;, Ruby is &lt;strong&gt;7th most dreaded Programming language&lt;/strong&gt;, one below PHP who is 6th place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-4.png&quot; /&gt;
&lt;em&gt;Most Dreaded - Stack Overflow Survey 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;An experienced developer wouldn‚Äôt struggle too much to learn Ruby quickly but there are again other programming languages which pay just as well and at the same time seem to be evolving whereas Ruby is a little slow (no pun intended) to innovate, improve or grow. Even PHP is getting better with each version.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;It‚Äôs a shame, I really liked Ruby. I actually initially moved on from Ruby because I had moved out of London to an area where there was only &lt;strong&gt;one&lt;/strong&gt; Ruby position where I had interviewed and didn‚Äôt get the role, I wrote about my &lt;a href=&quot;/moving-from-ruby-to-php/&quot;&gt;move from Ruby to PHP here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In January 2019, a recruiter approached me with a remote Ruby opportunity. I had said to him that I would normally not proceed with that role because Ruby seemed to be losing its popularity and he didn‚Äôt believe me, he recruits for Ruby roles on a daily basis and was convinced I was wrong. He probably had a few opportunities on his desk but perhaps not looking at the bigger picture.&lt;/p&gt;

&lt;p&gt;That said, I did actually complete a tech test for them and &lt;a href=&quot;/prime-factorization/&quot;&gt;wrote a blog post about it&lt;/a&gt;. Really enjoyed completing that one as well although I didn‚Äôt receive a response from the company after submitting it.&lt;/p&gt;

&lt;p&gt;Given the decline in job opportunities for Ruby, I personally would consider specializing in other programming languages. As mentioned above, particularly if you live in London, specializing in JavaScript, Java, Python or C# would be my top picks.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I love Ruby but would I recommend learning it today? No.</summary></entry><entry><title type="html">Achieve Your Most Ambitious Goals</title><link href="http://jameslieu.github.io/achieve-your-most-ambitious-goals/" rel="alternate" type="text/html" title="Achieve Your Most Ambitious Goals" /><published>2020-06-01T00:00:00+01:00</published><updated>2020-06-01T00:00:00+01:00</updated><id>http://jameslieu.github.io/achieve-your-most-ambitious-goals</id><content type="html" xml:base="http://jameslieu.github.io/achieve-your-most-ambitious-goals/">&lt;p&gt;I highly recommend this TED talk: &lt;a href=&quot;https://www.youtube.com/watch?v=TQMbvJNRpLE&quot;&gt;How to Achieve Your Most Ambitious Goals&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author talks about how he applies marginal changes in his routine to get things done.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Even a marginal improvement in our process can have a huge impact on our end result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;putting-it-into-practice-&quot;&gt;Putting it into Practice üèÉ&lt;/h2&gt;

&lt;p&gt;Imagine wanting to finish a book üìñ.&lt;/p&gt;

&lt;p&gt;Instead of thinking about the end goal of reading the whole thing, change your mindset to think about the smallest step to achieving that goal instead.&lt;/p&gt;

&lt;p&gt;Start with &lt;strong&gt;one word&lt;/strong&gt;,  that step of reading &lt;strong&gt;one word&lt;/strong&gt; becomes reading &lt;strong&gt;two words&lt;/strong&gt;, then &lt;strong&gt;ten words&lt;/strong&gt;. That then becomes reading &lt;strong&gt;one paragraph&lt;/strong&gt; which then becomes reading &lt;strong&gt;a chapter&lt;/strong&gt; so on and so fourth until you finish your book. üìï&lt;/p&gt;

&lt;h3 id=&quot;-even-the-tiniest-action-is-worthwhile&quot;&gt;üòä Even the tiniest action is worthwhile&lt;/h3&gt;

&lt;p&gt;How I currently &lt;a href=&quot;/how-i-build-habits&quot;&gt;build my habit&lt;/a&gt; for reading, is to just set the task to &lt;strong&gt;10 pages&lt;/strong&gt;. Still a small task, not quite as small as starting with a single word, I do like this idea of breaking that task down even further. Progressing with the mentality that even the tiniest action is worthwhile and that those actions can compound, which can have a huge impact on our end result.&lt;/p&gt;

&lt;p&gt;It is this mindset that can motivate you to do &lt;em&gt;something&lt;/em&gt;. To progress you into the right direction whatever that may be.&lt;/p&gt;

&lt;p&gt;Simply putting down the tv remote can be considered its own action, putting on your running clothes, stepping out of your front door, take one step, then two steps then a walk, then a jog, then you‚Äôll be running before you know it üèÉ.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;This mindset resonates with &lt;a href=&quot;/how-i-build-habits&quot;&gt;how I build my habits&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instead of focusing on the end result and risk being put off by it, focus on the smallest step first, even doing just that is still progress, and if you‚Äôre able to do this consistently, you‚Äôll be surprised how productive you can be.&lt;/p&gt;

&lt;p&gt;Remember the key take away:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make any task more approachable and apply a marginal adjustment to your routine.&lt;/strong&gt; üí™ üí™&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Even a marginal improvement in our process can have a huge impact on our end result.</summary></entry><entry><title type="html">How To Write a Programming Journal</title><link href="http://jameslieu.github.io/how-to-write-a-programming-journal/" rel="alternate" type="text/html" title="How To Write a Programming Journal" /><published>2020-05-30T00:00:00+01:00</published><updated>2020-05-30T00:00:00+01:00</updated><id>http://jameslieu.github.io/how-to-write-a-programming-journal</id><content type="html" xml:base="http://jameslieu.github.io/how-to-write-a-programming-journal/">&lt;p&gt;I‚Äôve been going through my old notes and found this section: ‚ÄúHow to write a programming journal‚Äù written on &lt;strong&gt;8th July 2018&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This was when I had decided to start daily journaling about programming topics and challenges I‚Äôve encountered (although I had skipped many days and stopped altogether at the end of the year).&lt;/p&gt;

&lt;p&gt;I likely had done some research on writing a programming journal may have copied some of the content on this post. I can‚Äôt remember whether I wrote my own take on the research I did on this or whether it is a direct copy-and-paste. Regardless, I‚Äôll share my notes here.&lt;/p&gt;

&lt;h2 id=&quot;the-benefits-of-journaling-&quot;&gt;The Benefits of Journaling üìì&lt;/h2&gt;

&lt;h6 id=&quot;-it-helps-you-articulate-your-thoughts&quot;&gt;ü§î It helps you articulate your thoughts.&lt;/h6&gt;

&lt;p&gt;If you‚Äôre like me, you probably tend to ‚Äúthink through‚Äù your coding problems. Trying to implement an algorithm? You run each step through your mind. Need to design a new class? You sit in front of a blank class file, thinking about what variables and methods it‚Äôll need. Stuff like that.&lt;/p&gt;

&lt;p&gt;And that‚Äôs fine for small stuff, but can be unwieldy ‚Äî even counterproductive ‚Äî when you have to tackle something more advanced and/or complex.&lt;/p&gt;

&lt;p&gt;That‚Äôs when a journal comes in handy. It gives you a place to work through your thoughts (e.g. algorithm steps, design process, or whatever else) in a concrete way. You can see everything before you. Not only does it make you less prone to errors, but it‚Äôll help solidify those concepts in your mind.&lt;/p&gt;

&lt;h6 id=&quot;-it-can-make-you-more-productive&quot;&gt;üí™ It can make you more productive.&lt;/h6&gt;

&lt;p&gt;The above-mentioned process of ‚Äúunloading your thoughts‚Äù is more important than you might realize. As it turns out, the simple act of jotting down a task/problem/thought can free up your mind and improve your concentration.&lt;/p&gt;

&lt;p&gt;For example, unloading the details of that newly-designed algorithm into your journal can let you focus on other tasks without wasting ‚Äúbrain CPU cycles‚Äù on keeping those details at the back of your mind.&lt;/p&gt;

&lt;p&gt;A journal also forces you to slow down and think. It‚Äôs tempting to rush into an implementation, and sometimes that works out fine, but you‚Äôll be better off if you think through the entire solution before you write even one line of code. One hour of planning can prevent many hours of debugging!&lt;/p&gt;

&lt;h6 id=&quot;-it-records-a-history-of-your-progress-and-development&quot;&gt;üìà It records a history of your progress and development.&lt;/h6&gt;

&lt;p&gt;This may be the biggest benefit of journaling, especially for new coders. The hardest part about being a newbie is being blind to your own progress and feeling like you aren‚Äôt moving forward. But each journal entry represents a discrete achievement. It feels good, and that‚Äôs priceless when learning.&lt;/p&gt;

&lt;p&gt;It‚Äôs also useful for staying motivated on long-term projects because the journal acts as an objective reminder of how far you‚Äôve come. When you feel like you aren‚Äôt making progress, the journal tells you that you have ‚Äî and that can be a great motivating boost.&lt;/p&gt;

&lt;p&gt;Lastly, a journal can be physical evidence when you run into patent or copyright issues, but only if you date and sign your entries. This probably won‚Äôt be much of an issue unless you work on big projects with millions on the line, though.&lt;/p&gt;

&lt;h2 id=&quot;what-to-write-in-a-programming-journal-&quot;&gt;What to Write in a Programming Journal üìì&lt;/h2&gt;

&lt;h6 id=&quot;-date-and-signature&quot;&gt;üìÜ Date and signature&lt;/h6&gt;
&lt;p&gt;Always date your entries for posterity. If your note-taking app can do it automatically, even better.&lt;/p&gt;

&lt;h6 id=&quot;-problems-encountered&quot;&gt;‚Åâ Problems encountered&lt;/h6&gt;
&lt;p&gt;When you run into an evasive bug or a conceptually-tough algorithm, write about it. Start with a description, when it seems to occur, and a list of possible causes. If you can reproduce it, include those steps. Sometimes the act of writing these things can lead you to a solution.&lt;/p&gt;

&lt;h6 id=&quot;-solutions-explored&quot;&gt;üéâ Solutions explored&lt;/h6&gt;
&lt;p&gt;As you try to solve the problems above, record your attempts to fix them. If the solution works, great! If it doesn‚Äôt, record why it failed. If a solution is suboptimal, make note of the shortcomings so you can iterate later.&lt;/p&gt;

&lt;p&gt;This methodical approach to bug-fixing is extremely helpful, especially when you‚Äôre first starting out and feel overwhelmed by a bug or algorithm ‚Äî but veterans can benefit from this too.&lt;/p&gt;

&lt;h6 id=&quot;-log-your-successes&quot;&gt;üìù Log your successes&lt;/h6&gt;
&lt;p&gt;Keep a separate list of every win along the way, perhaps in the back of your notebook. Did that algorithm finally click? Or maybe your five-day search for a bug finally paid off? Write those wins down! Later, when you‚Äôre feeling stupid or unproductive, you can refer back and see all of the things you‚Äôve accomplished.&lt;/p&gt;

&lt;p&gt;It‚Äôs a simple thing, but can have huge results. I‚Äôve personally found it effective in defeating programming burnout. And as your ‚ÄúHall of Successes‚Äù grows longer, it becomes more powerful as a reminder of your skills and progress.&lt;/p&gt;

&lt;h6 id=&quot;-things-to-revisit-later&quot;&gt;ü§ì Things to revisit later&lt;/h6&gt;
&lt;p&gt;A bug-tracker might be better for tracking todos and bugs (duh) but a journal can be great for jotting down concepts, algorithms, questions, topics, and other ‚Äúthings‚Äù that you can‚Äôt look into right now but want to research later.&lt;/p&gt;

&lt;h6 id=&quot;-ambitions-and-goals&quot;&gt;ü•á Ambitions and goals&lt;/h6&gt;

&lt;p&gt;This one‚Äôs not so much about programming as it is about your future as a programmer. Where do you eventually want to end up? How did today‚Äôs session or this year‚Äôs project take you toward that goal? Or did it set you back? These kinds of entries can be great for re-centering yourself and your direction.&lt;/p&gt;

&lt;h6 id=&quot;-lessons-learned&quot;&gt;ü§¶ Lessons learned&lt;/h6&gt;
&lt;p&gt;After every session, it can be nice to recap everything you did and think about what you learned. Similarly, you should think about recapping every major milestone on your current project and the lessons you‚Äôve learned. This is why developers do post-mortems ‚Äî by articulating lessons learned, you‚Äôre more likely to remember them going forward.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;While I hadn‚Äôt written in my programming journal in a while, I can see why it can be useful, especially if you‚Äôre a junior.&lt;/p&gt;

&lt;p&gt;I‚Äôve been reading back on my old journal entries written in 2018. It has some notes I made of concepts or questions I had, notes of events of that particular day and how I felt on those days including decisions that were made by the team or by management. Its a great way to see how I‚Äôve grown since writing those entries.&lt;/p&gt;

&lt;p&gt;I don‚Äôt know whether I‚Äôll start journaling again but in many ways, these blog posts I‚Äôm writing are a form of journaling for me. I enjoy writing them as well as reading through them retrospectively. I may start to go through my old journal entries and create blog posts on the ones I think would be good to share.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I've been going through my old notes and found this section. &quot;How to write a programming journal&quot; written on 8th July 2018.</summary></entry><entry><title type="html">Journal Template</title><link href="http://jameslieu.github.io/journal-template/" rel="alternate" type="text/html" title="Journal Template" /><published>2020-05-30T00:00:00+01:00</published><updated>2020-05-30T00:00:00+01:00</updated><id>http://jameslieu.github.io/journal-template</id><content type="html" xml:base="http://jameslieu.github.io/journal-template/">&lt;p&gt;This was also found in my old notes dated in &lt;strong&gt;24th March 2019&lt;/strong&gt;. A good tip for journaling worth sharing.
For regular journaling, a common stuggle is consistency. I‚Äôve done some research online for tips and tricks to help with this issue.
These ones I‚Äôve taken as I usually journal in the evenings. I likely copied these from other sources although I don‚Äôt know where.&lt;/p&gt;

&lt;hr /&gt;

&lt;h6 id=&quot;-what-did-i-achieve-today&quot;&gt;üòâ What did I achieve today?&lt;/h6&gt;

&lt;p&gt;This question helps me identify whether I actually achieved what I set out to accomplish in the morning, or if I got sidetracked. One lesson I‚Äôve learned from answering this question is it‚Äôs easy to overestimate what you think you can achieve in a day, but I remind myself it‚Äôs not what you achieve in a day, it‚Äôs what you achieve eventually. This is what really matters.&lt;/p&gt;

&lt;h6 id=&quot;-what-lessons-did-i-learn&quot;&gt;üôÑ What lessons did I learn?&lt;/h6&gt;

&lt;p&gt;This is my favourite question to answer. This is where you journal your ‚ÄúAha!‚Äù moments. Answers can range from personal, ‚ÄúI learned how to say no to dessert‚Äù, to skill-based, ‚ÄúI learned how to remove plosives in an audio recording using Audacity‚Äù. The more thorough you are, here, the more you can return to it again and again and learn from it.&lt;/p&gt;

&lt;h6 id=&quot;-im-grateful-for&quot;&gt;üôÇ I‚Äôm grateful for‚Ä¶&lt;/h6&gt;

&lt;p&gt;Writing down three new things that you‚Äôre grateful for, for 21 days in a row, can actually rewire your brain, allowing your brain to work more optimistically and more successfully. I also thank my problems and ask myself what‚Äôs great about them. Realising my problem was great because I could make an improvement on the original.&lt;/p&gt;

&lt;h6 id=&quot;-how-am-i-feeling-right-now&quot;&gt;üòë How am I feeling right now?&lt;/h6&gt;

&lt;p&gt;This is an opportunity for me to be vulnerable, to let my guard down, to be open without censoring myself. I‚Äôm generally pretty happy, but if I‚Äôm feeling a negative emotion, I‚Äôll identify the cause by using a why drill. I‚Äôll ask myself why I‚Äôm feeling the emotion, in question, five times. This helps me be at the cause, rather than the effect of my concern.&lt;/p&gt;

&lt;h6 id=&quot;-what-are-3-amazing-things-that-happened-today&quot;&gt;üòÅ What are 3 amazing things that happened today?&lt;/h6&gt;

&lt;p&gt;I think it‚Äôs important to bookend your day by focusing on your ‚Äúsmall wins.‚Äù ‚ÄúI said no to a dessert.‚Äù ‚ÄúI resisted the urge to give into temptation.‚Äù ‚ÄúI didn‚Äôt sleep in.‚Äù ‚ÄúI achieved my most important task.‚Äù ‚Ä¶ These tiny advantages build forward momentum and remind us that bigger achievements are within reach.&lt;/p&gt;

&lt;h6 id=&quot;-how-could-i-have-made-today-better&quot;&gt;ü§î How could I have made today better?‚Äù&lt;/h6&gt;

&lt;p&gt;Many of us, when dissatisfied with our day, prefer to write it off, to move past it as quickly and quietly as possible. But by asking yourself how you could have made the day better, you‚Äôre forcing your brain to look for improvements. Your day may have been stressful, but don‚Äôt write it off until you‚Äôve learned something from it. Look for ONE Thing you can do, either prevent it from happening again or to help you deal with it more effectively.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;If you plan on journaling consistently, having a consistent structure for your entries will really help.
There were times where I couldn‚Äôt think of anything to write and therefore put in less effort for that particular entry. Having this template and predefined questions is enough to get you started.&lt;/p&gt;

&lt;p&gt;Furthermore, when reading through each entry retrospectively, you can see the progression of each day and even adapt your behaviour if you see a negative pattern.&lt;/p&gt;

&lt;p&gt;I haven‚Äôt written any journal entries in a while but if I ever get back into it, I‚Äôll likely use this template.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">For regular journaling, a common stuggle is consistency</summary></entry><entry><title type="html">Becoming a Software Developer - Part 1</title><link href="http://jameslieu.github.io/becoming-a-software-developer/" rel="alternate" type="text/html" title="Becoming a Software Developer - Part 1" /><published>2020-05-29T00:00:00+01:00</published><updated>2020-05-29T00:00:00+01:00</updated><id>http://jameslieu.github.io/becoming-a-software-developer</id><content type="html" xml:base="http://jameslieu.github.io/becoming-a-software-developer/">&lt;p&gt;Its been 7 years since I‚Äôve made the decision to change my career and become a developer. And so I thought it would be a great time to write a post on the subject and reflect on my journey to become a software developer.&lt;/p&gt;

&lt;h2 id=&quot;7-years-ago-&quot;&gt;7 Years ago‚Ä¶ üìÜ&lt;/h2&gt;
&lt;p&gt;It all started in early 2013, my previous employer David Kramaley had gotten in touch by email and mentioned how he remembered I was curious about programming and used to ask questions about it when working with him. He said that a Coding Bootcamp could be  something I may be interested in and provided a link to one based in America.&lt;/p&gt;

&lt;p&gt;I really wished I had the original email, I must‚Äôve deleted it when I was cleaning up my inbox because of wanting to reach &lt;a href=&quot;/achieving-inbox-zero/&quot;&gt;Inbox Zero&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I recall correctly, coincidently I had actually become more curious about programming due to hearing about &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;. I had already created an account and have been doing the introduction to programming path. According to my profile, I had created the Codecademy account on &lt;strong&gt;Feb 27th 2013&lt;/strong&gt;. So the email from David would‚Äôve been in early to mid March.&lt;/p&gt;

&lt;p&gt;I really liked the idea of a Coding Bootcamp, learning programming for 10 weeks then being able to get at least a junior position after graduation. This was very attractive to me as I was either unemployed, or I was working a part-time job doing deliveries and/or cashier work at a Chinese take-away. Else it was working my families Fish and Chip shop with my mother. This particular Bootcamp was based in America and I wasn‚Äôt willing to relocate, so I quickly Googled for Coding Bootcamps in the UK, there I discovered Makers Academy.&lt;/p&gt;

&lt;h2 id=&quot;makers-academy-&quot;&gt;Makers Academy üè¢&lt;/h2&gt;

&lt;p&gt;I‚Äôm so thankful that a Coding Bootcamp was based in a location I can attend. One thing I need to mention is that Makers Academy was a start-up company during this time, they had only &lt;strong&gt;just&lt;/strong&gt; started enrolling students in &lt;strong&gt;February 2013&lt;/strong&gt; which was literally the previous month. Here is a link to their blog post: &lt;a href=&quot;https://blog.makersacademy.com/we-just-turned-five-9a45da48206f&quot;&gt;We Just Turned 5&lt;/a&gt; (which should match the dates I mentioned)&lt;/p&gt;

&lt;p&gt;The cohorts were &lt;strong&gt;very&lt;/strong&gt; small, I think fewer than 8 students maybe? I don‚Äôt know exactly how many students there were at the time. But I‚Äôm guessing that this was intentional, the courses are very intensive and require a serious commitment from their students thus Makers Academy were &lt;strong&gt;very selective&lt;/strong&gt; in regards to who they allow to enrol.&lt;/p&gt;

&lt;h2 id=&quot;my-interview-&quot;&gt;My Interview ü§û&lt;/h2&gt;

&lt;p&gt;On &lt;strong&gt;27th March 2013&lt;/strong&gt;, I sent my application. I received a confirmation email and 10 minutes after this, invited to interview at Makers Academy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/becoming-a-software-developer-1.png&quot; style=&quot;height: 100px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had to schedule a time using a &lt;a href=&quot;https://doodle.com&quot;&gt;Doodle&lt;/a&gt; link, which was quite nice. And in the email I was asked:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Before arriving, please complete the first three tracks (Introduction to Ruby, Control Flow in Ruby &amp;amp; Looping with Ruby) at:  http://www.codecademy.com/tracks/ruby&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Perfect, I had been casually using Codecademy anyway. Codecademy still has my old achievements and what day I completed them (which is pretty cool to look at retrospectively):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/becoming-a-software-developer-2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks like I started the ruby track on &lt;strong&gt;April 1st 2013&lt;/strong&gt;, so I guess I wasn‚Äôt as excited as I thought about the tracks at the time. Although, it could be that the appointment I had with Makers Academy was maybe a week or two ahead which was why I didn‚Äôt start the tracks straight away.&lt;/p&gt;

&lt;h2 id=&quot;the-day-of-the-interview-&quot;&gt;The Day of The Interview üìÜ&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: Its worth noting that this was 7 years ago, I may have misremembered some of this and I don‚Äôt have any of my emails to verify any of this.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This was the day I had met with Evgeny Shadchnev - the co-founder. They asked me some basic questions about my background, why I want to do this, what my motivations were and gauge how interested in programming I was.&lt;/p&gt;

&lt;p&gt;We sat down to do a tech test. It was a very basic task that I should‚Äôve learnt through the Codecademy tracks they requested I complete. I can‚Äôt remember the specifics but I do remember failing to complete the (very basic) task. There was another task which was to do a problem solving exercise which I also failed to complete.&lt;/p&gt;

&lt;p&gt;I can‚Äôt remember too well what happened afterwards, Evgeny either told me on the day or via email afterwards that they &lt;strong&gt;cannot accept me into the course&lt;/strong&gt;. I was rejected due to my poor performance. In hindsight, I blame myself for not spending more time going through the Codecademy tracks and studying harder! It was mentioned that I can apply again once I improve on the basics.&lt;/p&gt;

&lt;h2 id=&quot;second-interview-attempt-&quot;&gt;Second Interview Attempt üìÜ&lt;/h2&gt;

&lt;p&gt;I had gone home dejected but I didn‚Äôt give up. I remember immediately applying again, and attending a second interview shortly after (a week or so), and I had again failed the tasks.&lt;/p&gt;

&lt;p&gt;I remember that Evgeny had told this in person this time that, they cannot accept me in the next cohort either because he didn‚Äôt think I was ready. If I remember correctly, he also mentioned that to ‚Äòcode‚Äô I need to have better problem solving skills, this was arguably a skill that cannot be ‚Äòlearned‚Äô and therefore programming was maybe not for me.&lt;/p&gt;

&lt;p&gt;I was devastated but this time I was able to respond to him directly, mentioning that I was very serious about this course and if he were to give me a chance, I will not take it for granted. Thankfully, Evgeny had given me this opportunity and enrolled me onto the course, perhaps he appreciated how persistent and determined I was. This was probably the moment that had truly kickstarted my career.&lt;/p&gt;

&lt;p&gt;I have a theory that my enrolling onto the course was a experiment for him to see whether someone (with poor problem solving skills) like me can cope with the course and truly thrive in this industry.&lt;/p&gt;

&lt;p&gt;I was to join the May 2013 cohort.&lt;/p&gt;

&lt;h2 id=&quot;course-fees-&quot;&gt;Course fees üí∑&lt;/h2&gt;

&lt;p&gt;At the time, the course fees were &lt;strong&gt;¬£5000&lt;/strong&gt; for &lt;strong&gt;10 weeks&lt;/strong&gt;. If you were a female then you would automatically get a discount of &lt;strong&gt;¬£500&lt;/strong&gt; thus costing &lt;strong&gt;¬£4500&lt;/strong&gt;. A bit controversial in my opinion but as a private company they‚Äôre within their rights to charge whatever they want.&lt;/p&gt;

&lt;p&gt;I still have the terms in my email. Here were the payment plan options available to me (in 2013):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Standard Payment Plan&lt;/strong&gt; ‚Äì 50% in advance, 50% over six months following the course&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Advance Payment Plan&lt;/strong&gt; ‚Äì 90% in advance, 10% discount applies&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deferred Payment Plan&lt;/strong&gt; ‚Äì no payment due until after the course, with 20% surcharge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the standed and advance plan, the deposit is payable not later than seven days before the commencement of the course. The deposit is non-refundable if the student withdraws from the course within the seven days prior to the start of the course.&lt;/p&gt;

&lt;p&gt;The caveat was that if Makers Academy hadn‚Äôt received the deposit seven days before the commencement of a course, Makers Academy may, at its option, re-allocate the place reserved for the student to a wait-listed  student in which case the original student will no longer be able to attend the course.&lt;/p&gt;

&lt;h6 id=&quot;-the-standard-plan&quot;&gt;üî≤ The Standard Plan&lt;/h6&gt;

&lt;p&gt;A deposit of 50% up-front and the remaining 50% of the course fee is payable in six equal monthly instalments with the first being due at the  end of the month following the end of the course.&lt;/p&gt;

&lt;p&gt;This for me seemed like a great option for those who wouldn‚Äôt normally be able to afford the fees for the course upfront. So a deposit of ¬£2500 and then a monthly plan to pay the rest &lt;strong&gt;after the course&lt;/strong&gt;. Hopefully the student would‚Äôve managed to secure a junior developer role and then pay back a portion of the fee with their salary each month.&lt;/p&gt;

&lt;h6 id=&quot;-the-deferred-payment-plan&quot;&gt;üî≤ The Deferred Payment Plan&lt;/h6&gt;

&lt;p&gt;The remaining full course fee plus a surcharge of 20% of the course fee is payable in twelve equal monthly instalments with the first being due at the end of the month following the end of the course.&lt;/p&gt;

&lt;p&gt;This option was for those who can‚Äôt pay anything. There are additional terms with this one, one of which the student has to agree that if they get a role through a partner of Makers Academy, the course fee
payments may, at the option of Makers Academy, be paid directly to Makers Academy by the Partner by deduction from the salary of the student. So there are some serious caveats associated with this one, nonetheless provide another great option for some people.&lt;/p&gt;

&lt;h6 id=&quot;-the-advance-payment-plan&quot;&gt;üî≤ The Advance Payment Plan&lt;/h6&gt;

&lt;p&gt;90% in advance and the remaining 10% discounted. This was the plan I had gone for, having no job or money of my own, I turned to my family for a loan, my sister had savings and had happily loaned me the cost of the full course, I‚Äôm still so very grateful for that. This meant that it cost me ¬£4500 in total thanks to the discount. Even if my family couldn‚Äôt loan me the money, my girlfriend (now wife) also offered to loan me the money if I were unable get it from my family, so I‚Äôm very fortunate in this regard.&lt;/p&gt;

&lt;p&gt;I was to pay back my sister with my salary as soon as I get my first paid developer role which I did. When I secured a role I paid her back monthly instalments of ¬£500 over 9 months.&lt;/p&gt;

&lt;h2 id=&quot;course-attendance-and-conduct-&quot;&gt;Course Attendance and Conduct. üìã&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Makers Academy courses are intensive courses that require a serious commitment from all students. Makers Academy wants to ensure that all students on its courses have the best possible opportunity to succeed and therefore reserves the right to suspend from the course any student who in any way disrupts the course
environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If, despite our careful selection process, we find that a student is failing to keep up with the demands of the course they have chosen, and after consulting with the student we decide that the student is not likely to successfully complete the course, we reserve the right to require the student to leave the course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So it gets pretty serious here, if you cannot keep up, they can get you to leave the course though at their discretion, offer a refund for any remaining time. Makes sense, they‚Äôre taking a risk with the student and the career change of becoming a software developer requires a huge commitment and you need to hold yourself accountable if you fall behind.&lt;/p&gt;

&lt;h2 id=&quot;is-it-worth-it-&quot;&gt;Is It Worth It? üòë&lt;/h2&gt;

&lt;p&gt;Coding Bootcamps are more expensive nowadays, costing at least &lt;strong&gt;¬£8000&lt;/strong&gt;. Do I think it‚Äôs worth it?&lt;/p&gt;

&lt;p&gt;Investing in yourself never a bad idea. It all comes down to what you think you‚Äôll get out of it. If you can secure a role at the end of the course, you‚Äôll very quickly make that money back. Of course, if you don‚Äôt secure a role or decide that you don‚Äôt want to pursue a career in programming after graduating, then perhaps it wouldn‚Äôt have been worth it.&lt;/p&gt;

&lt;p&gt;While it‚Äôs possible to teach yourself with the many free resources online, joining a Coding Bootcamp is one way to fully commit 12 weeks to studying it because of the cost associated with it, not only will you get some structure through the curriculum, you‚Äôll be learning alongside other students whom are changing careers like yourself, have somebody who is teaching you and will take any questions you may have. During my time at Makers Academy, they would often host networking events and invite people from the programming community to do a talk on a programming topic which led to opportunities to talk and network afterwards&lt;/p&gt;

&lt;p&gt;Without an interest in programming, it will be quite diffiult to stay motivated. Because of the sheer volume of knowledge and constant innovation in this industry, you‚Äôre constantly having learn even after graduating the course to keep up and progress in your career. And it is dependant on how committed you are and your personal responsibility to continue to study and grow.&lt;/p&gt;

&lt;p&gt;That said, if you are interested or passionate about programming, it is a very rewarding career, there is a lot a value placed in coding and so the salary ranges can be quite high depending where you live and what company you‚Äôll work for. So for me, pursuing a career in software development was one of the best choices I‚Äôve made and enrolling into Makers Academy at that time has changed my life.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;So this is how it all started, its been 7 years since I enrolled into the May cohort. Makers Academy was a highly selective 12-week Coding Bootcamp. They probably designed their policies this way to make sure they get the most committed students and I was very determined to be one of those students.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¬£4500 - ¬£5000 for 10 weeks&lt;/strong&gt; seems like a lot (though during my course they changed it to &lt;strong&gt;12 weeks&lt;/strong&gt;). Somebody in my cohort had applied at the very early stages (months ago) but attended the course in May as I did, he apparently paid &lt;strong&gt;¬£1000-¬£2000&lt;/strong&gt;, so he got amazing value for that price.&lt;/p&gt;

&lt;p&gt;Looking back, I actually think Evgeny was right in some ways when he told me that some problem solving skills are not ones you can ‚Äòlearn‚Äô and so I will struggle in this industry.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;‚Ä¶to ‚Äòcode‚Äô I need to have better problem solving skills, this was arguably a skill that cannot be ‚Äòlearned‚Äô and therefore programming was maybe not for me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I still think this is true today, my problem solving skills are very poor when compared to my colleagues, but I believe that that can be offset through determination and persistence.&lt;/p&gt;

&lt;p&gt;So this is part 1 of my Becoming a Software Developer series. There is so much to write and so I need to break down this post into multiple posts.&lt;/p&gt;

&lt;p&gt;In hindsight, I should‚Äôve documented my experience at Makers Academy, they actually suggested it as well. But I suppose that wasn‚Äôt something I was interested in at the time. In any case, I look forward to reflecting and thinking about the next entry in this series. ü§î&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Reflecting on how I began my programming journey.</summary></entry><entry><title type="html">Copy-and-paste Programming</title><link href="http://jameslieu.github.io/copy-and-paste-programming/" rel="alternate" type="text/html" title="Copy-and-paste Programming" /><published>2020-05-29T00:00:00+01:00</published><updated>2020-05-29T00:00:00+01:00</updated><id>http://jameslieu.github.io/copy-and-paste-programming</id><content type="html" xml:base="http://jameslieu.github.io/copy-and-paste-programming/">&lt;h2 id=&quot;what-is-copy-and-paste-programming&quot;&gt;What is copy and paste programming?&lt;/h2&gt;

&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Copy-and-paste_programming&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Copy-and-paste programming is the production of highly repetitive computer programming code, as produced by copy and paste operations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I‚Äôve begun experiencing this at work lately, We have a microservice architecture and each of these services are ASP.NET Core applications which are very similar to one another. When we need to create a new service, the infrastructure, packages/libraries and design of these services have similar requirements and can be ported across very easily by copy-and-pasting.&lt;/p&gt;

&lt;h6 id=&quot;what-is-the-issue&quot;&gt;What is the issue?&lt;/h6&gt;
&lt;p&gt;The issue I think is, that we‚Äôve learned and improved since the creation of some of these older services, when copying the code across to the new service we tend to copy over &lt;strong&gt;everything&lt;/strong&gt; as it was, not improving or updating any of the old logic. This &lt;strong&gt;process&lt;/strong&gt; of copying everything sometimes doesn‚Äôt even include reading the code/file and considering whether it is relevant.&lt;/p&gt;

&lt;p&gt;Often the ticket to create this new service only requires us in the first instance, to create a new project that mimics the older services &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ping&lt;/code&gt; endpoint and a unit test. Also to port across some of the core infrastructure code such as the logging configuration, and any dependencies. It makes sense to copy-and-paste those across, but should things like helper classes, unused libraries, test helpers and (currently) unused common classes be copied across as well?&lt;/p&gt;

&lt;p&gt;There is an argument for copying those across if we know we‚Äôre going to use them eventually. The issue with this is that it adds risk to include code we may not use at all. My suggestion to avoid this, is to only copy across code as and when you need them.&lt;/p&gt;

&lt;p&gt;There was a good &lt;a href=&quot;https://stackoverflow.com/a/15700228/2405120&quot;&gt;StackOverflow post&lt;/a&gt; about removing unused code which I think is relevant.&lt;/p&gt;

&lt;p&gt;Below I‚Äôll run through my opinion on what the pros and cons are for copy-and-paste programming.&lt;/p&gt;

&lt;h2 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h2&gt;

&lt;h6 id=&quot;-its-faster&quot;&gt;üèÉ Its faster&lt;/h6&gt;
&lt;p&gt;It is in fact faster to do it this way. We know that the infrastructure is going to be mostly the same, why not just copy and paste the lot across and rename places that need it i.e. Namespaces. And by completing the task faster, we can move on to the next task thus feeling very productive&lt;/p&gt;

&lt;h6 id=&quot;-no-need-to-think-as-much&quot;&gt;üòè No need to think as much&lt;/h6&gt;

&lt;p&gt;When copy and pasting the code across, if you intend to reuse everything, you can do it without too much mental energy.&lt;/p&gt;

&lt;h2 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h2&gt;

&lt;h6 id=&quot;-it-creates-new-challenges-when-reviewing-the-code&quot;&gt;üßê It creates new challenges when reviewing the code&lt;/h6&gt;

&lt;p&gt;The more code we port across, the easier it is to miss something. The initial ticket was to create a base/plain project which should ideally have only the necessary modules needed, now that there is other code in there, the reviewer now has to go into the code base and check which is being used and which isn‚Äôt.&lt;/p&gt;

&lt;p&gt;Having to check each class or method and see if it is needed or not is incredibly time consuming.&lt;/p&gt;

&lt;p&gt;It also causes confusion why those unnecessary classes are there at first glance. And asking the developer to remove the dead code requires even more time.&lt;/p&gt;

&lt;h6 id=&quot;-it-invalidates-the-code-coverage&quot;&gt;üìä It invalidates the code coverage&lt;/h6&gt;

&lt;p&gt;The Code that isn‚Äôt used in the new project messes with the code coverage, while in the previous projects they were used and had unit tests. The new project wouldn‚Äôt have those same tests as the methods using them are not ported across.&lt;/p&gt;

&lt;p&gt;There is an argument that maybe some of those classes ought to have their own self contained unit tests however.&lt;/p&gt;

&lt;h6 id=&quot;-it-takes-away-the-refactoring-opportunity&quot;&gt;üßπ It takes away the ‚Äòrefactoring‚Äô opportunity&lt;/h6&gt;

&lt;p&gt;Technically its not refactoring because its a new project, we‚Äôre not editing existing code in the new project. But over time, we as a team are improving the way we work and our knowledge, sometimes the code we‚Äôre copying across is perhaps an ‚Äòoutdated‚Äô way of working. This can deter the developer to consider a different approach.&lt;/p&gt;

&lt;h6 id=&quot;-the-developer-may-not-even-read-the-code&quot;&gt;üôà The developer may not even read the code&lt;/h6&gt;

&lt;p&gt;Entire files can be copied across, how will we know whether the code is still relevant to the new project. Not only this, it is the review who has to read it all during the code review. That said, the reviewer may also have the same mindset and approve the code because they know that it is a carbon copy-and-paste and therefore doesn‚Äôt feel the need to read it.&lt;/p&gt;

&lt;h6 id=&quot;-there-is-risk-that-the-developer-doesnt-understand-the-code&quot;&gt;üôâ There is risk that the developer doesn‚Äôt understand the code&lt;/h6&gt;

&lt;p&gt;Code that is copied across may have been code that they themselves haven‚Äôt seen before, instead of reading it and trying to understand the business logic, copying it across can mean you‚Äôre adding code that may not be relevant or even is an existing bug.&lt;/p&gt;

&lt;h6 id=&quot;-introducing-bugs&quot;&gt;üêû Introducing bugs&lt;/h6&gt;
&lt;p&gt;A further problem is that bugs can easily be introduced by assumptions and design choices made in the separate sources that no longer apply when placed in the new environment.&lt;/p&gt;

&lt;h6 id=&quot;-obfuscated-code&quot;&gt;üßê Obfuscated code&lt;/h6&gt;
&lt;p&gt;Such code may also, in effect, be unintentionally obfuscated, as the names of variables, classes, functions and the like are typically left unchanged, even though their purpose may be completely different in the new context.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Copy-and-paste programming sounds good at first. Its a very attractive way of working as it can make you feel very productive, it also means you can quickly move on to other tasks/tickets.&lt;/p&gt;

&lt;p&gt;But the number of problems that it can introduce is something to consider. I‚Äôm not advocating that we never use copy-and-paste but I think its worth actually reading the code and carefully consider whether that code is relevant. And to also take a moment to think whether that code can be improved as well.&lt;/p&gt;

&lt;p&gt;Sure it will take a little longer, but also reduce some of the cons above, therefore makes it worthwhile in my opinion.&lt;/p&gt;

&lt;h3 id=&quot;external-sources-&quot;&gt;External sources üí°&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Copy-and-paste_programming&quot;&gt;Wikipedia - Copy-and-paste Programming&lt;/a&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">What is copy and paste programming?</summary></entry><entry><title type="html">How I build habits</title><link href="http://jameslieu.github.io/how-i-build-habits/" rel="alternate" type="text/html" title="How I build habits" /><published>2020-05-25T00:00:00+01:00</published><updated>2020-05-25T00:00:00+01:00</updated><id>http://jameslieu.github.io/how-i-build-habits</id><content type="html" xml:base="http://jameslieu.github.io/how-i-build-habits/">&lt;p&gt;On 23rd November 2018, I finished reading a book called &lt;a href=&quot;https://www.goodreads.com/book/show/23130805-the-slight-edge&quot;&gt;The Slight Edge by Jeff Olson&lt;/a&gt; (which I re-read on August 21st 2019 - both dates according to my &lt;a href=&quot;https://www.goodreads.com/jameslieu&quot;&gt;Goodreads profile&lt;/a&gt;). I highly recommend the book and one major take-away for me was that &lt;strong&gt;small consistent actions compound and create big results&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I can‚Äôt remember exactly when I adopted this principle into my life. But I still use it today and thought it would make for a good post. I incorporate this into my daily habits - one of which is do one set of push-ups.&lt;/p&gt;

&lt;h2 id=&quot;daily-push-ups-&quot;&gt;Daily Push-ups üìÖ&lt;/h2&gt;

&lt;p&gt;In my habit tracker, I have a daily habit of doing only &lt;strong&gt;one set of push-ups ‚Äì minimum 15 reps&lt;/strong&gt;. The idea of only doing one set of 15 repetitions (instead of 3-5 sets for example), is designed to be the very &lt;strong&gt;minimum&lt;/strong&gt; I can and should achieve &lt;strong&gt;even on a bad day&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Throughout the year, it is not uncommon for some days where you have a lot of energy. And some days where you have very little energy or are in a low mood thus less motivated i.e. a bad day.&lt;/p&gt;

&lt;p&gt;By setting the task to an achievable goal &lt;strong&gt;on a bad day&lt;/strong&gt;, will increase the likelyhood I will action and complete the task. If the goal was set to something more difficult i.e. 50 reps - 3 sets, I would be less motivated on those days and therefore risk breaking that daily consistency.&lt;/p&gt;

&lt;p&gt;Also note that I‚Äôve set only a &lt;strong&gt;minimum&lt;/strong&gt; number of reps not a &lt;strong&gt;maximum&lt;/strong&gt;. Sure, on a bad day I‚Äôll just do 15 reps, but on a good day (which is usually more common) I‚Äôll do 40, and even on a great day I may end up doing 60-80 reps. Sometimes I do smaller reps but more sets. The key thing is to maintain consistency.&lt;/p&gt;

&lt;p&gt;This system for me has worked very well, if memory serves, I started this particular task last summer meaning I‚Äôve been doing push-ups almost every day since August 2019, there were only two days I hadn‚Äôt achieved this daily task.&lt;/p&gt;

&lt;h2 id=&quot;tricking-your-mind-&quot;&gt;Tricking your mind üòé&lt;/h2&gt;

&lt;p&gt;This also taps into another productivity trick. The reason why we procrastinate is usually because our minds just isn‚Äôt in the ‚Äòmood‚Äô to do a particular task or chore, so we tend to put it off by doing something else. However, if you‚Äôre able to just &lt;strong&gt;start&lt;/strong&gt; the task, your motivation to continue immediately increases.&lt;/p&gt;

&lt;h5 id=&quot;the-wash-dishes-example&quot;&gt;The Wash Dishes Example&lt;/h5&gt;
&lt;p&gt;Imagine after dinner, a pile of dishes are stacked into your sink. You had decided to do them after finishing the TV show or movie you were watching, when it finishes you walk to your kitchen and see the stack of dishes and in no mood to wash them right now, maybe you say to yourself that you‚Äôll do it in the morning. However, If you instead say to yourself, I‚Äôll just clean &lt;strong&gt;one&lt;/strong&gt; plate, you might just decide ‚ÄúI might as well just wash them‚Äù and then proceed to do so.&lt;/p&gt;

&lt;p&gt;Simply actioning the task can be enough to motivate you and you‚Äôre less likely to put it off if the task is quick and easy.&lt;/p&gt;

&lt;p&gt;So back to the push-ups example, making it an easy task by setting the minimum to &lt;strong&gt;15&lt;/strong&gt; encourages me to just get it done and over with, it only takes 10-15 seconds to do them. However, once I begin, I can quickly decide whether I can do more, often my goal of only doing 15 reps (on that particular &lt;strong&gt;bad day&lt;/strong&gt;) becomes 30-40 reps. And if not, I‚Äôll just do a guilt-free 15 reps.&lt;/p&gt;

&lt;h2 id=&quot;big-results-&quot;&gt;Big Results üìà&lt;/h2&gt;

&lt;p&gt;When I first started this habit, my initial minimum push-up repetition count was 5. I had gotten so out of shape, I was barely able to achieve 10-20 reps on a good day. Now I‚Äôm able to do up to 80+ (to failure) in a push-up set precisely because I‚Äôve been doing them daily and so I increased the ‚Äòminimum‚Äô required to complete the task.&lt;/p&gt;

&lt;p&gt;So I used the push-ups as an example, but the principle can be applied to any task you want.&lt;/p&gt;

&lt;p&gt;My company had provided me an annual &lt;a href=&quot;https://pluralsight.com/&quot;&gt;Pluralsight&lt;/a&gt; membership (In November 2019) so I can study at my leisure, I watched it a few times but not often at all. It wasn‚Äôt until March did I decide that I should actually use the membership, so I applied the same principle.&lt;/p&gt;

&lt;p&gt;In my habit tracker, I added a new daily task to ‚ÄúWatch 10 minutes of Pluralsight‚Äù. I‚Äôve missed only two days since starting the habit which according to Pluralsight was &lt;strong&gt;24th February&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/how-i-build-habits-1.png&quot; style=&quot;height: 250px;&quot; /&gt;
&lt;em&gt;- My Pluralsight profile activity insights as of 24th May 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As you can see, by just aiming to watch 10 minutes a day (which sometimes ended up being 20-30 minutes), the results are huge and according to the ‚ÄúView Time‚Äù on my profile, the number of hours of content I‚Äôve watched between March ‚Äì May when compared to January and February has increased quite a lot.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: I watch them at 1.5x - 2.0x speed so the exact number of hours displayed are not accurate&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;So this is how I create my habits, I have a daily evening routine which I perform small tasks to remain productive. Here are a few examples which I have adopted:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;üí™ One set of push-ups (min 15 reps)&lt;/li&gt;
  &lt;li&gt;ü¶µ One set of squats (min 15 reps)&lt;/li&gt;
  &lt;li&gt;üì∫ Watch 10 minutes of Pluralsight&lt;/li&gt;
  &lt;li&gt;üìñ Read 10 pages of a book [1]&lt;/li&gt;
  &lt;li&gt;üç¥ Empty dishwasher&lt;/li&gt;
  &lt;li&gt;üåá Prepare next day‚Äôs necessities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Small consistent actions and yield big results. There are going to be some people who have more discipline and wouldn‚Äôt need their tasks to be as small as mine. However, if you‚Äôre not one of these people, then small tasks will work better for you.&lt;/p&gt;

&lt;p&gt;To put it into persepctive, if we were to do some math on these, assuming the tasks were achieved with no days missed the whole year, that is a &lt;strong&gt;minimum&lt;/strong&gt; total (per annum) of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;5475&lt;/strong&gt; push-ups&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5475&lt;/strong&gt; squats&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;91.25&lt;/strong&gt; hours of Pluralsight&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;20&lt;/strong&gt; books [2]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, the results compound and can be huge. Set the ‚Äòminimum‚Äô low and do it consistently to get the benefits from that compound effect, also note that there will often be times where you exceed your ‚Äòminimum‚Äô because the goal itself is designed to be &lt;strong&gt;too easy&lt;/strong&gt;, which means that its possible and likely to be higher.&lt;/p&gt;

&lt;p&gt;There will be some ‚Äòmissed‚Äô days that‚Äôs okay, I‚Äôve already missed one or two (so far), but the main take-away is that, once the habit is set, you‚Äôre going to complete the (small) task more often than you‚Äôll miss them. And because of that compound effect, you‚Äôll yield huge results. üëç&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;[1] The 10 pages task, I don‚Äôt do consistently unless I have a book I want to read, however, once I decide on a book, I apply this principle in order to motivate me to complete it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[2] Based on average page size of 273 for a book from this site: &lt;a href=&quot;https://scribewriting.com/how-long-should-book-be/&quot;&gt;Scribe Writing&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">A guide on how I build habits.</summary></entry><entry><title type="html">Should Companies Be Hiring Juniors?</title><link href="http://jameslieu.github.io/should-companies-be-hiring-juniors/" rel="alternate" type="text/html" title="Should Companies Be Hiring Juniors?" /><published>2020-05-22T17:00:00+01:00</published><updated>2020-05-22T17:00:00+01:00</updated><id>http://jameslieu.github.io/should-companies-be-hiring-juniors</id><content type="html" xml:base="http://jameslieu.github.io/should-companies-be-hiring-juniors/">&lt;p&gt;This question was asked by someone on the Slack channel.
Here were some of the responses:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sky uses its own grad scheme instead. Very occasionally they hire juniors. Whether they ‚Äúshould be‚Äù or not isn‚Äôt really for me to answer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;in previous companies, it‚Äôs pretty much always been lack of bandwidth for mentorship, ‚Äúwe need people who can hit the ground running‚Äù, and not being good enough at chunking out junior level work in a way that provides growth and support&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;That argument always annoys me as i suspect its less true than people think it is. I think some people think juniors are a drain on resource but they fundamentally are another hand at the coal face&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;i definitely think more companies should hire juniors, but i also know a lot of companies where being a junior is actively miserable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;here-was-my-response&quot;&gt;Here was my response:&lt;/h4&gt;

&lt;p&gt;‚ÄúI think it largely depends on whether the company has a budget for a junior or not.. If the budget is enough to hire a mid to senior, they would like opt for that option instead of bringing on a junior. If the budget isn‚Äôt enough to get a senior or mid level developer then maybe thats when they‚Äôd consider it?‚Äù&lt;/p&gt;

&lt;p&gt;Someone responded:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mid/Senior devs were once junior devs that were given the chance to grow and learn. They won‚Äôt be around forever and if companies don‚Äôt allow for new juniors to follow the same path, at some point there‚Äôll be a lack of mid/senior devs as well as juniors with experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;my-response-to-this&quot;&gt;My response to this:&lt;/h6&gt;

&lt;p&gt;‚ÄúWhen this happens, that is when companies will start hiring juniors. The market will adapt based on supply and demand‚Äù&lt;/p&gt;

&lt;p&gt;‚ÄúI agree that companies can benefit from graduate schemes and/or entry-level developer roles.
But the question is how much of a cost will this be? How much productivity can the junior bring?
When someone joins a company, senior or not, how long for that person getting up to speed, is a big factor.
Not to mention requiring the time of existing developers to assist thus also adding to the cost.‚Äù&lt;/p&gt;

&lt;p&gt;‚ÄúThe best thing for a junior is getting their foot through the door in order to gain things that are of greater value than salary (that this stage of their career) such as the work experience, learning from seniors (like a mentor),¬† building a good network, references etc.‚Äù&lt;/p&gt;

&lt;p&gt;‚ÄúAnd so I think that as a junior, aim to get the best salary/benefits you can but also acknowledge that it could be a lot lower that you might hope for (for now).¬† Do this for 6 -12 months, build the experience and knowledge required to justify a higher salary and work up the ‚Äòladder‚Äô as it were or move on to the next company (which btw can be a salary increase of up to 25% at the early stages).‚Äù&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;I think that suggesting that companies ‚Äòshould‚Äô be hiring juniors is a bit of wishful thinking. As mentioned before, junior salaries can be quite high depending where you live. According to a survey of graduating annual salaries at Makers, it averages at ¬£30k, I‚Äôm assuming that most of these are juniors as they have just graduated.&lt;/p&gt;

&lt;p&gt;¬£30k starting salary is quite decent, arguably too high for this skill level. On indeed.co.uk, some actual mid-level positions in London are ¬£30k-¬£40k. The question is whether a junior can provide ¬£30k worth of productivity annually?&lt;/p&gt;

&lt;p&gt;I‚Äôve written a post previously about a related topic: &lt;a href=&quot;/to-hire-a-junior-vs-senior-developer/&quot;&gt;To Hire a Junior Vs Senior Developer&lt;/a&gt; which outlines (my opinion) the differences between juniors and seniors and which would be logically the better choice given you have the budget for only one.&lt;/p&gt;

&lt;p&gt;At the end of the day, salaries should mostly be dictated by what amount of productivity an employer can bring. The more junior you are, the less productivity you can bring when compared to mid-senior level developers, but this can be offset by accepting a lower salary. So the answer to the titled question would depend on whether it is more expensive to hire said junior.&lt;/p&gt;

&lt;p&gt;So in conclusion, as per my response: If you‚Äôre a junior-level developer, consider taking a low salary because in my opinion, the best thing for a junior, is getting their foot through the door first in order to gain things that are of greater value than salary.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Do any of you work in companies that should be hiring juniors but aren't? What's stopping them?</summary></entry></feed>