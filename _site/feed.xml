<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://jameslieu.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://jameslieu.github.io/" rel="alternate" type="text/html" /><updated>2020-07-25T00:24:06+01:00</updated><id>http://jameslieu.github.io/feed.xml</id><title type="html">James Lieu</title><subtitle>Software Developer</subtitle><author><name>James Lieu</name></author><entry><title type="html">100 Days of Pluralsight</title><link href="http://jameslieu.github.io/100-days-of-pluralsight/" rel="alternate" type="text/html" title="100 Days of Pluralsight" /><published>2020-07-24T00:00:00+01:00</published><updated>2020-07-24T00:00:00+01:00</updated><id>http://jameslieu.github.io/100-days-of-pluralsight</id><content type="html" xml:base="http://jameslieu.github.io/100-days-of-pluralsight/">&lt;p&gt;I‚Äôve managed to achieve the 100 day learning streak for Pluralsight&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/100-days-of-pluralsight-1.png&quot; style=&quot;height:450px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A few months ago, I‚Äôve written a post about &lt;a href=&quot;/how-i-build-habits&quot;&gt;how I build habits&lt;/a&gt;, where I outline a method I use to create habits that allow me to perform tasks consistently in a maintainable way.&lt;/p&gt;

&lt;p&gt;By applying this method, I have managed to watch Pluralsight daily for &lt;strong&gt;100 days straight&lt;/strong&gt;. I‚Äôd thought it would be good to share this milestone as well as reinforce the idea that &lt;strong&gt;small consistent actions can make a big impact on the end result&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By only aiming to watch a minimum of 10 minutes of Pluralsight videos a day, I was able to consume so much content. Here are the receipts:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/100-days-of-pluralsight-2.png&quot; /&gt;
&lt;em&gt;My Personal Profile as of 24th July 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So here is my 100 day learning streak insight. It also states I‚Äôve watched 75+ hours of content, this is not actually the case, Pluralsight does not account for when you watch the courses are a higher speed i.e. 1.5x - 2.0x speed.&lt;/p&gt;

&lt;p&gt;The audio for the videos seem to also be artificially slowed which seems a little disingenuous as it means the courses duration are not quite the length they say they are. I mention this in my &lt;a href=&quot;/pluralsight-review&quot;&gt;Pluralsight review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now onto the courses:
 &lt;img src=&quot;/assets/media/100-days-of-pluralsight-3.gif&quot; /&gt;
&lt;em&gt;All the courses I‚Äôve watched so far as of 24th July 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The ‚Äòred badge‚Äô icon on the left of each course listed, are the ones I‚Äôve completed. There were a few I didn‚Äôt finish watching because I either found not relevant, or I was already well-versed on the remaining videos or I‚Äôm currently watching them.&lt;/p&gt;

&lt;p&gt;Bear in mind that this history includes courses completed even before the start of my streak. In fact, with the exception of two days (one in March and another in April), I‚Äôve been watching Pluralsight daily since &lt;strong&gt;February 24th 2020&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/100-days-of-pluralsight-4.gif&quot; /&gt;
 &lt;em&gt;My daily streaks up until October (when I purchased the subscription)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I remember those days I missed, each one I had basically forgotten to watch it that day, they were also days where my evening was unusually busy (on both days). Had I not broken my streak both times, my daily learning streak would‚Äôve been &lt;strong&gt;151 days&lt;/strong&gt; today&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;As mentioned, I was really only able to achieve this due to &lt;a href=&quot;/how-i-build-habits&quot;&gt;building a habit&lt;/a&gt;. I highly recommend having a read to help you achieve your goals, whether its to exercise more or read more, this is an excellent way to get started.&lt;/p&gt;

&lt;p&gt;Will I continue with this habit? Probably, my company did pay for a annual subscription, so it‚Äôd be a good idea to get as much value from it as I can. I don‚Äôt regret consuming this much content, they‚Äôre very educational and very relevant to my career.&lt;/p&gt;

&lt;p&gt;It doesn‚Äôt look like anything special happens once I reached this milestone. It would be nice for Pluralsight to acknowledge it by sending an email or introduce achievement badges of some sort, perhaps that would encourage me to aim even higher, 200 daily streaks? 1 year? Regardless, its not really that important.&lt;/p&gt;

&lt;p&gt;Would I recommend Pluralsight? &lt;a href=&quot;/pluralsight-review&quot;&gt;See my review here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In any case, I‚Äôm pretty proud of my 100 day streak milestone!&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I've managed to achieve the 100 day learning streak for Pluralsight</summary></entry><entry><title type="html">Top Tips For Recruiters From a Developer</title><link href="http://jameslieu.github.io/top-tips-for-recruiters-from-a-developer/" rel="alternate" type="text/html" title="Top Tips For Recruiters From a Developer" /><published>2020-06-22T00:00:00+01:00</published><updated>2020-06-22T00:00:00+01:00</updated><id>http://jameslieu.github.io/top-tips-for-recruiters-from-a-developer</id><content type="html" xml:base="http://jameslieu.github.io/top-tips-for-recruiters-from-a-developer/">&lt;p&gt;So I recently had create a post on &lt;a href=&quot;/my-experience-with-recruiters/&quot;&gt;My Experience With Recruiters&lt;/a&gt;. I think giving constructive criticism is valuable but providing solutions is probably more useful.&lt;/p&gt;

&lt;p&gt;I wanted to give some general feedback this time, to give &lt;strong&gt;my opinion&lt;/strong&gt; on what &lt;strong&gt;I feel would engage me if I were on the market for opportunities&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;-know-your-audience&quot;&gt;üòÄ Know your audience&lt;/h3&gt;

&lt;p&gt;My profile specifically states what technology I specialise in i.e. C#, JavaScript, etc.  Why would you then send me a job spec for Java or C++ roles? Sending me applications for technologies I have no experience in, only makes me think that you didn‚Äôt even bother reading my profile.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Although I respect that you‚Äôre trying to get leads, so reading each profile before sending out mass emails makes the process slower, no excuse if you‚Äôre calling me on the phone however).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Still, I‚Äôm less likely to work with you if I see that you‚Äôre not showing interest.&lt;/p&gt;

&lt;p&gt;I respond the best when the email was tailored to me personally, or when on the phone, the recruiter demonstrates that they‚Äôve read my profile. Even if I‚Äôm not on the market for opportunities, I think this kind of customer service is the best, more professional and shows confidence that you know what you‚Äôre doing.&lt;/p&gt;

&lt;p&gt;I‚Äôm aware that recruiters are talking to many potential customers and so spending too much time doing this for each of them may not be as ideal. My point is that I‚Äôm more likely to be engaged if you did this.&lt;/p&gt;

&lt;h3 id=&quot;-be-creative&quot;&gt;‚ú® Be creative&lt;/h3&gt;

&lt;p&gt;I‚Äôve received so many recruitment emails during my time as a developer. They‚Äôre generic enough for me to ignore them completely, meaning I don‚Äôt even open them anymore. The ones I do open, have interesting creative subject titles and the content is also interesting.&lt;/p&gt;

&lt;p&gt;Bear in mind it is possible that many of recipients of these recruitment emails are likely already employed and are not actively looking for roles. If you‚Äôre planning to create leads from this audience, it would increase your chances if your email isn‚Äôt plain and generic.&lt;/p&gt;

&lt;h3 id=&quot;-communication&quot;&gt;üòÄ Communication&lt;/h3&gt;

&lt;p&gt;Most recruiters start off very polite and enthusiastic, but once you‚Äôve submitted your CV with them to forward to their clients, communication quality goes way down.&lt;/p&gt;

&lt;p&gt;If I‚Äôm in the process of working with you, some updates to the application would be appreciated.&lt;/p&gt;

&lt;p&gt;When I was job hunting, I found that I was the one who had to chase up on the progress on the application, there was on recruiter who actually knew the progress of the applications, but just didn‚Äôt bother informing me of it, was a little rude about it as well. That guy I‚Äôll never work with again and I know he recruits with roles that matches my profile.&lt;/p&gt;

&lt;p&gt;In contrast to this, one of the recruiters who had successfully gotten me a role had such great communication and interpersonal skills that when I were made redundant at said role years later, I had called him first who then had gotten me another role.&lt;/p&gt;

&lt;h3 id=&quot;-stay-in-touch&quot;&gt;ü§ù Stay in touch&lt;/h3&gt;

&lt;p&gt;If you‚Äôve managed to get somebody a role. Ask them to give you a recommendation on LinkedIn, every few months or so, send a message to ask how they‚Äôre doing, maintaining communications with the ones you‚Äôve worked with in the past can also one day lead to another opportunity to work with said person.&lt;/p&gt;

&lt;p&gt;I for one often appreciate someone getting in touch just for the sake of saying hi. If you‚Äôre trying to sell me something, I may have my guard up however.&lt;/p&gt;

&lt;h3 id=&quot;-know-the-company-youre-recruiting-for&quot;&gt;üè¢ Know the company you‚Äôre recruiting for&lt;/h3&gt;

&lt;p&gt;When selling me a role, I found that I was more impressed with a recruiter when they talk about the company, if they‚Äôve  successfully recruited for them before, met the people there, have an idea of the office environment, knowing what else the company has to offer i.e. Good coffee, bean bag chairs, free fruit etc.&lt;/p&gt;

&lt;p&gt;If I have questions that may not be in the job spec, if the recruiter can answer them, it suggests that they have a great relationship with the company as well, which then suggests that working with this recruiter is worth my while.&lt;/p&gt;

&lt;h3 id=&quot;-understand-the-tech-youre-recruiting-for&quot;&gt;üíª Understand the tech you‚Äôre recruiting for&lt;/h3&gt;

&lt;p&gt;I‚Äôm not saying you should learn TDD, but you should at least be aware of what it is or what it means. This includes some of the other items in your spec such as TDD, BDD, Redux, webpack etc&lt;/p&gt;

&lt;p&gt;You don‚Äôt need to be an expert on any of these, but being able to explain what the job involves without just reading from the spec can be very engaging for the person you‚Äôre trying to recruit. It‚Äôs like selling a product to someone, if you don‚Äôt really know what you‚Äôre selling, it makes it difficult to believe anything you‚Äôre saying.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;This is only my opinion and should be taken with a grain of salt. I appreciate that I know nothing of the recruitment industry so my assumptions here can be completely wrong. I‚Äôm just providing &lt;strong&gt;feedback from a customer‚Äôs perspective&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I feel that recruiters have a bad reputation among the programming industry and perhaps this is due to the lack of feedback from customers such as myself. I‚Äôve had many good and bad experiences, I feel it‚Äôs valuable to recognise and celebrate the good while providing constructive criticism for the bad.&lt;/p&gt;

&lt;p&gt;I‚Äôm not expert but recruitment feels like a ‚Äòpeople‚Äô industry more than anything, and so to successfully to sell your ‚Äòroles‚Äô to us, communication is key, build a network and maintain it.&lt;/p&gt;

&lt;p&gt;In any case, if you‚Äôre a recruiter reading this, I hope there are some insights you can take-away from this and I wish you the best of luck.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I wanted to give some general feedback this time, to give my opinion on what I feel would engage me if I were on the market for opportunities.</summary></entry><entry><title type="html">Video Conferencing Etiquette</title><link href="http://jameslieu.github.io/video-conferencing-etiquette/" rel="alternate" type="text/html" title="Video Conferencing Etiquette" /><published>2020-06-19T00:00:00+01:00</published><updated>2020-06-19T00:00:00+01:00</updated><id>http://jameslieu.github.io/video-conferencing-etiquette</id><content type="html" xml:base="http://jameslieu.github.io/video-conferencing-etiquette/">&lt;p&gt;When I started a new role on June 2019, one of the perks was to be able to work from home.&lt;/p&gt;

&lt;p&gt;Most of the development team worked from home and only required to come into the office once a week on any day they choose. So our everyday meetings were conducted via video conferencing tools such as ‚ÄòZoom‚Äô.&lt;/p&gt;

&lt;p&gt;Remote work is becoming more common in this industry, and attending meetings via video conferencing tools are a necessity for working remotely when working within a team.&lt;/p&gt;

&lt;p&gt;So I thought I‚Äôd share a few video conferencing etiquettes I‚Äôve learned and adopted in the past year.&lt;/p&gt;

&lt;h3 id=&quot;-close-all-unnecessary-applications&quot;&gt;üíª Close All Unnecessary Applications&lt;/h3&gt;

&lt;p&gt;One challenge with online video meetings is to stay focused. It could just be me, but not being in the same room as the speaker or other attendees which seems to reduce my attention span.&lt;/p&gt;

&lt;p&gt;I found that when I had browser windows opened on my second monitor, I start getting distracted and often try multitasking by browsing while listening to the meeting. It‚Äôs a bad habit to have and so closing all browser windows will mitigate this.&lt;/p&gt;

&lt;h3 id=&quot;-mute-yourself-when-not-talking&quot;&gt;üîá Mute Yourself When Not Talking&lt;/h3&gt;

&lt;p&gt;Although you may not be talking, if you‚Äôre mic isn‚Äôt muted, then other noise may be picked up and can be distracting to other people in the meeting, especially the person who is speaking.&lt;/p&gt;

&lt;p&gt;Also if somebody physically comes to speak to you and you need to respond respond, this interaction will not distract other attendees at the meeting.&lt;/p&gt;

&lt;h3 id=&quot;-raise-your-hands-if-you-wish-to-speak&quot;&gt;‚úã Raise Your Hands If You Wish To Speak&lt;/h3&gt;

&lt;p&gt;When in meetings, it would gracious to raise your hand or provide some indication that you have a question or can add to the discussion. You may end up speaking over other people otherwise. Although this only works if your webcam is on and the attendees can see you.&lt;/p&gt;

&lt;h3 id=&quot;-sit-away-from-your-keyboardmouse&quot;&gt;‚å® Sit Away From Your Keyboard/Mouse&lt;/h3&gt;

&lt;p&gt;Additional tip to avoid being distracted. Keeping your keyboard and mouse away will hopefully you focus your attention on the meeting.&lt;/p&gt;

&lt;h3 id=&quot;-keep-your-mobile-phone-away&quot;&gt;üìµ Keep Your Mobile Phone Away&lt;/h3&gt;

&lt;p&gt;Your phone can be a big distraction, if you receive a notification or end up browsing on your phone, it is not only rude but takes your attention away from the meeting.&lt;/p&gt;

&lt;h3 id=&quot;-request-breaks&quot;&gt;‚òï Request Breaks&lt;/h3&gt;

&lt;p&gt;We should hope that the meeting host be responsible for managing the time within the meeting as well. But sometimes, that‚Äôs not the case and if the meeting is going far too long without a break, it is not unreasonable to request 5-10 minutes to fetch a glass of water, a hot beverage or use the bathroom.&lt;/p&gt;

&lt;h3 id=&quot;-checking-out-of-the-meeting&quot;&gt;üëã ‚ÄòChecking-out‚Äô Of The Meeting&lt;/h3&gt;

&lt;p&gt;This one is uncommon but I think is important, when you‚Äôre in a meeting and you feel you‚Äôre getting no value from it, I feel like you should be able to request to leave the meeting when the opportunity presents itself.&lt;/p&gt;

&lt;p&gt;I remember in my team, we had a QA engineer who is a regular attendee at our development meetings, but often we end up in a technical discussion which is of no value to the QA engineer I think.&lt;/p&gt;

&lt;p&gt;So during our retrospective, I had made the suggestion or request that we can ‚Äòcheck-out‚Äô of the meeting if we find that the meeting doesn‚Äôt require our attendance. While I didn‚Äôt specifically say, but I requested this primarily for my colleague (the QA engineer) although, I think it‚Äôs valuable to have the option to check-out for myself as well.&lt;/p&gt;

&lt;h3 id=&quot;-turn-on-webcam&quot;&gt;üü¢ Turn on Webcam&lt;/h3&gt;

&lt;p&gt;When in a video call and having a conversation with someone or a group, being able to see them is generally more pleasant than not.&lt;/p&gt;

&lt;p&gt;If you‚Äôre communicating with your webcam on, people can see your facial expressions, reactions, acknowledgments and even see whether you‚Äôre present in the call.&lt;/p&gt;

&lt;p&gt;Note: sitting in a well-lit room will help with the picture quality.&lt;/p&gt;

&lt;h3 id=&quot;-turn-off-webcam-if-you-need-divert-your-attention&quot;&gt;üî¥ Turn off Webcam if you need divert your attention.&lt;/h3&gt;

&lt;p&gt;If you need to leave your desk or physically talk to someone, turning off your webcam will reduce any distraction to the other attendees, having this a common practice among your team will communicate to them that you‚Äôre occupied with something else temporarily.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Not being in the same room as other people changes how you interact and pay attention during the meeting. For example, not paying attention because you‚Äôre typing at your keyboard or looking at your phone is equally rude whether you‚Äôre physically at the meeting or not.&lt;/p&gt;

&lt;p&gt;This is something I realized by not only being guilty for some of these bad habits, but also witnessing some colleagues doing it either when I‚Äôm the speaker or just another attendee. So these are a few tips I recommend when attending online meetings.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Remote work is becoming more common in this industry, and attending meetings via video conferencing tools are a necessity when working within a team. So I thought I'd share a few video conferencing etiquettes I've learned and adopted in the past year.</summary></entry><entry><title type="html">Self-reviewing Your Code</title><link href="http://jameslieu.github.io/self-reviewing-your-code/" rel="alternate" type="text/html" title="Self-reviewing Your Code" /><published>2020-06-18T00:00:00+01:00</published><updated>2020-06-18T00:00:00+01:00</updated><id>http://jameslieu.github.io/self-reviewing-your-code</id><content type="html" xml:base="http://jameslieu.github.io/self-reviewing-your-code/">&lt;p&gt;Self-reviewing your code is, in my opinion, just as important as having someone else review it before it gets approved and deployed. It is akin to proof-reading an email you wrote before sending it; checking that you haven‚Äôt missed anything, whether there are errors or whether there are areas you can refine.&lt;/p&gt;

&lt;p&gt;Not self-reviewing adequately is probably more common than we think, I myself have been guilty of doing this. When you think you‚Äôre done coding your feature, it is easy to skim through your changes (diff) or not look at them at all. Submit the change. Then let your colleague review it while you work on a new and more exciting task.&lt;/p&gt;

&lt;h2 id=&quot;why-should-we-self-review-our-work-&quot;&gt;Why Should We Self-Review Our Work? ü§î&lt;/h2&gt;

&lt;p&gt;It is conceptually the same reason we proof-read any emails or any writing intended for someone else. You‚Äôll want to catch errors, look for areas which can be refined and check if anything was missed or had been forgotten.&lt;/p&gt;

&lt;p&gt;Often re-reading your code again can give you further confidence that what you‚Äôve worked on is done to a standard that you deem acceptable when contributing to the product you‚Äôre working on. Also, depending on the size of the work, when working on a particular feature long enough can reduce the likelihood that we‚Äôll to remember &lt;strong&gt;exactly&lt;/strong&gt; what was added and what was removed.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-worse-that-could-happen-&quot;&gt;What‚Äôs the worse that could happen? ü§∑&lt;/h2&gt;

&lt;p&gt;From the perspective as a developer for a company, it depends on the scenario really, if you‚Äôre working on a system that is only used within the company internally then it‚Äôs not as detrimental if you deploy work that breaks the system.&lt;/p&gt;

&lt;p&gt;Another example is a product that doesn‚Äôt have any ‚Äòlive‚Äô users. There is more leeway for errors or issues under these circumstances. Although, it will not only cause inconvenience for you but for your team members as well.&lt;/p&gt;

&lt;p&gt;It is, however, very serious if the system is used by clients or customers and is a source of revenue for your company. In under any circumstances should anyone be deploying work without being absolutely certain that the changes do not break the system unknowingly. It‚Äôs bad for the customer, its bad for the team and it‚Äôs bad for the company. Everybody is unhappy, so being extra careful when making changes or updates to the system is paramount.&lt;/p&gt;

&lt;h2 id=&quot;reviewed-by-somebody-else-&quot;&gt;Reviewed by somebody else üïµ&lt;/h2&gt;

&lt;p&gt;It‚Äôs a standard practice to have your code reviewed by someone else before it gets released to production. We‚Äôre all human and are not infallible, having a second pair of eyes on your code to check for errors, look for improvements and to make sure that it meets the requirements is very valuable and should not be taken for granted when working in a team.&lt;/p&gt;

&lt;p&gt;The code review process has some acceptable trade-offs. The first is that it requires a member of your team to ‚Äòreview‚Äô said code, which means that time needs to be allocated to that task. The reviewer will need to read the code and if there is feedback or changes requested, then the code owner needs to either go back to modify the code or to have a discussion about it.&lt;/p&gt;

&lt;p&gt;This takes up a fair amount of time and even more so, if there were obvious defects in the code which would‚Äôve been spotted had the developer been more vigilant with reviewing their own work.&lt;/p&gt;

&lt;p&gt;Having the reviewer leave feedback for ‚Äòcommented-out‚Äô code or typos are not only embarrassing but requires time allocated to fix it. Vigilantly self-reviewing your code can at least mitigate those kinds of errors.&lt;/p&gt;

&lt;p&gt;It‚Äôs arguably selfish to leave the fault-finding to the reviewer, as mentioned previously, this review process can take time. How can we expect someone else reviewing your work and to be vigilant if we don‚Äôt abide by the same standard. At the very least, the developer ought to respect their own work by self-reviewing and making sure that what they‚Äôre submitting is done to a high standard.&lt;/p&gt;

&lt;p&gt;Relying on the reviewer to find those because they feel that reviewing their own code will ‚Äòslow‚Äô them down is not only egotistical but a disservice to themselves as the more mistakes they submit, the less confidence the rest of the team will be in the quality and skills of said developer.&lt;/p&gt;

&lt;h3 id=&quot;-my-personal-experience&quot;&gt;üßî My Personal Experience&lt;/h3&gt;

&lt;p&gt;I once had a colleague who did exactly this. He likes to work quickly which &lt;a href=&quot;/writing-code-too-quickly&quot;&gt;has it‚Äôs own problems&lt;/a&gt;, he would open a pull request and then move onto the next task. When I began the code review, it was very often littered with issues, commented out code, code that was used for debugging purposes i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log(&quot;here!!!!&quot;)&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;After the review, it needs to go back into progress, but my colleague would often be in the middle of the next task, which meant that he wouldn‚Äôt pick up the work that was reviewed until the next day or even a few days after depending on how long it would take him to complete the task he was currently working on (which then a PR is created for it for review).&lt;/p&gt;

&lt;p&gt;Because there was little self-review even for working on the feedback on the first PR, when that one goes back into review, it is not uncommon for that one to also have issues or require changes again. So the cycle continues&lt;/p&gt;

&lt;p&gt;The problem was that reviewing like this takes a lot of time. Although the code owner felt he was being very productive, but in terms of the productivity from the team as a whole, we were at risk of not completing all the work we had allocated for that sprint. Productivity is compromise and all he had to do is read his own code to reduce the odds of the work to require updates or changes, especially for the obvious defects such as commented out code.&lt;/p&gt;

&lt;p&gt;Bear in mind that I also have tasks of my own that I need to complete (and have reviewed).&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;To summarize the key points why self-review is important and worth the time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Check we haven‚Äôt missed anything&lt;/li&gt;
  &lt;li&gt;Check whether there are errors&lt;/li&gt;
  &lt;li&gt;Check for areas for refinement&lt;/li&gt;
  &lt;li&gt;Can identify areas of improvement&lt;/li&gt;
  &lt;li&gt;A better team code review experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think habit of self-reviewing your code is one of the things that will improve the quality of the code you write. We‚Äôre not infallible and should almost expect to write code that is imperfect. Self-reviewing simply allows us to allocate time to &lt;strong&gt;think&lt;/strong&gt; about what was written, check for issues or anything you‚Äôve forgotten or to look for ways to improve it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Self-reviewing your code is, in my opinion, just as important as having someone else review it before it gets approved and deployed.</summary></entry><entry><title type="html">Should You build a Programming Portfolio?</title><link href="http://jameslieu.github.io/should-you-build-a-programming-portfolio/" rel="alternate" type="text/html" title="Should You build a Programming Portfolio?" /><published>2020-06-18T00:00:00+01:00</published><updated>2020-06-18T00:00:00+01:00</updated><id>http://jameslieu.github.io/should-you-build-a-programming-portfolio</id><content type="html" xml:base="http://jameslieu.github.io/should-you-build-a-programming-portfolio/">&lt;p&gt;As an aspiring developer, it is good to have a portfolio of projects to not only build knowledge and experience with the technology you‚Äôre using but to use as code examples for when applying for a job as a programmer.&lt;/p&gt;

&lt;p&gt;But I wonder whether potential employers actually look at these projects? (Genuine question)&lt;/p&gt;

&lt;p&gt;If I were in the shoes of an employer or responsible for hiring a developer, will I really look at &lt;strong&gt;all&lt;/strong&gt; of the projects in a programmers portfolio?&lt;/p&gt;

&lt;p&gt;Maybe I‚Äôll randomly select a few however, but even then I probably will skim through the logic or check for things like unit tests. I probably wouldn‚Äôt pull it down onto my local machine to run or even check that the tests even pass.&lt;/p&gt;

&lt;p&gt;I myself have a portfolio of projects in my &lt;a href=&quot;https://github.com/jameslieu?tab=repositories&quot;&gt;github profile&lt;/a&gt;, I doubt employers look at each individual projects in any detail at all.&lt;/p&gt;

&lt;p&gt;My point is, is there really that much value creating a large number of projects for your portfolio? They can take a lot of time depending on what your project is and having too many will decrease the chances of a potential employer to look at them.&lt;/p&gt;

&lt;h2 id=&quot;my-personal-experience-&quot;&gt;My Personal Experience üßî&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, I have a &lt;a href=&quot;https://github.com/jameslieu&quot;&gt;Github profile&lt;/a&gt; where I place all of my personal projects.  When attending job interviews, the only time somebody had mentioned it was when they saw a repository called &lt;a href=&quot;https://github.com/jameslieu/project_euler&quot;&gt;project_euler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, as of 18th June 2020, I only have a single completed code challenge in there. Had I had more code challenges in there I think the interviewer/developer would‚Äôve been more impressed.&lt;/p&gt;

&lt;p&gt;I do have a repo called &lt;a href=&quot;https://github.com/jameslieu/csharp_projects&quot;&gt;csharp_projects&lt;/a&gt; which has a variety of code challenges as well as personal projects (specifically written in C#) all within the same repo.&lt;/p&gt;

&lt;p&gt;(The reason I had organized it this way was because I wanted to branch off from PHP to C# professionally which was difficult to do without taking a pay cut, so this repo was the one I sent to potential employers to boost my chances.)&lt;/p&gt;

&lt;p&gt;In hindsight, I think having the &lt;a href=&quot;https://github.com/jameslieu/csharp_projects&quot;&gt;csharp_projects&lt;/a&gt; repo helped, but the amount of time it had taken to build all of these was very costly.&lt;/p&gt;

&lt;p&gt;If I had a single solid project with all of the bells and whistles, deployed for the interviewer to demo, I think that would‚Äôve had a greater impact than all of those smaller projects. Also, having a repo for code challenges would‚Äôve gotten more attention more so than the others.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Having built many projects and having a sizable portfolio, from a job hunting perspective, I think it actually deters interviewers from actually looking at them at all. I think it would be better to have only 1-2 great (sizable) projects and a repo dedicated to solving programming problems i.e. &lt;a href=&quot;https://github.com/jameslieu/project_euler&quot;&gt;project_euler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The projects you build should be built with the technology you‚Äôre applying with. For example, if I were to apply for ASP.Net Core roles, then ideally that project should be built with ASP.Net Core.&lt;/p&gt;

&lt;p&gt;Having fewer projects will increase likelihood that the potential employer will actually look at your projects. Then having the coding problem repo will be the one where you can demonstrate how you solve programming challenges.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">As an aspiring developer, it is good to have a portfolio of projects to not only build knowledge and experience with the technology you're using but to use as code examples for when applying for a job as a programmer.</summary></entry><entry><title type="html">Are Meetings Necessary?</title><link href="http://jameslieu.github.io/are-meetings-necessary/" rel="alternate" type="text/html" title="Are Meetings Necessary?" /><published>2020-06-17T00:00:00+01:00</published><updated>2020-06-17T00:00:00+01:00</updated><id>http://jameslieu.github.io/are-meetings-necessary</id><content type="html" xml:base="http://jameslieu.github.io/are-meetings-necessary/">&lt;p&gt;Meetings are a great way to communicate with people within your company. However, they can be huge productivity killers.&lt;/p&gt;

&lt;p&gt;Is a particular meeting even necessary? If you‚Äôre meeting for an hour, one perspective is that its not only one hour that is lost, but one hour multiplied by the total number of attendees.&lt;/p&gt;

&lt;p&gt;I think meetings should only be called after a consensus is reached that the meeting is &lt;strong&gt;necessary&lt;/strong&gt;. What does it mean for a meeting to be necessary? The two factors I can think of is &lt;strong&gt;coordination&lt;/strong&gt; and &lt;strong&gt;conflict&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;-coordination&quot;&gt;ü§ù Coordination&lt;/h3&gt;
&lt;p&gt;For when a decision requires collaboration from different people. This includes people within a team, other teams or departments. The decision could be in regards to a feature that needs to be built and so,  speaking only to the relevant people to have a decision made on what their requirements and expectations are is why this meeting is necessary.&lt;/p&gt;

&lt;h3 id=&quot;-conflict&quot;&gt;ü§º Conflict&lt;/h3&gt;
&lt;p&gt;For when there are disagreements from two or more parties. A meeting in this instance can also be necessary to resolve this conflict and that a consensus has been reached.&lt;/p&gt;

&lt;h2 id=&quot;the-pros-and-cons&quot;&gt;The Pros and Cons&lt;/h2&gt;

&lt;p&gt;Meetings are important and useful, but can also be counter-productive by taking time away from actually getting work done. In my opinion, some of the pros and cons are:&lt;/p&gt;

&lt;h3 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h3&gt;

&lt;h6 id=&quot;-you-may-be-part-of-the-decision-making&quot;&gt;‚úå You may be part of the decision making&lt;/h6&gt;
&lt;p&gt;This kind of activity can help you feel like a valuable member of the team.&lt;/p&gt;

&lt;h6 id=&quot;-you-may-be-able-to-contribute-and-share-knowledge-to-other-attendees&quot;&gt;üí° You may be able to contribute and share knowledge to other attendees&lt;/h6&gt;
&lt;p&gt;There may be times where your experience or knowledge can have an impact and so sharing that can only be positive.&lt;/p&gt;

&lt;h6 id=&quot;-receive-relevant-information&quot;&gt;üì∞ Receive relevant information&lt;/h6&gt;
&lt;p&gt;This is important if its related to work you‚Äôre involved in. You may only be listening during the meeting but the content may be insightful.&lt;/p&gt;

&lt;h6 id=&quot;-you-can-ask-questions&quot;&gt;üì¢ You can ask questions&lt;/h6&gt;
&lt;p&gt;If you don‚Äôt understand something or require further clarity, being present during the discussion allows you to ask questions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h3&gt;

&lt;h6 id=&quot;-the-meeting-may-not-be-relevant-to-you-in-particular&quot;&gt;ü§∑ The meeting may not be relevant to you in particular&lt;/h6&gt;
&lt;p&gt;As mentioned before, attending meetings will cost your time and attention. If the contents of the meeting isn‚Äôt relevant to you, then you could be spending your time and attention on other things.&lt;/p&gt;

&lt;h6 id=&quot;-you-may-have-nothing-to-add-to-the-discussion&quot;&gt;üò´ You may have nothing to add to the discussion&lt;/h6&gt;
&lt;p&gt;This is related to the above point, the meeting isn‚Äôt relevant to you and you have nothing to add, then why is your attendance even necessary? Better to use that time on more pressing tasks&lt;/p&gt;

&lt;h6 id=&quot;-it-can-be-mentally-draining&quot;&gt;üò© It can be mentally draining&lt;/h6&gt;
&lt;p&gt;This one is often overlooked. People in your team, likely has different energy thresholds for long meetings. I often feel extreme fatigue when a meeting has ended. Finding the energy and motivation to start a new task or continue where I left off can be challenging and therefore severely reduces productivity.&lt;/p&gt;

&lt;h6 id=&quot;-reduces-your-productivity&quot;&gt;‚òπ Reduces Your Productivity&lt;/h6&gt;
&lt;p&gt;If you‚Äôre in the middle of a task, having to pause and attend a meeting which may not even be relevant to you is sure to affect your overall productivity. Although you can work around this by with good time management provided the meeting was scheduled with enough time.&lt;/p&gt;

&lt;h2 id=&quot;do-you-need-to-attend-&quot;&gt;Do You Need To Attend? ü§∑&lt;/h2&gt;

&lt;p&gt;Some meetings &lt;strong&gt;are&lt;/strong&gt; necessary. But we should ask ourselves, ‚Äúdo &lt;strong&gt;I&lt;/strong&gt; need to attend‚Äù?&lt;/p&gt;

&lt;p&gt;When meetings are scheduled, it may be relevant to you personally and so your attendance will provide you value.&lt;/p&gt;

&lt;p&gt;The issue is, that we often find ourselves attending meetings, while relevant to other people, is not relevant for you. Meaning, had you not attended that particular meeting, you could‚Äôve been doing something else, something more productive and useful with that time instead.&lt;/p&gt;

&lt;h2 id=&quot;-some-practices-to-consider&quot;&gt;üßç Some Practices To Consider&lt;/h2&gt;

&lt;p&gt;Being more aware about the meetings you have and conscious how much time they take, it‚Äôs worth considering adopting some practices:&lt;/p&gt;

&lt;h3 id=&quot;-dont-meet-unless-absolutely-necessary&quot;&gt;üèÉ Don‚Äôt meet unless absolutely necessary&lt;/h3&gt;

&lt;p&gt;Find out why you‚Äôre meeting; is a meeting necessary? Consider that if you‚Äôre meeting for an hour, it‚Äôs not just an hour of company time that is being lost; it‚Äôs the hour multiplied by the total number of people in attendance. Meetings should only be called after a consensus has been reached that a meeting is necessary.&lt;/p&gt;

&lt;h3 id=&quot;-set-a-time-limit&quot;&gt;‚è± Set A Time Limit&lt;/h3&gt;

&lt;p&gt;Setting a time limit to a suitable length, most people will lose their ability to pay attention the longer the meeting continues. Having a meeting for 15-30 minutes for example can at least guarantee that the attendees are not experiencing too much fatigue. Another benefit of this, is that the people speaking will be encouraged to ‚Äòget to the point‚Äô and be more concise.&lt;/p&gt;

&lt;h3 id=&quot;-ask-people-to-prepare-in-advance&quot;&gt;‚úç Ask People To Prepare in Advance&lt;/h3&gt;

&lt;p&gt;I feel meetings should not be used for brainstorming. Having a clear agenda, topics, questions or reading sent to all attendees in advance can make the meeting overall more productive. Thinking ahead and preparing for the meeting will help if you‚Äôre not good at ‚Äòthinking on your feet‚Äô.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Meetings have their pros and cons. They‚Äôre important but I think it‚Äôs also a good idea to be mindful about how much time they cost.
How much productivity is lost as a result of attending meetings?&lt;/p&gt;

&lt;p&gt;I think attending meetings where you‚Äôre an active participant is important and has value, but for those where you‚Äôre not, would it not, be just as effective if you were cc‚Äôd an email from an attendee with a written summary, key-points or the decisions from said meeting? Food for thought.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Meetings are a great way to communicate with people within your company. However, they can be huge productivity killers.</summary></entry><entry><title type="html">Writing Code Too Quickly</title><link href="http://jameslieu.github.io/writing-code-too-quickly/" rel="alternate" type="text/html" title="Writing Code Too Quickly" /><published>2020-06-12T00:00:00+01:00</published><updated>2020-06-12T00:00:00+01:00</updated><id>http://jameslieu.github.io/writing-code-too-quickly</id><content type="html" xml:base="http://jameslieu.github.io/writing-code-too-quickly/">&lt;p&gt;Writing Code very quickly does not necessarily mean you‚Äôre being more productive and can actually increase the amount of time to complete a task.&lt;/p&gt;

&lt;p&gt;When writing an email, it‚Äôs not uncommon to not realise that there are errors or something missing (i.e. file attachments) in the email before you send it.&lt;/p&gt;

&lt;p&gt;These problems are also present when coding. Not taking the time to plan and proof-read you code can lead to problems which are easily mitigated if you adopt a slower and more methodical approach.&lt;/p&gt;

&lt;h2 id=&quot;the-process-&quot;&gt;The Process üìù&lt;/h2&gt;

&lt;p&gt;I used to ‚Äútry‚Äù to write code very fast. I would write code quickly but often not identifying the problem and solving it in a sensible way. I would find that I‚Äôm spending an large amount of time debugging but at the same time not really understanding the problem I‚Äôm trying to solve.&lt;/p&gt;

&lt;p&gt;For example, when a unit test is failing, I discover where I think the problem is, start to tweak it, and run the test to see if it passes, if it fails I repeat that process again and again until it passed. It looked something like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Make a change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Run test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; If the test fails, repeat step 1.&lt;/p&gt;

&lt;p&gt;Imagine doing this over and over until the test finally passes. During this process, because I‚Äôm ‚Äòrushing‚Äô, there can be typos or missing characters in my changes, which I only discover because the tests notified me when it failed or if the complier fails the build.&lt;/p&gt;

&lt;p&gt;If that didn‚Äôt work, I would do a lot of &lt;a href=&quot;/copy-and-paste-programming&quot;&gt;copy-and-pasting&lt;/a&gt; either with blocks of logic or functions from the source code with slight changes. Or I look on the internet for solutions and copy the code from there.&lt;/p&gt;

&lt;p&gt;Having a decent typing speed and using a few keyboard shortcuts on the IDE motivated me to churn out code as quickly as I can.&lt;/p&gt;

&lt;p&gt;It sounds like a great at first glance but there were some serious flaws with this way of working. So I thought I might list my opinions on the pros and cons of this style of coding.&lt;/p&gt;

&lt;h2 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h2&gt;

&lt;h3 id=&quot;-you-feel-more-productive&quot;&gt;üí™ You feel more productive&lt;/h3&gt;

&lt;p&gt;You‚Äôll find that you‚Äôre very focused on the task, typing in so many lines of code, running your unit tests to get them to pass as you debug or tweak the logic to correct a bug or issue with the application.&lt;/p&gt;

&lt;p&gt;As you‚Äôre doing this, time is going by very quickly, you feel good at how focused and productive the day has been.&lt;/p&gt;

&lt;h3 id=&quot;-its-sometimes-faster&quot;&gt;üèÉ It‚Äôs sometimes faster&lt;/h3&gt;

&lt;p&gt;The increased speed in which you‚Äôre working can mean that you‚Äôre getting things done faster, providing that the solution you‚Äôve written works and there were no issues.&lt;/p&gt;

&lt;p&gt;If enough time and effort is spent on the requirements and prerequisites prior to coding, then often this way of working is fine and feels great when you have a plan.&lt;/p&gt;

&lt;h2 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h2&gt;

&lt;p&gt;I‚Äôll list the ones based on my own experience as well as some ideas how to address them.&lt;/p&gt;

&lt;h3 id=&quot;-youre-more-prone-to-mistakes&quot;&gt;ü§¶ You‚Äôre more prone to mistakes&lt;/h3&gt;

&lt;p&gt;You‚Äôre more likely to make these mistakes if you don‚Äôt pace yourself; things like typos, using the wrong variable or misreading the code can really halt your productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Pace yourself, focus on one step at a time and be sure to read your code as you write it.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-dont-read-the-code&quot;&gt;üôÑ You don‚Äôt read the code&lt;/h3&gt;

&lt;p&gt;You‚Äôll find that ‚Äòskimming through‚Äô the code is faster and matches your pace of working. This is more obvious when self-reviewing your own code, rushing to push the code up as soon as possible can encourage you to ‚Äòskim through‚Äô your code and risk missing any flaws with the code.&lt;/p&gt;

&lt;p&gt;Some of the issues you might introduce are typos, refactoring opportunities, commented-out code, unused code and duplication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Read your code often.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-havent-actually-identified-the-problem-youre-trying-to-solve&quot;&gt;üò¨ You haven‚Äôt actually identified the problem you‚Äôre trying to solve&lt;/h3&gt;

&lt;p&gt;The urge to start coding before coming up with a plan can hide what the real solution or problem is. The solution often isn‚Äôt something that‚Äôs obvious, you may have an idea how to write it, but what if that idea is incorrect?&lt;/p&gt;

&lt;p&gt;This has happened to me numerous times. You‚Äôll spend hours on a task only to realise that your solution is flawed or even wrong.
You can be so focused on the task that you don‚Äôt realise the time and have spent potentially hours on it before asking for help.&lt;/p&gt;

&lt;p&gt;You speak to a co-worker to see if they can help you, and you both immediately realise that your solution needs to be updated or improved. Even worse if you end up realising this as you were explaining problem to begin with. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Rubber_duck_debugging&quot;&gt;Rubber duck debugging&lt;/a&gt; ü¶Ü&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Take a moment to make sure you understand the problem, it helps to plan how you‚Äôre going to tackle the problem by writing a checklist or some key points on what the problem is.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-forget-something&quot;&gt;üôä You Forget Something&lt;/h3&gt;

&lt;p&gt;Not only are you more likely to make mistakes when coding too quickly, you‚Äôre more likely to miss something. When you‚Äôve finally gotten that unit test to pass. You may feel that you‚Äôre done, commit your code and push your changes without thinking whether you may need to do anything else.&lt;/p&gt;

&lt;p&gt;A common example would be to run the full test suite again, new logic you have written may have broken another part of the system. So the tests will fail and you‚Äôll need to fix it. It is especially bad if the test suite takes a very long time to run.&lt;/p&gt;

&lt;p&gt;Another key example is the organization of your work, particularly for version control. A good practice when working with Git for example is to commit regularly and to keep your commits. When working too quickly, you may forget to commit and if  you‚Äôre working on a large feature. This can be problematic if you haven‚Äôt completed the work and you needed to commit the code to hand-over to someone else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Commit and self-review your own code regularly&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-spend-more-time-debugging&quot;&gt;üêû You spend more time debugging&lt;/h3&gt;

&lt;p&gt;Probably the main sign and negative aspect of coding too fast.&lt;/p&gt;

&lt;p&gt;Your code doesn‚Äôt work and you find yourself chasing tons of bugs and issues.
You end up spending more time trying to fix problems rather than think about the problem and solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Code a little bit at a time, test and verify it before moving on to the next step.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-lose-understanding-of-how-your-code-works&quot;&gt;üôâ You lose understanding of how your code works&lt;/h3&gt;

&lt;p&gt;When working this way, after a while of trying to fix the bug, you may find that you‚Äôve made so many changes and tweaks to get the tests to pass, that you‚Äôve changed too much and no longer know what you‚Äôre code is doing.&lt;/p&gt;

&lt;p&gt;And so you‚Äôll attempt to undo (&lt;strong&gt;CTRL+Z&lt;/strong&gt;) everything in order to get it back to the state it was in before all of those changes you made.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Take a step back and make sure you understand the problem and the solution.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Often those who write the code the fastest in terms of time are those who are methodical and slow about the process. Attempting to rush the work can lead to many problems if you‚Äôre not careful. Slowing down and being methodical in your way of working is not only a safer but also less stressful.&lt;/p&gt;

&lt;p&gt;Developers aren‚Äôt measured on how fast they write code but by the quality of the solution and how well it works and maintainable it is. The best code is written slowly and purposefully, not quickly with the intent of meeting an arbitrary deadline.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Writing Code very quickly does not necessarily mean you're being more productive and can actually increase the amount of time to complete a task.</summary></entry><entry><title type="html">Programmer Notes: Software Construction</title><link href="http://jameslieu.github.io/programmer-notes-software-construction/" rel="alternate" type="text/html" title="Programmer Notes: Software Construction" /><published>2020-06-10T00:00:00+01:00</published><updated>2020-06-10T00:00:00+01:00</updated><id>http://jameslieu.github.io/programmer-notes-software-construction</id><content type="html" xml:base="http://jameslieu.github.io/programmer-notes-software-construction/">&lt;p&gt;This is part of my &lt;strong&gt;‚ÄúProgrammer Notes‚Äù&lt;/strong&gt; series where I leave notes in the form of a blog post here based on something I‚Äôve read or learned. See &lt;a href=&quot;/improve-retention-rate-when-learning/&quot;&gt;this post&lt;/a&gt; for more context.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-construction&quot;&gt;What is Construction?&lt;/h2&gt;

&lt;p&gt;You know what ‚Äúconstruction‚Äù means when it‚Äôs used outside software development. ‚ÄúConstruction‚Äù is the work ‚Äúconstruction workers‚Äù do when they build a house, a school, or a skyscraper. When you were younger, you built things out of ‚Äúconstruction paper‚Äù.&lt;/p&gt;

&lt;p&gt;In common usage, ‚Äúconstruction‚Äù refers to the process of building, the process might include some aspects of planning, designing, and checking your work, but mostly ‚Äúconstruction‚Äù refers to the hands-on part of creating something.&lt;/p&gt;

&lt;h2 id=&quot;what-is-software-construction&quot;&gt;What is Software Construction?&lt;/h2&gt;

&lt;p&gt;Developing software is a complicated process. Researchers have identified numerous distinct activities that go into software development. They include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Problem definition&lt;/li&gt;
  &lt;li&gt;Requirements development&lt;/li&gt;
  &lt;li&gt;Construction planning&lt;/li&gt;
  &lt;li&gt;Software architecture, or high-level design&lt;/li&gt;
  &lt;li&gt;Detailed design&lt;/li&gt;
  &lt;li&gt;Coding and debugging&lt;/li&gt;
  &lt;li&gt;Unit testing&lt;/li&gt;
  &lt;li&gt;Integration testing&lt;/li&gt;
  &lt;li&gt;Integration&lt;/li&gt;
  &lt;li&gt;System testing&lt;/li&gt;
  &lt;li&gt;Corrective maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Construction is mostly coding and debugging but also involves detailed design, construction planning, unit testing integration testing, and other activities.&lt;/p&gt;

&lt;p&gt;Construction is also sometimes known as ‚Äúcoding‚Äù or ‚Äúprogramming‚Äù ‚ÄúCoding‚Äù isn‚Äôt really the best word because it implied the mechanical translation of a preexisting design into a computer language; construction is not at all mechanical and involves substantial creativity and judgment.&lt;/p&gt;

&lt;p&gt;Here are some specific tasks involved in construction:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Verifying that the groundwork has been laid so that construction can proceed successfully&lt;/li&gt;
  &lt;li&gt;Determining how your code will be tested&lt;/li&gt;
  &lt;li&gt;Designing and writing classes and routines&lt;/li&gt;
  &lt;li&gt;Creating and naming variables and named constants&lt;/li&gt;
  &lt;li&gt;Selecting control structures and organizing blocks og statements&lt;/li&gt;
  &lt;li&gt;Unit testing, integration testing and debugging your own code&lt;/li&gt;
  &lt;li&gt;Reviewing other team members‚Äô low level designs and code and having them review yours&lt;/li&gt;
  &lt;li&gt;Polishing code by carefully formatting and commenting it&lt;/li&gt;
  &lt;li&gt;Integrating software components that were created separately&lt;/li&gt;
  &lt;li&gt;Tuning code to make it faster and use fewer resources&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-is-software-construction-important&quot;&gt;Why Is Software Construction Important?&lt;/h2&gt;

&lt;p&gt;If you agree that improving software development is important in general, the question is Why is construction an important focus?&lt;/p&gt;

&lt;p&gt;Here‚Äôs why:&lt;/p&gt;

&lt;h3 id=&quot;construction-is-a-large-part-of-software-development&quot;&gt;Construction is a large part of software development&lt;/h3&gt;

&lt;p&gt;Depending on the size of the project, construction typically takes 30 to 80 percent of the total time spent on a project. Anything that takes up that much project time is bound to affect the success of the project.&lt;/p&gt;

&lt;h3 id=&quot;construction-is-the-central-activity-in-software-development&quot;&gt;Construction is the central activity in software development&lt;/h3&gt;

&lt;p&gt;Requirements and architecture are done before construction so that you can do construction effectively. System testing (in the strict sense of independent testing) is done after construction to verify that construction has been done correctly. Construction is at the center of the software-development process.&lt;/p&gt;

&lt;h3 id=&quot;with-a-focus-on-construction-the-individual-programmers-productivity-can-improve-enormously&quot;&gt;With a focus on construction, the individual programmer‚Äôs productivity can improve enormously&lt;/h3&gt;

&lt;p&gt;A study (1968) showed that the productivity of individual programmers varied by a factor of 10 to 20 during construction.&lt;/p&gt;

&lt;h3 id=&quot;constructions-product-the-source-code-is-often-the-only-accurate-description-of-the-software&quot;&gt;Construction‚Äôs product, the source code, is often the only accurate description of the software&lt;/h3&gt;

&lt;p&gt;In many projects, the only documentation available to programmers is the code itself. Requirements specifications and design documents can go out of date, but the source code is always up to date. Consequently, It‚Äôs imperative that the source code be of the highest quality.&lt;/p&gt;

&lt;h3 id=&quot;construction-is-the-only-activity-thats-guaranteed-to-be-done&quot;&gt;Construction is the only activity that‚Äôs guaranteed to be done&lt;/h3&gt;

&lt;p&gt;The ideal software project goes through careful requirements development and architectural design before construction begins. Imperfect real-world projects, however, often skip requirements and design to jump into construction.&lt;/p&gt;

&lt;p&gt;They drop testing because they have too many errors to fix and they‚Äôve run out of time. But no matter how rushed or poorly planned a project is, you can‚Äôt drop construction. Improving construction is thus a way of improving any software development effort, no matter how abbreviated&lt;/p&gt;

&lt;h2 id=&quot;key-points&quot;&gt;Key Points&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Software Construction is the central activity in software development; construction is the only activity that‚Äôs guaranteed to happen on every project.&lt;/li&gt;
  &lt;li&gt;The main activities in construction are detailed design, coding, debugging, integration, and developer testing (unit testing and integration testing)&lt;/li&gt;
  &lt;li&gt;Other common terms for construction are ‚Äòcoding‚Äô or ‚Äòprogramming‚Äô&lt;/li&gt;
  &lt;li&gt;The quality of the construction substantially affects the quality of the software.&lt;/li&gt;
  &lt;li&gt;Your understanding of how to do construction determines how good a programmer you are.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;p&gt;McConnell, S., 2004. &lt;em&gt;Code Complete, Second Edition.&lt;/em&gt; Redmond (Washington): Microsoft Press.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">What is software construction? And why it is important?</summary></entry><entry><title type="html">My Experience With Recruiters</title><link href="http://jameslieu.github.io/my-experience-with-recruiters/" rel="alternate" type="text/html" title="My Experience With Recruiters" /><published>2020-06-09T00:00:00+01:00</published><updated>2020-06-09T00:00:00+01:00</updated><id>http://jameslieu.github.io/my-experience-with-recruiters</id><content type="html" xml:base="http://jameslieu.github.io/my-experience-with-recruiters/">&lt;p&gt;Developers have often spoken very negatively on their experiences with recruiters. I myself have had some poor experiences with a lot a recruiters.&lt;/p&gt;

&lt;p&gt;Experiences such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Being lied to&lt;/li&gt;
  &lt;li&gt;Lying to their client about my salary expectations&lt;/li&gt;
  &lt;li&gt;Lying to their client about my skill level&lt;/li&gt;
  &lt;li&gt;No updates on the state of the application&lt;/li&gt;
  &lt;li&gt;Being rude&lt;/li&gt;
  &lt;li&gt;Even getting angry towards me&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Despite this, I know those recruiters are the minority, majority of recruiters are usually very polite, professional and are just doing the best they can.&lt;/p&gt;

&lt;p&gt;While I understand why some developers might talk about recruiters with distain, I think it is unfair to say that &lt;strong&gt;all&lt;/strong&gt; recruiters are bad. People often only remember the bad experiences anyway. What about the good ones?&lt;/p&gt;

&lt;p&gt;I was recently thinking about how I would go about recruitment if I were in their shoes. It is certainly an industry I know nothing about and perhaps there is a reason why their customer service can either be a hit or miss.&lt;/p&gt;

&lt;h2 id=&quot;some-bad-experiences-&quot;&gt;Some Bad Experiences üëé&lt;/h2&gt;

&lt;p&gt;I remember being a junior and just graduated from the Coding Bootcamp course I‚Äôve enrolled on. I‚Äôve uploaded my CV online and created accounts on many job search portals such as indeed, jobsite, CWJobs etc.&lt;/p&gt;

&lt;p&gt;These job portals have toggle feature where you can make your profile visible to recruiters. My mistake is adding my phone number because as soon as I toggled this on I was flooded with phone calls from recruiters.&lt;/p&gt;

&lt;p&gt;At the time, I was job hunting so I answered all of them thinking that there are opportunities for me as my profile for these sites clearly states my experience, skill level, what technologies I‚Äôm using and what I‚Äôm looking for in a position. However, my experience with almost all of them doesn‚Äôt seem to be the case.&lt;/p&gt;

&lt;p&gt;Those recruiters either had no idea what my experience level was and were trying to present me roles which I‚Äôm not qualified for at all. There were even a few times where the position wasn‚Äôt even for technologies I was familiar with.&lt;/p&gt;

&lt;p&gt;Many of these recruiters also don‚Äôt seem to know much of the technology they‚Äôre recruiting for, although I understand that that isn‚Äôt necessarily a requirement for the role, they should at least know the difference between some of them i.e. Java vs JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the difference between &lt;strong&gt;Java&lt;/strong&gt; and &lt;strong&gt;JavaScript&lt;/strong&gt; is like the difference between &lt;strong&gt;Car&lt;/strong&gt; and &lt;strong&gt;Carpet&lt;/strong&gt; üòÅ&lt;/p&gt;

&lt;h2 id=&quot;many-good-experiences-&quot;&gt;Many Good Experiences üëç&lt;/h2&gt;

&lt;p&gt;That said, I‚Äôve worked with many great recruiters, recruiters who have gone above and beyond to keep me informed on the &lt;strong&gt;state of an application&lt;/strong&gt;, the &lt;strong&gt;back and fourth communication between myself and the employer&lt;/strong&gt;. They get in touch from time to time and it is often clear that &lt;strong&gt;they have great relationships with their clients&lt;/strong&gt; as well.&lt;/p&gt;

&lt;p&gt;It is these recruiters whom I think deserve credit where it‚Äôs due. Those whom I‚Äôll add on LinkedIn and give a recommendation. These are the recruiters whom I directly contact to ask what opportunities there are when I‚Äôm on the market.&lt;/p&gt;

&lt;p&gt;I‚Äôve even had recruiters who‚Äôve worked outside office hours for me. I‚Äôm sure it‚Äôs for their own self-interest, but that kind of motivation makes for great customer service and I think that kind of hard-work deserves recognition.&lt;/p&gt;

&lt;h2 id=&quot;the-challenges-&quot;&gt;The Challenges üßó&lt;/h2&gt;

&lt;p&gt;What are some of the challenges recruiters have to face? I‚Äôll give my opinion on what I think those are.&lt;/p&gt;

&lt;h6 id=&quot;-creating-leads&quot;&gt;ü§û Creating Leads&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;One&lt;/strong&gt; of the challenges I believe recruiters are facing is creating leads, there are many developers who are already employed somewhere, it is not uncommon for developers to be &lt;strong&gt;open to opportunities&lt;/strong&gt; and not &lt;strong&gt;actively looking&lt;/strong&gt;. These are the pool of candidates that recruiters need to tap into, places to look are social media platforms like LinkedIn and job portals such as Indeed.&lt;/p&gt;

&lt;h6 id=&quot;-cold-calling-and-unsolicited-emails&quot;&gt;üìû Cold-calling and unsolicited emails&lt;/h6&gt;

&lt;p&gt;Both cold-calling and unsolicited emails can be very annoying, especially if you‚Äôre not ‚Äòopen to opportunities‚Äô. The issue is that how would a recruiter know this? They can only find out by contacting the potential candidate.&lt;/p&gt;

&lt;p&gt;There are so many potential leads, one tactic is to send them out, as quickly as possible. This is probably one reason why some recruiters don‚Äôt know very much about said candidate, they didn‚Äôt bother to read their profile.&lt;/p&gt;

&lt;p&gt;Its also likely the reason that the emails are not tailored to the candidate which is a common complaint from developers, receiving emails that do not seem directed to you just doesn‚Äôt have the same impact as a receiving a personal email&lt;/p&gt;

&lt;h6 id=&quot;-competition&quot;&gt;üíÉ Competition&lt;/h6&gt;

&lt;p&gt;Its a competitive space. Each recruiter are attempting to recruit from the same pool of candidates; whom are on the market for opportunities. Having to hunt for candidates and to convince said person to consider one of the opportunities on &lt;strong&gt;your&lt;/strong&gt; desk instead of someone else‚Äôs desk.&lt;/p&gt;

&lt;h2 id=&quot;-further-thoughts&quot;&gt;ü§î Further Thoughts&lt;/h2&gt;

&lt;p&gt;These challenges probably explain why some people may have had a bad experience with recruiters. If we, as their potential candidate be more empathetic, then we can at least be more understanding and help them help us to get a win/win solution.&lt;/p&gt;

&lt;p&gt;If you are looking for opportunities then recruiters can be really helpful. They often have opportunities you cannot find on the internet and so its worth staying in touch.&lt;/p&gt;

&lt;p&gt;It is probably the case that you‚Äôre going to have some recruiters whom give you a really bad experience, but like any industry, having bad customer service will only drive them away.&lt;/p&gt;

&lt;p&gt;It works both ways, if you, the candidate, are difficult to work with, the recruiter themselves may not even consider contacting you in the future. And if you alienate a good recruiter, you could lose opportunities which would‚Äôve otherwise been very beneficial to you.&lt;/p&gt;

&lt;p&gt;Its easy enough to ignore the emails if you‚Äôre not open to opportunities, there was a time where I had tried to respond to all of them, but I‚Äôve found that to be too time consuming.&lt;/p&gt;

&lt;p&gt;In terms of the cold-calling, I would suggest removing your personal phone number from any CVs and online profiles you have, should it even be made public on the internet anyway? Instead, save the contact numbers of the recruiters whom you think you‚Äôll be in contact more frequently, you‚Äôll at least know when to answer the call and when to reject them.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Sometimes putting yourself in someone else‚Äôs shoes can add an alternate perspective to why some experiences do not meet your expectations. Recruitment is a very people-oriented industry and yet the challenges they face probably makes it &lt;strong&gt;difficult to do the job how they would like to do it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I feel this is quite an interesting topic to cover, I‚Äôve not read any articles or blogs from other developers what they would like from interacting with recruiters, so I decided to write my own.&lt;/p&gt;

&lt;p&gt;The next time I think about this topic, I‚Äôll probably write about what my personal expectations are for recruiters to hopefully be a form of customer feedback for any recruiters reading it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I was recently thinking about how I would go about recruitment if I were in their shoes. It is certainly an industry I know nothing about and perhaps there is a reason why their customer service can either be a hit or miss.</summary></entry><entry><title type="html">Improve Retention Rate When Learning</title><link href="http://jameslieu.github.io/improve-retention-rate-when-learning/" rel="alternate" type="text/html" title="Improve Retention Rate When Learning" /><published>2020-06-07T00:00:00+01:00</published><updated>2020-06-07T00:00:00+01:00</updated><id>http://jameslieu.github.io/improve-retention-rate-when-learning</id><content type="html" xml:base="http://jameslieu.github.io/improve-retention-rate-when-learning/">&lt;p&gt;For me personally, I struggle to remember much of conversations I‚Äôve had, places I‚Äôve visited or content I‚Äôve read.&lt;/p&gt;

&lt;p&gt;It‚Äôs one of the reasons why I find little value in travelling abroad for holidays. Not being able to remember much when compared to the cost associated, makes the whole experience less worth it for me from a financial perspective.&lt;/p&gt;

&lt;p&gt;My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.&lt;/p&gt;

&lt;h2 id=&quot;the-learning-pyramid-&quot;&gt;The Learning Pyramid üéì&lt;/h2&gt;

&lt;p&gt;There is a representation for retention for different types of learning called  &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;. Which I ironically learned from someone else ‚Äòteaching‚Äô it to me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/Learning-Pyramid.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The learning pyramid is a group of popular learning models and representations relating different degrees of retention induced from various type of learning.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Retention rate&lt;/th&gt;
      &lt;th&gt;Learning activity before test of knowledge&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;90%&lt;/td&gt;
      &lt;td&gt;Teach someone else/use immediately.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;75%&lt;/td&gt;
      &lt;td&gt;Practice what one learned.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50%&lt;/td&gt;
      &lt;td&gt;Engaged in a group discussion.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30%&lt;/td&gt;
      &lt;td&gt;Watch a demonstration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;20%&lt;/td&gt;
      &lt;td&gt;Watch audiovisual.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10%&lt;/td&gt;
      &lt;td&gt;Reading.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5%&lt;/td&gt;
      &lt;td&gt;Listening to a lecture.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;, if I just read or listen to a lecture, the retention rate for that knowledge is low. However, if I were to practice what I‚Äôve learned or teach someone else, then my retention rate would be substantially higher.&lt;/p&gt;

&lt;h2 id=&quot;improving-my-retention-rate-&quot;&gt;Improving My Retention Rate üìà&lt;/h2&gt;

&lt;p&gt;While I don‚Äôt actively teach anyone, I can think of some ways to practice what I‚Äôve learned (depending on the topic).
Alternatively, I think writing notes on what I‚Äôve learned, can at least allow me to re-read key points and hopefully absorb the knowledge better.&lt;/p&gt;

&lt;p&gt;As I learn something either from a book, from someone at work or an article on the internet, it‚Äôs probably a good idea to write notes somewhere I visit regularly so I can re-read it. I used to write in a journal, both physical and on the computer, but I never read from there regularly enough. So I think I‚Äôll try adding these notes on this blog instead.&lt;/p&gt;

&lt;p&gt;Writing in my own words can be a way to improve my understanding of the topic. Also leaving the notes somewhere I can access and shared publicly can maybe be a form of ‚Äòteaching‚Äô as well.&lt;/p&gt;

&lt;p&gt;Although, I suspect some of the notes will be written based on content I‚Äôve read somewhere else, so depending on the content, I may or may not write it in my own words.&lt;/p&gt;

&lt;p&gt;It will likely be written in similar way to taking notes when watching a lecture or powerpoint presentation unlike previous blog posts where they‚Äôre written in a perspective where I‚Äôm sharing my opinion on a topic.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;For me, I‚Äôve been reading more and also stumbling across articles on the internet that has great nuggets of information and not being able to remember much of it is the issue.&lt;/p&gt;

&lt;p&gt;Writing more is only &lt;strong&gt;one&lt;/strong&gt; way for me to address this and leaving them somewhere I can easily read and share in the form of blog posts is the plan, thankfully I‚Äôve taken a liking to writing lately.&lt;/p&gt;

&lt;p&gt;In many ways, I‚Äôm already resolving this issue by adding blog entries. However, they‚Äôre often based on topics I wish to share, so I do some degree of research and thinking before I create those posts.&lt;/p&gt;

&lt;p&gt;For this however, writing notes as and when I learn something of value is where I think is slightly different. And so I think I‚Äôll prefix these particular posts with &lt;strong&gt;‚ÄúProgrammer Notes: &amp;lt;title&amp;gt;‚Äú&lt;/strong&gt; i.e. ‚ÄúProgrammer Notes: Software Construction‚Äù&lt;/p&gt;

&lt;p&gt;I don‚Äôt expect anyone to read these but myself, it will primarily be used as a place for me to refer or to stumble across it if I ever browse through my blog. But the end goal is the continued learning and hopefully a strong retention rate off the back of it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I struggle to remember much of conversations I've had, places I've visited or content I've read. My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.</summary></entry></feed>