<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://jameslieu.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://jameslieu.github.io/" rel="alternate" type="text/html" /><updated>2020-06-18T23:21:49+01:00</updated><id>http://jameslieu.github.io/feed.xml</id><title type="html">James Lieu</title><subtitle>Software Developer</subtitle><author><name>James Lieu</name></author><entry><title type="html">Self-reviewing Your Code</title><link href="http://jameslieu.github.io/self-reviewing-your-code/" rel="alternate" type="text/html" title="Self-reviewing Your Code" /><published>2020-06-18T00:00:00+01:00</published><updated>2020-06-18T00:00:00+01:00</updated><id>http://jameslieu.github.io/self-reviewing-your-code</id><content type="html" xml:base="http://jameslieu.github.io/self-reviewing-your-code/">&lt;p&gt;Self-reviewing your code is, in my opinion, just as important as having someone else review it before it gets approved and deployed. It is akin to proof-reading an email you wrote before sending it; checking that you haven‚Äôt missed anything, whether there are errors or whether there are areas you can refine.&lt;/p&gt;

&lt;p&gt;Not self-reviewing adequately is probably more common than we think, I myself have been guilty of doing this. When you think you‚Äôre done coding your feature, it is easy to skim through your changes (diff) or not look at them at all. Submit the change. Then let your colleague review it while you work on a new and more exciting task.&lt;/p&gt;

&lt;h2 id=&quot;why-should-we-self-review-our-work-&quot;&gt;Why Should We Self-Review Our Work? ü§î&lt;/h2&gt;

&lt;p&gt;It is conceptually the same reason we proof-read any emails or any writing intended for someone else. You‚Äôll want to catch errors, look for areas which can be refined and check if anything was missed or had been forgotten.&lt;/p&gt;

&lt;p&gt;Often re-reading your code again can give you further confidence that what you‚Äôve worked on is done to a standard that you deem acceptable when contributing to the product you‚Äôre working on. Also, depending on the size of the work, when working on a particular feature long enough can reduce the likelihood that we‚Äôll to remember &lt;strong&gt;exactly&lt;/strong&gt; what was added and what was removed.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-worse-that-could-happen-&quot;&gt;What‚Äôs the worse that could happen? ü§∑&lt;/h2&gt;

&lt;p&gt;From the perspective as a developer for a company, it depends on the scenario really, if you‚Äôre working on a system that is only used within the company internally then it‚Äôs not as detrimental if you deploy work that breaks the system.&lt;/p&gt;

&lt;p&gt;Another example is a product that doesn‚Äôt have any ‚Äòlive‚Äô users. There is more leeway for errors or issues under these circumstances. Although, it will not only cause inconvenience for you but for your team members as well.&lt;/p&gt;

&lt;p&gt;It is, however, very serious if the system is used by clients or customers and is a source of revenue for your company. In under any circumstances should anyone be deploying work without being absolutely certain that the changes do not break the system unknowingly. It‚Äôs bad for the customer, its bad for the team and it‚Äôs bad for the company. Everybody is unhappy, so being extra careful when making changes or updates to the system is paramount.&lt;/p&gt;

&lt;h2 id=&quot;reviewed-by-somebody-else-&quot;&gt;Reviewed by somebody else üïµ&lt;/h2&gt;

&lt;p&gt;It‚Äôs a standard practice to have your code reviewed by someone else before it gets released to production. We‚Äôre all human and are not infallible, having a second pair of eyes on your code to check for errors, look for improvements and to make sure that it meets the requirements is very valuable and should not be taken for granted when working in a team.&lt;/p&gt;

&lt;p&gt;The code review process has some acceptable trade-offs. The first is that it requires a member of your team to ‚Äòreview‚Äô said code, which means that time needs to be allocated to that task. The reviewer will need to read the code and if there is feedback or changes requested, then the code owner needs to either go back to modify the code or to have a discussion about it.&lt;/p&gt;

&lt;p&gt;This takes up a fair amount of time and even more so, if there were obvious defects in the code which would‚Äôve been spotted had the developer been more vigilant with reviewing their own work.&lt;/p&gt;

&lt;p&gt;Having the reviewer leave feedback for ‚Äòcommented-out‚Äô code or typos are not only embarrassing but requires time allocated to fix it. Vigilantly self-reviewing your code can at least mitigate those kinds of errors.&lt;/p&gt;

&lt;p&gt;It‚Äôs arguably selfish to leave the fault-finding to the reviewer, as mentioned previously, this review process can take time. How can we expect someone else reviewing your work and to be vigilant if we don‚Äôt abide by the same standard. At the very least, the developer ought to respect their own work by self-reviewing and making sure that what they‚Äôre submitting is done to a high standard.&lt;/p&gt;

&lt;p&gt;Relying on the reviewer to find those because they feel that reviewing their own code will ‚Äòslow‚Äô them down is not only egotistical but a disservice to themselves as the more mistakes they submit, the less confidence the rest of the team will be in the quality and skills of said developer.&lt;/p&gt;

&lt;h3 id=&quot;-my-personal-experience&quot;&gt;üßî My Personal Experience&lt;/h3&gt;

&lt;p&gt;I once had a colleague who did exactly this. He likes to work quickly which &lt;a href=&quot;/working-too-quickly&quot;&gt;has it‚Äôs own problems&lt;/a&gt;, he would open a pull request and then move onto the next task. When I began the code review, it was very often littered with issues, commented out code, code that was used for debugging purposes i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log(&quot;here!!!!&quot;)&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;After the review, it needs to go back into progress, but my colleague would often be in the middle of the next task, which meant that he wouldn‚Äôt pick up the work that was reviewed until the next day or even a few days after depending on how long it would take him to complete the task he was currently working on (which then a PR is created for it for review).&lt;/p&gt;

&lt;p&gt;Because there was little self-review even for working on the feedback on the first PR, when that one goes back into review, it is not uncommon for that one to also have issues or require changes again. So the cycle continues&lt;/p&gt;

&lt;p&gt;The problem was that reviewing like this takes a lot of time. Although the code owner felt he was being very productive, but in terms of the productivity from the team as a whole, we were at risk of not completing all the work we had allocated for that sprint. Productivity is compromise and all he had to do is read his own code to reduce the odds of the work to require updates or changes, especially for the obvious defects such as commented out code.&lt;/p&gt;

&lt;p&gt;Bear in mind that I also have tasks of my own that I need to complete (and have reviewed).&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;To summarize the key points why self-review is important and worth the time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Check we haven‚Äôt missed anything&lt;/li&gt;
  &lt;li&gt;Check whether there are errors&lt;/li&gt;
  &lt;li&gt;Check for areas for refinement&lt;/li&gt;
  &lt;li&gt;Can identify areas of improvement&lt;/li&gt;
  &lt;li&gt;A better team code review experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think habit of self-reviewing your code is one of the things that will improve the quality of the code you write. We‚Äôre not infallible and should almost expect to write code that is imperfect. Self-reviewing simply allows us to allocate time to &lt;strong&gt;think&lt;/strong&gt; about what was written, check for issues or anything you‚Äôve forgotten or to look for ways to improve it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Self-reviewing your code is, in my opinion, just as important as having someone else review it before it gets approved and deployed.</summary></entry><entry><title type="html">Are Meetings Necessary?</title><link href="http://jameslieu.github.io/are-meetings-necessary/" rel="alternate" type="text/html" title="Are Meetings Necessary?" /><published>2020-06-17T00:00:00+01:00</published><updated>2020-06-17T00:00:00+01:00</updated><id>http://jameslieu.github.io/are-meetings-necessary</id><content type="html" xml:base="http://jameslieu.github.io/are-meetings-necessary/">&lt;p&gt;Meetings are a great way to communicate with people within your company. However, they can be huge productivity killers.&lt;/p&gt;

&lt;p&gt;Is a particular meeting even necessary? If you‚Äôre meeting for an hour, one perspective is that its not only one hour that is lost, but one hour multiplied by the total number of attendees.&lt;/p&gt;

&lt;p&gt;I think meetings should only be called after a consensus is reached that the meeting is &lt;strong&gt;necessary&lt;/strong&gt;. What does it mean for a meeting to be necessary? The two factors I can think of is &lt;strong&gt;coordination&lt;/strong&gt; and &lt;strong&gt;conflict&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;-coordination&quot;&gt;ü§ù Coordination&lt;/h3&gt;
&lt;p&gt;For when a decision requires collaboration from different people. This includes people within a team, other teams or departments. The decision could be in regards to a feature that needs to be built and so,  speaking only to the relevant people to have a decision made on what their requirements and expectations are is why this meeting is necessary.&lt;/p&gt;

&lt;h3 id=&quot;-conflict&quot;&gt;ü§º Conflict&lt;/h3&gt;
&lt;p&gt;For when there are disagreements from two or more parties. A meeting in this instance can also be necessary to resolve this conflict and that a consensus has been reached.&lt;/p&gt;

&lt;h2 id=&quot;the-pros-and-cons&quot;&gt;The Pros and Cons&lt;/h2&gt;

&lt;p&gt;Meetings are important and useful, but can also be counter-productive by taking time away from actually getting work done. In my opinion, some of the pros and cons are:&lt;/p&gt;

&lt;h3 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h3&gt;

&lt;h6 id=&quot;-you-may-be-part-of-the-decision-making&quot;&gt;‚úå You may be part of the decision making&lt;/h6&gt;
&lt;p&gt;This kind of activity can help you feel like a valuable member of the team.&lt;/p&gt;

&lt;h6 id=&quot;-you-may-be-able-to-contribute-and-share-knowledge-to-other-attendees&quot;&gt;üí° You may be able to contribute and share knowledge to other attendees&lt;/h6&gt;
&lt;p&gt;There may be times where your experience or knowledge can have an impact and so sharing that can only be positive.&lt;/p&gt;

&lt;h6 id=&quot;-receive-relevant-information&quot;&gt;üì∞ Receive relevant information&lt;/h6&gt;
&lt;p&gt;This is important if its related to work you‚Äôre involved in. You may only be listening during the meeting but the content may be insightful.&lt;/p&gt;

&lt;h6 id=&quot;-you-can-ask-questions&quot;&gt;üì¢ You can ask questions&lt;/h6&gt;
&lt;p&gt;If you don‚Äôt understand something or require further clarity, being present during the discussion allows you to ask questions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h3&gt;

&lt;h6 id=&quot;-the-meeting-may-not-be-relevant-to-you-in-particular&quot;&gt;ü§∑ The meeting may not be relevant to you in particular&lt;/h6&gt;
&lt;p&gt;As mentioned before, attending meetings will cost your time and attention. If the contents of the meeting isn‚Äôt relevant to you, then you could be spending your time and attention on other things.&lt;/p&gt;

&lt;h6 id=&quot;-you-may-have-nothing-to-add-to-the-discussion&quot;&gt;üò´ You may have nothing to add to the discussion&lt;/h6&gt;
&lt;p&gt;This is related to the above point, the meeting isn‚Äôt relevant to you and you have nothing to add, then why is your attendance even necessary? Better to use that time on more pressing tasks&lt;/p&gt;

&lt;h6 id=&quot;-it-can-be-mentally-draining&quot;&gt;üò© It can be mentally draining&lt;/h6&gt;
&lt;p&gt;This one is often overlooked. People in your team, likely has different energy thresholds for long meetings. I often feel extreme fatigue when a meeting has ended. Finding the energy and motivation to start a new task or continue where I left off can be challenging and therefore severely reduces productivity.&lt;/p&gt;

&lt;h6 id=&quot;-reduces-your-productivity&quot;&gt;‚òπ Reduces Your Productivity&lt;/h6&gt;
&lt;p&gt;If you‚Äôre in the middle of a task, having to pause and attend a meeting which may not even be relevant to you is sure to affect your overall productivity. Although you can work around this by with good time management provided the meeting was scheduled with enough time.&lt;/p&gt;

&lt;h2 id=&quot;do-you-need-to-attend-&quot;&gt;Do You Need To Attend? ü§∑&lt;/h2&gt;

&lt;p&gt;Some meetings &lt;strong&gt;are&lt;/strong&gt; necessary. But we should ask ourselves, ‚Äúdo &lt;strong&gt;I&lt;/strong&gt; need to attend‚Äù?&lt;/p&gt;

&lt;p&gt;When meetings are scheduled, it may be relevant to you personally and so your attendance will provide you value.&lt;/p&gt;

&lt;p&gt;The issue is, that we often find ourselves attending meetings, while relevant to other people, is not relevant for you. Meaning, had you not attended that particular meeting, you could‚Äôve been doing something else, something more productive and useful with that time instead.&lt;/p&gt;

&lt;h2 id=&quot;-some-practices-to-consider&quot;&gt;üßç Some Practices To Consider&lt;/h2&gt;

&lt;p&gt;Being more aware about the meetings you have and conscious how much time they take, it‚Äôs worth considering adopting some practices:&lt;/p&gt;

&lt;h3 id=&quot;-dont-meet-unless-absolutely-necessary&quot;&gt;üèÉ Don‚Äôt meet unless absolutely necessary&lt;/h3&gt;

&lt;p&gt;Find out why you‚Äôre meeting; is a meeting necessary? Consider that if you‚Äôre meeting for an hour, it‚Äôs not just an hour of company time that is being lost; it‚Äôs the hour multiplied by the total number of people in attendance. Meetings should only be called after a consensus has been reached that a meeting is necessary.&lt;/p&gt;

&lt;h3 id=&quot;-set-a-time-limit&quot;&gt;‚è± Set A Time Limit&lt;/h3&gt;

&lt;p&gt;Setting a time limit to a suitable length, most people will lose their ability to pay attention the longer the meeting continues. Having a meeting for 15-30 minutes for example can at least guarantee that the attendees are not experiencing too much fatigue. Another benefit of this, is that the people speaking will be encouraged to ‚Äòget to the point‚Äô and be more concise.&lt;/p&gt;

&lt;h3 id=&quot;-ask-people-to-prepare-in-advance&quot;&gt;‚úç Ask People To Prepare in Advance&lt;/h3&gt;

&lt;p&gt;I feel meetings should not be used for brainstorming. Having a clear agenda, topics, questions or reading sent to all attendees in advance can make the meeting overall more productive. Thinking ahead and preparing for the meeting will help if you‚Äôre not good at ‚Äòthinking on your feet‚Äô.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Meetings have their pros and cons. They‚Äôre important but I think it‚Äôs also a good idea to be mindful about how much time they cost.
How much productivity is lost as a result of attending meetings?&lt;/p&gt;

&lt;p&gt;I think attending meetings where you‚Äôre an active participant is important and has value, but for those where you‚Äôre not, would it not, be just as effective if you were cc‚Äôd an email from an attendee with a written summary, key-points or the decisions from said meeting? Food for thought.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Meetings are a great way to communicate with people within your company. However, they can be huge productivity killers.</summary></entry><entry><title type="html">Writing Code Too Quickly</title><link href="http://jameslieu.github.io/writing-code-too-quickly/" rel="alternate" type="text/html" title="Writing Code Too Quickly" /><published>2020-06-12T00:00:00+01:00</published><updated>2020-06-12T00:00:00+01:00</updated><id>http://jameslieu.github.io/writing-code-too-quickly</id><content type="html" xml:base="http://jameslieu.github.io/writing-code-too-quickly/">&lt;p&gt;Writing Code very quickly does not necessarily mean you‚Äôre being more productive and can actually increase the amount of time to complete a task.&lt;/p&gt;

&lt;p&gt;When writing an email, it‚Äôs not uncommon to not realise that there are errors or something missing (i.e. file attachments) in the email before you send it.&lt;/p&gt;

&lt;p&gt;These problems are also present when coding. Not taking the time to plan and proof-read you code can lead to problems which are easily mitigated if you adopt a slower and more methodical approach.&lt;/p&gt;

&lt;h2 id=&quot;the-process-&quot;&gt;The Process üìù&lt;/h2&gt;

&lt;p&gt;I used to ‚Äútry‚Äù to write code very fast. I would write code quickly but often not identifying the problem and solving it in a sensible way. I would find that I‚Äôm spending an large amount of time debugging but at the same time not really understanding the problem I‚Äôm trying to solve.&lt;/p&gt;

&lt;p&gt;For example, when a unit test is failing, I discover where I think the problem is, start to tweak it, and run the test to see if it passes, if it fails I repeat that process again and again until it passed. It looked something like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Make a change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Run test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; If the test fails, repeat step 1.&lt;/p&gt;

&lt;p&gt;Imagine doing this over and over until the test finally passes. During this process, because I‚Äôm ‚Äòrushing‚Äô, there can be typos or missing characters in my changes, which I only discover because the tests notified me when it failed or if the complier fails the build.&lt;/p&gt;

&lt;p&gt;If that didn‚Äôt work, I would do a lot of &lt;a href=&quot;/copy-and-paste-programming&quot;&gt;copy-and-pasting&lt;/a&gt; either with blocks of logic or functions from the source code with slight changes. Or I look on the internet for solutions and copy the code from there.&lt;/p&gt;

&lt;p&gt;Having a decent typing speed and using a few keyboard shortcuts on the IDE motivated me to churn out code as quickly as I can.&lt;/p&gt;

&lt;p&gt;It sounds like a great at first glance but there were some serious flaws with this way of working. So I thought I might list my opinions on the pros and cons of this style of coding.&lt;/p&gt;

&lt;h2 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h2&gt;

&lt;h3 id=&quot;-you-feel-more-productive&quot;&gt;üí™ You feel more productive&lt;/h3&gt;

&lt;p&gt;You‚Äôll find that you‚Äôre very focused on the task, typing in so many lines of code, running your unit tests to get them to pass as you debug or tweak the logic to correct a bug or issue with the application.&lt;/p&gt;

&lt;p&gt;As you‚Äôre doing this, time is going by very quickly, you feel good at how focused and productive the day has been.&lt;/p&gt;

&lt;h3 id=&quot;-its-sometimes-faster&quot;&gt;üèÉ It‚Äôs sometimes faster&lt;/h3&gt;

&lt;p&gt;The increased speed in which you‚Äôre working can mean that you‚Äôre getting things done faster, providing that the solution you‚Äôve written works and there were no issues.&lt;/p&gt;

&lt;p&gt;If enough time and effort is spent on the requirements and prerequisites prior to coding, then often this way of working is fine and feels great when you have a plan.&lt;/p&gt;

&lt;h2 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h2&gt;

&lt;p&gt;I‚Äôll list the ones based on my own experience as well as some ideas how to address them.&lt;/p&gt;

&lt;h3 id=&quot;-youre-more-prone-to-mistakes&quot;&gt;ü§¶ You‚Äôre more prone to mistakes&lt;/h3&gt;

&lt;p&gt;You‚Äôre more likely to make these mistakes if you don‚Äôt pace yourself; things like typos, using the wrong variable or misreading the code can really halt your productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Pace yourself, focus on one step at a time and be sure to read your code as you write it.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-dont-read-the-code&quot;&gt;üôÑ You don‚Äôt read the code&lt;/h3&gt;

&lt;p&gt;You‚Äôll find that ‚Äòskimming through‚Äô the code is faster and matches your pace of working. This is more obvious when self-reviewing your own code, rushing to push the code up as soon as possible can encourage you to ‚Äòskim through‚Äô your code and risk missing any flaws with the code.&lt;/p&gt;

&lt;p&gt;Some of the issues you might introduce are typos, refactoring opportunities, commented-out code, unused code and duplication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Read your code often.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-havent-actually-identified-the-problem-youre-trying-to-solve&quot;&gt;üò¨ You haven‚Äôt actually identified the problem you‚Äôre trying to solve&lt;/h3&gt;

&lt;p&gt;The urge to start coding before coming up with a plan can hide what the real solution or problem is. The solution often isn‚Äôt something that‚Äôs obvious, you may have an idea how to write it, but what if that idea is incorrect?&lt;/p&gt;

&lt;p&gt;This has happened to me numerous times. You‚Äôll spend hours on a task only to realise that your solution is flawed or even wrong.
You can be so focused on the task that you don‚Äôt realise the time and have spent potentially hours on it before asking for help.&lt;/p&gt;

&lt;p&gt;You speak to a co-worker to see if they can help you, and you both immediately realise that your solution needs to be updated or improved. Even worse if you end up realising this as you were explaining problem to begin with. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Rubber_duck_debugging&quot;&gt;Rubber duck debugging&lt;/a&gt; ü¶Ü&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Take a moment to make sure you understand the problem, it helps to plan how you‚Äôre going to tackle the problem by writing a checklist or some key points on what the problem is.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-forget-something&quot;&gt;üôä You Forget Something&lt;/h3&gt;

&lt;p&gt;Not only are you more likely to make mistakes when coding too quickly, you‚Äôre more likely to miss something. When you‚Äôve finally gotten that unit test to pass. You may feel that you‚Äôre done, commit your code and push your changes without thinking whether you may need to do anything else.&lt;/p&gt;

&lt;p&gt;A common example would be to run the full test suite again, new logic you have written may have broken another part of the system. So the tests will fail and you‚Äôll need to fix it. It is especially bad if the test suite takes a very long time to run.&lt;/p&gt;

&lt;p&gt;Another key example is the organization of your work, particularly for version control. A good practice when working with Git for example is to commit regularly and to keep your commits. When working too quickly, you may forget to commit and if  you‚Äôre working on a large feature. This can be problematic if you haven‚Äôt completed the work and you needed to commit the code to hand-over to someone else.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Commit and self-review your own code regularly&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-spend-more-time-debugging&quot;&gt;üêû You spend more time debugging&lt;/h3&gt;

&lt;p&gt;Probably the main sign and negative aspect of coding too fast.&lt;/p&gt;

&lt;p&gt;Your code doesn‚Äôt work and you find yourself chasing tons of bugs and issues.
You end up spending more time trying to fix problems rather than think about the problem and solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Code a little bit at a time, test and verify it before moving on to the next step.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;-you-lose-understanding-of-how-your-code-works&quot;&gt;üôâ You lose understanding of how your code works&lt;/h3&gt;

&lt;p&gt;When working this way, after a while of trying to fix the bug, you may find that you‚Äôve made so many changes and tweaks to get the tests to pass, that you‚Äôve changed too much and no longer know what you‚Äôre code is doing.&lt;/p&gt;

&lt;p&gt;And so you‚Äôll attempt to undo (&lt;strong&gt;CTRL+Z&lt;/strong&gt;) everything in order to get it back to the state it was in before all of those changes you made.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution: Take a step back and make sure you understand the problem and the solution.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Often those who write the code the fastest in terms of time are those who are methodical and slow about the process. Attempting to rush the work can lead to many problems if you‚Äôre not careful. Slowing down and being methodical in your way of working is not only a safer but also less stressful.&lt;/p&gt;

&lt;p&gt;Developers aren‚Äôt measured on how fast they write code but by the quality of the solution and how well it works and maintainable it is. The best code is written slowly and purposefully, not quickly with the intent of meeting an arbitrary deadline.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Writing Code very quickly does not necessarily mean you're being more productive and can actually increase the amount of time to complete a task.</summary></entry><entry><title type="html">Programmer Notes: Software Construction</title><link href="http://jameslieu.github.io/programmer-notes-software-construction/" rel="alternate" type="text/html" title="Programmer Notes: Software Construction" /><published>2020-06-10T00:00:00+01:00</published><updated>2020-06-10T00:00:00+01:00</updated><id>http://jameslieu.github.io/programmer-notes-software-construction</id><content type="html" xml:base="http://jameslieu.github.io/programmer-notes-software-construction/">&lt;p&gt;This is part of my &lt;strong&gt;‚ÄúProgrammer Notes‚Äù&lt;/strong&gt; series where I leave notes in the form of a blog post here based on something I‚Äôve read or learned. See &lt;a href=&quot;/improve-retention-rate-when-learning/&quot;&gt;this post&lt;/a&gt; for more context.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-construction&quot;&gt;What is Construction?&lt;/h2&gt;

&lt;p&gt;You know what ‚Äúconstruction‚Äù means when it‚Äôs used outside software development. ‚ÄúConstruction‚Äù is the work ‚Äúconstruction workers‚Äù do when they build a house, a school, or a skyscraper. When you were younger, you built things out of ‚Äúconstruction paper‚Äù.&lt;/p&gt;

&lt;p&gt;In common usage, ‚Äúconstruction‚Äù refers to the process of building, the process might include some aspects of planning, designing, and checking your work, but mostly ‚Äúconstruction‚Äù refers to the hands-on part of creating something.&lt;/p&gt;

&lt;h2 id=&quot;what-is-software-construction&quot;&gt;What is Software Construction?&lt;/h2&gt;

&lt;p&gt;Developing software is a complicated process. Researchers have identified numerous distinct activities that go into software development. They include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Problem definition&lt;/li&gt;
  &lt;li&gt;Requirements development&lt;/li&gt;
  &lt;li&gt;Construction planning&lt;/li&gt;
  &lt;li&gt;Software architecture, or high-level design&lt;/li&gt;
  &lt;li&gt;Detailed design&lt;/li&gt;
  &lt;li&gt;Coding and debugging&lt;/li&gt;
  &lt;li&gt;Unit testing&lt;/li&gt;
  &lt;li&gt;Integration testing&lt;/li&gt;
  &lt;li&gt;Integration&lt;/li&gt;
  &lt;li&gt;System testing&lt;/li&gt;
  &lt;li&gt;Corrective maintenance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Construction is mostly coding and debugging but also involves detailed design, construction planning, unit testing integration testing, and other activities.&lt;/p&gt;

&lt;p&gt;Construction is also sometimes known as ‚Äúcoding‚Äù or ‚Äúprogramming‚Äù ‚ÄúCoding‚Äù isn‚Äôt really the best word because it implied the mechanical translation of a preexisting design into a computer language; construction is not at all mechanical and involves substantial creativity and judgment.&lt;/p&gt;

&lt;p&gt;Here are some specific tasks involved in construction:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Verifying that the groundwork has been laid so that construction can proceed successfully&lt;/li&gt;
  &lt;li&gt;Determining how your code will be tested&lt;/li&gt;
  &lt;li&gt;Designing and writing classes and routines&lt;/li&gt;
  &lt;li&gt;Creating and naming variables and named constants&lt;/li&gt;
  &lt;li&gt;Selecting control structures and organizing blocks og statements&lt;/li&gt;
  &lt;li&gt;Unit testing, integration testing and debugging your own code&lt;/li&gt;
  &lt;li&gt;Reviewing other team members‚Äô low level designs and code and having them review yours&lt;/li&gt;
  &lt;li&gt;Polishing code by carefully formatting and commenting it&lt;/li&gt;
  &lt;li&gt;Integrating software components that were created separately&lt;/li&gt;
  &lt;li&gt;Tuning code to make it faster and use fewer resources&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-is-software-construction-important&quot;&gt;Why Is Software Construction Important?&lt;/h2&gt;

&lt;p&gt;If you agree that improving software development is important in general, the question is Why is construction an important focus?&lt;/p&gt;

&lt;p&gt;Here‚Äôs why:&lt;/p&gt;

&lt;h3 id=&quot;construction-is-a-large-part-of-software-development&quot;&gt;Construction is a large part of software development&lt;/h3&gt;

&lt;p&gt;Depending on the size of the project, construction typically takes 30 to 80 percent of the total time spent on a project. Anything that takes up that much project time is bound to affect the success of the project.&lt;/p&gt;

&lt;h3 id=&quot;construction-is-the-central-activity-in-software-development&quot;&gt;Construction is the central activity in software development&lt;/h3&gt;

&lt;p&gt;Requirements and architecture are done before construction so that you can do construction effectively. System testing (in the strict sense of independent testing) is done after construction to verify that construction has been done correctly. Construction is at the center of the software-development process.&lt;/p&gt;

&lt;h3 id=&quot;with-a-focus-on-construction-the-individual-programmers-productivity-can-improve-enormously&quot;&gt;With a focus on construction, the individual programmer‚Äôs productivity can improve enormously&lt;/h3&gt;

&lt;p&gt;A study (1968) showed that the productivity of individual programmers varied by a factor of 10 to 20 during construction.&lt;/p&gt;

&lt;h3 id=&quot;constructions-product-the-source-code-is-often-the-only-accurate-description-of-the-software&quot;&gt;Construction‚Äôs product, the source code, is often the only accurate description of the software&lt;/h3&gt;

&lt;p&gt;In many projects, the only documentation available to programmers is the code itself. Requirements specifications and design documents can go out of date, but the source code is always up to date. Consequently, It‚Äôs imperative that the source code be of the highest quality.&lt;/p&gt;

&lt;h3 id=&quot;construction-is-the-only-activity-thats-guaranteed-to-be-done&quot;&gt;Construction is the only activity that‚Äôs guaranteed to be done&lt;/h3&gt;

&lt;p&gt;The ideal software project goes through careful requirements development and architectural design before construction begins. Imperfect real-world projects, however, often skip requirements and design to jump into construction.&lt;/p&gt;

&lt;p&gt;They drop testing because they have too many errors to fix and they‚Äôve run out of time. But no matter how rushed or poorly planned a project is, you can‚Äôt drop construction. Improving construction is thus a way of improving any software development effort, no matter how abbreviated&lt;/p&gt;

&lt;h2 id=&quot;key-points&quot;&gt;Key Points&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Software Construction is the central activity in software development; construction is the only activity that‚Äôs guaranteed to happen on every project.&lt;/li&gt;
  &lt;li&gt;The main activities in construction are detailed design, coding, debugging, integration, and developer testing (unit testing and integration testing)&lt;/li&gt;
  &lt;li&gt;Other common terms for construction are ‚Äòcoding‚Äô or ‚Äòprogramming‚Äô&lt;/li&gt;
  &lt;li&gt;The quality of the construction substantially affects the quality of the software.&lt;/li&gt;
  &lt;li&gt;Your understanding of how to do construction determines how good a programmer you are.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;p&gt;McConnell, S., 2004. &lt;em&gt;Code Complete, Second Edition.&lt;/em&gt; Redmond (Washington): Microsoft Press.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">What is software construction? And why it is important?</summary></entry><entry><title type="html">My Experience With Recruiters</title><link href="http://jameslieu.github.io/my-experience-with-recruiters/" rel="alternate" type="text/html" title="My Experience With Recruiters" /><published>2020-06-09T00:00:00+01:00</published><updated>2020-06-09T00:00:00+01:00</updated><id>http://jameslieu.github.io/my-experience-with-recruiters</id><content type="html" xml:base="http://jameslieu.github.io/my-experience-with-recruiters/">&lt;p&gt;Developers have often spoken very negatively on their experiences with recruiters. I myself have had some poor experiences with a lot a recruiters.&lt;/p&gt;

&lt;p&gt;Experiences such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Being lied to&lt;/li&gt;
  &lt;li&gt;Lying to their client about my salary expectations&lt;/li&gt;
  &lt;li&gt;Lying to their client about my skill level&lt;/li&gt;
  &lt;li&gt;No updates on the state of the application&lt;/li&gt;
  &lt;li&gt;Being rude&lt;/li&gt;
  &lt;li&gt;Even getting angry towards me&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Despite this, I know those recruiters are the minority, majority of recruiters are usually very polite, professional and are just doing the best they can.&lt;/p&gt;

&lt;p&gt;While I understand why some developers might talk about recruiters with distain, I think it is unfair to say that &lt;strong&gt;all&lt;/strong&gt; recruiters are bad. People often only remember the bad experiences anyway. What about the good ones?&lt;/p&gt;

&lt;p&gt;I was recently thinking about how I would go about recruitment if I were in their shoes. It is certainly an industry I know nothing about and perhaps there is a reason why their customer service can either be a hit or miss.&lt;/p&gt;

&lt;h2 id=&quot;some-bad-experiences-&quot;&gt;Some Bad Experiences üëé&lt;/h2&gt;

&lt;p&gt;I remember being a junior and just graduated from the Coding Bootcamp course I‚Äôve enrolled on. I‚Äôve uploaded my CV online and created accounts on many job search portals such as indeed, jobsite, CWJobs etc.&lt;/p&gt;

&lt;p&gt;These job portals have toggle feature where you can make your profile visible to recruiters. My mistake is adding my phone number because as soon as I toggled this on I was flooded with phone calls from recruiters.&lt;/p&gt;

&lt;p&gt;At the time, I was job hunting so I answered all of them thinking that there are opportunities for me as my profile for these sites clearly states my experience, skill level, what technologies I‚Äôm using and what I‚Äôm looking for in a position. However, my experience with almost all of them doesn‚Äôt seem to be the case.&lt;/p&gt;

&lt;p&gt;Those recruiters either had no idea what my experience level was and were trying to present me roles which I‚Äôm not qualified for at all. There were even a few times where the position wasn‚Äôt even for technologies I was familiar with.&lt;/p&gt;

&lt;p&gt;Many of these recruiters also don‚Äôt seem to know much of the technology they‚Äôre recruiting for, although I understand that that isn‚Äôt necessarily a requirement for the role, they should at least know the difference between some of them i.e. Java vs JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the difference between &lt;strong&gt;Java&lt;/strong&gt; and &lt;strong&gt;JavaScript&lt;/strong&gt; is like the difference between &lt;strong&gt;Car&lt;/strong&gt; and &lt;strong&gt;Carpet&lt;/strong&gt; üòÅ&lt;/p&gt;

&lt;h2 id=&quot;many-good-experiences-&quot;&gt;Many Good Experiences üëç&lt;/h2&gt;

&lt;p&gt;That said, I‚Äôve worked with many great recruiters, recruiters who have gone above and beyond to keep me informed on the &lt;strong&gt;state of an application&lt;/strong&gt;, the &lt;strong&gt;back and fourth communication between myself and the employer&lt;/strong&gt;. They get in touch from time to time and it is often clear that &lt;strong&gt;they have great relationships with their clients&lt;/strong&gt; as well.&lt;/p&gt;

&lt;p&gt;It is these recruiters whom I think deserve credit where it‚Äôs due. Those whom I‚Äôll add on LinkedIn and give a recommendation. These are the recruiters whom I directly contact to ask what opportunities there are when I‚Äôm on the market.&lt;/p&gt;

&lt;p&gt;I‚Äôve even had recruiters who‚Äôve worked outside office hours for me. I‚Äôm sure it‚Äôs for their own self-interest, but that kind of motivation makes for great customer service and I think that kind of hard-work deserves recognition.&lt;/p&gt;

&lt;h2 id=&quot;the-challenges-&quot;&gt;The Challenges üßó&lt;/h2&gt;

&lt;p&gt;What are some of the challenges recruiters have to face? I‚Äôll give my opinion on what I think those are.&lt;/p&gt;

&lt;h6 id=&quot;-creating-leads&quot;&gt;ü§û Creating Leads&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;One&lt;/strong&gt; of the challenges I believe recruiters are facing is creating leads, there are many developers who are already employed somewhere, it is not uncommon for developers to be &lt;strong&gt;open to opportunities&lt;/strong&gt; and not &lt;strong&gt;actively looking&lt;/strong&gt;. These are the pool of candidates that recruiters need to tap into, places to look are social media platforms like LinkedIn and job portals such as Indeed.&lt;/p&gt;

&lt;h6 id=&quot;-cold-calling-and-unsolicited-emails&quot;&gt;üìû Cold-calling and unsolicited emails&lt;/h6&gt;

&lt;p&gt;Both cold-calling and unsolicited emails can be very annoying, especially if you‚Äôre not ‚Äòopen to opportunities‚Äô. The issue is that how would a recruiter know this? They can only find out by contacting the potential candidate.&lt;/p&gt;

&lt;p&gt;There are so many potential leads, one tactic is to send them out, as quickly as possible. This is probably one reason why some recruiters don‚Äôt know very much about said candidate, they didn‚Äôt bother to read their profile.&lt;/p&gt;

&lt;p&gt;Its also likely the reason that the emails are not tailored to the candidate which is a common complaint from developers, receiving emails that do not seem directed to you just doesn‚Äôt have the same impact as a receiving a personal email&lt;/p&gt;

&lt;h6 id=&quot;-competition&quot;&gt;üíÉ Competition&lt;/h6&gt;

&lt;p&gt;Its a competitive space. Each recruiter are attempting to recruit from the same pool of candidates; whom are on the market for opportunities. Having to hunt for candidates and to convince said person to consider one of the opportunities on &lt;strong&gt;your&lt;/strong&gt; desk instead of someone else‚Äôs desk.&lt;/p&gt;

&lt;h2 id=&quot;-further-thoughts&quot;&gt;ü§î Further Thoughts&lt;/h2&gt;

&lt;p&gt;These challenges probably explain why some people may have had a bad experience with recruiters. If we, as their potential candidate be more empathetic, then we can at least be more understanding and help them help us to get a win/win solution.&lt;/p&gt;

&lt;p&gt;If you are looking for opportunities then recruiters can be really helpful. They often have opportunities you cannot find on the internet and so its worth staying in touch.&lt;/p&gt;

&lt;p&gt;It is probably the case that you‚Äôre going to have some recruiters whom give you a really bad experience, but like any industry, having bad customer service will only drive them away.&lt;/p&gt;

&lt;p&gt;It works both ways, if you, the candidate, are difficult to work with, the recruiter themselves may not even consider contacting you in the future. And if you alienate a good recruiter, you could lose opportunities which would‚Äôve otherwise been very beneficial to you.&lt;/p&gt;

&lt;p&gt;Its easy enough to ignore the emails if you‚Äôre not open to opportunities, there was a time where I had tried to respond to all of them, but I‚Äôve found that to be too time consuming.&lt;/p&gt;

&lt;p&gt;In terms of the cold-calling, I would suggest removing your personal phone number from any CVs and online profiles you have, should it even be made public on the internet anyway? Instead, save the contact numbers of the recruiters whom you think you‚Äôll be in contact more frequently, you‚Äôll at least know when to answer the call and when to reject them.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Sometimes putting yourself in someone else‚Äôs shoes can add an alternate perspective to why some experiences do not meet your expectations. Recruitment is a very people-oriented industry and yet the challenges they face probably makes it &lt;strong&gt;difficult to do the job how they would like to do it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I feel this is quite an interesting topic to cover, I‚Äôve not read any articles or blogs from other developers what they would like from interacting with recruiters, so I decided to write my own.&lt;/p&gt;

&lt;p&gt;The next time I think about this topic, I‚Äôll probably write about what my personal expectations are for recruiters to hopefully be a form of customer feedback for any recruiters reading it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I was recently thinking about how I would go about recruitment if I were in their shoes. It is certainly an industry I know nothing about and perhaps there is a reason why their customer service can either be a hit or miss.</summary></entry><entry><title type="html">Improve Retention Rate When Learning</title><link href="http://jameslieu.github.io/improve-retention-rate-when-learning/" rel="alternate" type="text/html" title="Improve Retention Rate When Learning" /><published>2020-06-07T00:00:00+01:00</published><updated>2020-06-07T00:00:00+01:00</updated><id>http://jameslieu.github.io/improve-retention-rate-when-learning</id><content type="html" xml:base="http://jameslieu.github.io/improve-retention-rate-when-learning/">&lt;p&gt;For me personally, I struggle to remember much of conversations I‚Äôve had, places I‚Äôve visited or content I‚Äôve read.&lt;/p&gt;

&lt;p&gt;It‚Äôs one of the reasons why I find little value in travelling abroad for holidays. Not being able to remember much when compared to the cost associated, makes the whole experience less worth it for me from a financial perspective.&lt;/p&gt;

&lt;p&gt;My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.&lt;/p&gt;

&lt;h2 id=&quot;the-learning-pyramid-&quot;&gt;The Learning Pyramid üéì&lt;/h2&gt;

&lt;p&gt;There is a representation for retention for different types of learning called  &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;. Which I ironically learned from someone else ‚Äòteaching‚Äô it to me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/Learning-Pyramid.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The learning pyramid is a group of popular learning models and representations relating different degrees of retention induced from various type of learning.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Retention rate&lt;/th&gt;
      &lt;th&gt;Learning activity before test of knowledge&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;90%&lt;/td&gt;
      &lt;td&gt;Teach someone else/use immediately.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;75%&lt;/td&gt;
      &lt;td&gt;Practice what one learned.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50%&lt;/td&gt;
      &lt;td&gt;Engaged in a group discussion.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30%&lt;/td&gt;
      &lt;td&gt;Watch a demonstration.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;20%&lt;/td&gt;
      &lt;td&gt;Watch audiovisual.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10%&lt;/td&gt;
      &lt;td&gt;Reading.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5%&lt;/td&gt;
      &lt;td&gt;Listening to a lecture.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;According to &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_pyramid&quot;&gt;the learning pyramid&lt;/a&gt;, if I just read or listen to a lecture, the retention rate for that knowledge is low. However, if I were to practice what I‚Äôve learned or teach someone else, then my retention rate would be substantially higher.&lt;/p&gt;

&lt;h2 id=&quot;improving-my-retention-rate-&quot;&gt;Improving My Retention Rate üìà&lt;/h2&gt;

&lt;p&gt;While I don‚Äôt actively teach anyone, I can think of some ways to practice what I‚Äôve learned (depending on the topic).
Alternatively, I think writing notes on what I‚Äôve learned, can at least allow me to re-read key points and hopefully absorb the knowledge better.&lt;/p&gt;

&lt;p&gt;As I learn something either from a book, from someone at work or an article on the internet, it‚Äôs probably a good idea to write notes somewhere I visit regularly so I can re-read it. I used to write in a journal, both physical and on the computer, but I never read from there regularly enough. So I think I‚Äôll try adding these notes on this blog instead.&lt;/p&gt;

&lt;p&gt;Writing in my own words can be a way to improve my understanding of the topic. Also leaving the notes somewhere I can access and shared publicly can maybe be a form of ‚Äòteaching‚Äô as well.&lt;/p&gt;

&lt;p&gt;Although, I suspect some of the notes will be written based on content I‚Äôve read somewhere else, so depending on the content, I may or may not write it in my own words.&lt;/p&gt;

&lt;p&gt;It will likely be written in similar way to taking notes when watching a lecture or powerpoint presentation unlike previous blog posts where they‚Äôre written in a perspective where I‚Äôm sharing my opinion on a topic.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;For me, I‚Äôve been reading more and also stumbling across articles on the internet that has great nuggets of information and not being able to remember much of it is the issue.&lt;/p&gt;

&lt;p&gt;Writing more is only &lt;strong&gt;one&lt;/strong&gt; way for me to address this and leaving them somewhere I can easily read and share in the form of blog posts is the plan, thankfully I‚Äôve taken a liking to writing lately.&lt;/p&gt;

&lt;p&gt;In many ways, I‚Äôm already resolving this issue by adding blog entries. However, they‚Äôre often based on topics I wish to share, so I do some degree of research and thinking before I create those posts.&lt;/p&gt;

&lt;p&gt;For this however, writing notes as and when I learn something of value is where I think is slightly different. And so I think I‚Äôll prefix these particular posts with &lt;strong&gt;‚ÄúProgrammer Notes: &amp;lt;title&amp;gt;‚Äú&lt;/strong&gt; i.e. ‚ÄúProgrammer Notes: Software Construction‚Äù&lt;/p&gt;

&lt;p&gt;I don‚Äôt expect anyone to read these but myself, it will primarily be used as a place for me to refer or to stumble across it if I ever browse through my blog. But the end goal is the continued learning and hopefully a strong retention rate off the back of it.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I struggle to remember much of conversations I've had, places I've visited or content I've read. My ability to retain information is extremely poor and so I need to figure out a way to improve my retention rate.</summary></entry><entry><title type="html">Pluralsight Review</title><link href="http://jameslieu.github.io/pluralsight-review/" rel="alternate" type="text/html" title="Pluralsight Review" /><published>2020-06-05T00:00:00+01:00</published><updated>2020-06-05T00:00:00+01:00</updated><id>http://jameslieu.github.io/pluralsight-review</id><content type="html" xml:base="http://jameslieu.github.io/pluralsight-review/">&lt;p&gt;On 17th Oct 2019 I‚Äôve purchased an annual Pluralsight subscription.&lt;/p&gt;

&lt;p&gt;I‚Äôve watched it on and off around that time but since 24th February 2020 I‚Äôve been watching it almost daily now and thought to myself to write a review here on my blog.&lt;/p&gt;

&lt;h2 id=&quot;introduction-&quot;&gt;Introduction üèÅ&lt;/h2&gt;

&lt;p&gt;Pluralsight is a premium video streaming service dedicated to teaching courses relating to technology such as Software Development, Cyber Security and IT Ops.&lt;/p&gt;

&lt;p&gt;The courses are focused on a specific topic which is broken down into smaller digestible videos.&lt;/p&gt;

&lt;h3 id=&quot;-pricing-plans&quot;&gt;üí∞ Pricing Plans&lt;/h3&gt;

&lt;p&gt;There are three personal plans you can choose from.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The monthly plan costs &lt;strong&gt;¬£24.00&lt;/strong&gt; per month&lt;/li&gt;
  &lt;li&gt;the annual subscription &lt;strong&gt;¬£245.00&lt;/strong&gt; per year&lt;/li&gt;
  &lt;li&gt;the premium plan is &lt;strong&gt;¬£370.00&lt;/strong&gt; per year&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I had gone with the annual subscription as my company offered this as a perk. Although when I paid via PayPal, it had used the US pricing which was &lt;strong&gt;$299.00&lt;/strong&gt; and then I accrued an additional charge of &lt;strong&gt;¬£7.00&lt;/strong&gt; from my bank because of that transaction My mistake.&lt;/p&gt;

&lt;p&gt;The monthly cost is a bit more affordable, but going for the annual cost is lower overall (versus being on the monthly plan for 12 months). If you‚Äôre planning on using for under 10 months then the monthly plan would work out cheaper.&lt;/p&gt;

&lt;h2 id=&quot;content-&quot;&gt;Content üìú&lt;/h2&gt;

&lt;p&gt;So the main service is the huge video library of various courses you can learn from. It covers multiple specialities and technologies in different areas. For example, for software development, there are courses in C#, JavaScript, .NET Core, VueJS,  AWS, Azure etc.&lt;/p&gt;

&lt;p&gt;There are other types of programming topics such as design patterns, domain driven design, unit testing and courses outside of technology such as ‚ÄòMindfulness for Technologists‚Äô or ‚ÄòCommunications for Technologists‚Äô.&lt;/p&gt;

&lt;p&gt;The video library is occasionally updated and new courses added regularly.&lt;/p&gt;

&lt;p&gt;Each course and its video clips are pretty good. The quality of the content is done to a high standard and the videos are concise and  the length of the video clips are short enough to keep your attention.&lt;/p&gt;

&lt;p&gt;One thing I noticed is that feels like each video clip speed is slower than how the course author recorded it. So I have to watch it at 1.5x - 2.0x speed in order for it to sound more natural. This suggests that the courses are actually shorter than it claims. It also skews the usage statistics as watching a course for &lt;strong&gt;45 minutes&lt;/strong&gt; will record as &lt;strong&gt;60 minutes&lt;/strong&gt; in the report.&lt;/p&gt;

&lt;h2 id=&quot;features-&quot;&gt;Features ‚úÖ&lt;/h2&gt;

&lt;h3 id=&quot;-paths-and-skill-iq&quot;&gt;‚õ∞ Paths and Skill IQ&lt;/h3&gt;
&lt;p&gt;Pluralsight has a nice feature called ‚ÄòPaths‚Äô. Paths are a collection of courses which were curated by Pluralsight to provide a degree of progression for the user as they learn. It is broken down into ‚ÄòBeginner‚Äô, ‚ÄòIntermediate‚Äô  and ‚ÄòAdvance‚Äô categories each containing courses of the relevant level.&lt;/p&gt;

&lt;p&gt;Before you begin a path, you‚Äôre encouraged to take a ‚ÄòSkill IQ‚Äô test in order to recommend you a category based on how well you do.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-0.png&quot; /&gt;
&lt;em&gt;My Current Skill IQ rating as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They also allow you to take this test as many times you like. I recommend doing it a few months after starting a path. It‚Äôs good to see how you‚Äôve progressed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-1.png&quot; /&gt;
&lt;em&gt;My Skill IQ history&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So in this example, I had taken the C# Skill IQ on 3rd February 2020 and had scored around 100. When I took the test again on April 16th 2020, my score is now at &lt;strong&gt;206&lt;/strong&gt; which moves me a from &lt;strong&gt;Proficient&lt;/strong&gt; to just above &lt;strong&gt;Expert&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This isn‚Äôt some indicator of my &lt;em&gt;actual&lt;/em&gt; skill level really but is scored based on how well I answered the multiple choice questions in the test. Some questions, I must admit, I did not know the answer to but had answered correctly either by accident or answering using process of elimination.&lt;/p&gt;

&lt;p&gt;What I liked about the Path feature is that it provides me some direction when deciding what course or videos to watch. At the time, I had selected the C# path and seeing the courses in their associated category based on the skill level helps me choose which course to take next.&lt;/p&gt;

&lt;p&gt;One minor critique I have of the ‚ÄòSkill IQ‚Äô is, it may discourage the user from considering courses that are in the lower skill category. I think even though I have some experience with C# (in this scenario), that doesn‚Äôt necessarily mean I‚Äôm an ‚Äòexpert‚Äô because my ‚ÄòSkill IQ‚Äô score claims I am. Even with many years of experience, there can be gaps in your knowledge base and so the user shouldn‚Äôt ignore courses in a lower skill category such as the ‚ÄòC# fundamentals‚Äô course.&lt;/p&gt;

&lt;h2 id=&quot;personal-profile-&quot;&gt;Personal Profile üòÄ&lt;/h2&gt;

&lt;p&gt;Pluralsight provides some data to help you track your progress. Its good to be able to see what your daily streak is and compare progress on a month to month basis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-2.png&quot; /&gt;
&lt;em&gt;My Personal Profile as of 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;These kind of charts can be very insightful and motivate you to maintain your daily/monthly streaks. Also to give some indication of the value you‚Äôre getting out of the subscription.&lt;/p&gt;

&lt;h2 id=&quot;engagement-&quot;&gt;Engagement üìä&lt;/h2&gt;

&lt;p&gt;Pluralsight sends monthly usage statistics to your email. This reports on&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How many minutes watched&lt;/li&gt;
  &lt;li&gt;How many minutes watched since the previous month&lt;/li&gt;
  &lt;li&gt;Total over past three months&lt;/li&gt;
  &lt;li&gt;How many video clips completed&lt;/li&gt;
  &lt;li&gt;Most viewed subject&lt;/li&gt;
  &lt;li&gt;Current daily streak&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-3.png&quot; /&gt;
&lt;em&gt;My monthly usage statistics email received on 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs good to see your progress broken down like this but I can also see that it was designed to ‚Äòappear‚Äô better than it actually is.&lt;/p&gt;

&lt;p&gt;For example, the report is broken down into minutes instead of hours. I wonder if it‚Äôs because it doesn‚Äôt look as good if you‚Äôre a casual user who doesn‚Äôt log in as much.&lt;/p&gt;

&lt;p&gt;For me personally though, it‚Äôs pretty insightful and motivating.
It also presents some of the courses I‚Äôve just started as well including your progress.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/pluralsight-review-4.png&quot; /&gt;
&lt;em&gt;My monthly usage statistics email received on 5th June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Seeing a report like this can prompt you to unsubscribe to the service if you‚Äôre not using it enough and you‚Äôre on the monthly plan. If you‚Äôre on the annual plan then you wouldn‚Äôt be able to unsubscribe straight away but you may consider not renewing your membership the following year.&lt;/p&gt;

&lt;p&gt;One problem I can see is that its also a little inaccurate for me personally as I watch the course at 1.5x - 2.0x speed which isn‚Äôt factored in the usage statistics.&lt;/p&gt;

&lt;p&gt;There are many other features I haven‚Äôt mentioned such as being able to write notes and downloading exercise files to with when watching a course, I‚Äôve never personally used those features and so I shouldn‚Äôt comment on them.&lt;/p&gt;

&lt;h2 id=&quot;pros-and-cons-&quot;&gt;Pros and Cons ‚úä&lt;/h2&gt;

&lt;p&gt;I‚Äôll quickly break down my opinion on the pros and cons of Pluralsight.&lt;/p&gt;

&lt;h6 id=&quot;pros-&quot;&gt;Pros üëç&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;The course library is abundant and varied&lt;/li&gt;
  &lt;li&gt;The authors and structure of the content is excellent&lt;/li&gt;
  &lt;li&gt;I like the usage statistics on both the profile section and the monthly emails&lt;/li&gt;
  &lt;li&gt;The Path and Skill IQ feature&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;cons-&quot;&gt;Cons üëé&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;It‚Äôs really expensive&lt;/li&gt;
  &lt;li&gt;I wished there were more business, communication or office related courses&lt;/li&gt;
  &lt;li&gt;Each video clip speed feels slower than how the course author recorded it&lt;/li&gt;
  &lt;li&gt;Usage Statistics can be inaccurate depending on what speed you‚Äôre watching the courses in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of the cons can be written off depending on the user. But the main one I think is the price which is arguably strong enough to supercede &lt;strong&gt;all&lt;/strong&gt; of the pros I‚Äôve listed here. While the content and features are nice, I‚Äôm wondering in terms of raw value, is it worth the cost? Especially because there are other cheaper services you can subscribe to.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Overall I like the service, it‚Äôs great for IT professionals and the software development courses I‚Äôve seen so far are very good. Watching courses like these can really improve your knowledge base on the subject you choose. There are courses for users of all levels and being able to track your progress through the Skill IQ and usage statistics are very welcome features. I had heard that Pluralsight used to specialize in C# specific courses, which is probably why there are so many to choose from.&lt;/p&gt;

&lt;p&gt;The main issue I have is the price. Its very expensive, so to justify it, you need to make the most of the subscription by watching the course.&lt;/p&gt;

&lt;p&gt;There are alternative services which are very similar to Pluralsight but cheaper such as &lt;a href=&quot;https://www.linkedin.com/learning/&quot;&gt;LinkedIn Learning&lt;/a&gt;. Its also worth noting that there are free resources as well you can try, while its true that the content or teaching quality may not be as good as the paid courses they can still be very good. So its worth looking around.&lt;/p&gt;

&lt;p&gt;Either way, I would only recommend it if you‚Äôre able to get your company to pay for it, otherwise I‚Äôd consider another cheaper service or opt for the free options if you can‚Äôt afford to pay for the premium courses. I probably wouldn‚Äôt renew my subscription if my company can‚Äôt cover the costs.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I've been using Pluralsight for a few months now. Here is my review.</summary></entry><entry><title type="html">Are Ruby Jobs On A Decline?</title><link href="http://jameslieu.github.io/are-ruby-jobs-on-a-decline/" rel="alternate" type="text/html" title="Are Ruby Jobs On A Decline?" /><published>2020-06-03T00:00:00+01:00</published><updated>2020-06-03T00:00:00+01:00</updated><id>http://jameslieu.github.io/are-ruby-jobs-on-a-decline</id><content type="html" xml:base="http://jameslieu.github.io/are-ruby-jobs-on-a-decline/">&lt;h2 id=&quot;a-decline-in-ruby-opportunities-&quot;&gt;A Decline in Ruby Opportunities? üìâ&lt;/h2&gt;

&lt;p&gt;I love Ruby but would I recommend learning it today? No.&lt;/p&gt;

&lt;p&gt;Ruby was my first programming language and I love it even today.&lt;/p&gt;

&lt;p&gt;Ruby was designed to make programming fun. It is succinct and reads like English. To use alongside Ruby on Rails can make for a satisfying coding experience. The community is very welcoming and the vast number of open-source libraries (known as Gems) have made developing with Ruby enjoyable.&lt;/p&gt;

&lt;p&gt;But despite this, there seems to be a decline in job opportunities in London.&lt;/p&gt;

&lt;p&gt;According to this &lt;a href=&quot;https://blog.makersacademy.com/what-is-the-demand-for-ruby-developers-in-london-today-42e05f23656d&quot;&gt;blog post&lt;/a&gt; published in &lt;strong&gt;28th March 2013&lt;/strong&gt;. It states:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Indeed.co.uk lists &lt;a href=&quot;https://www.indeed.co.uk/Ruby-Developer-jobs-in-London&quot;&gt;1,136 Ruby jobs in London&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The search query for job title &lt;strong&gt;Ruby Developer&lt;/strong&gt; in &lt;strong&gt;London&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So &lt;strong&gt;1,136&lt;/strong&gt; Ruby Jobs In London in &lt;strong&gt;March 2013&lt;/strong&gt;. If you were to click that &lt;a href=&quot;https://www.indeed.co.uk/Ruby-Developer-jobs-in-London&quot;&gt;same link&lt;/a&gt; today (&lt;strong&gt;3rd June 2020&lt;/strong&gt;). There are now only &lt;strong&gt;266&lt;/strong&gt; jobs which is a &lt;strong&gt;76.58%&lt;/strong&gt; decline in 7 years which is huge!&lt;/p&gt;

&lt;p&gt;This was always a concern of mine, I remember speaking to a colleague back in &lt;strong&gt;2014&lt;/strong&gt;. Our tech stack was Ruby on Rails, I asked him whether he thinks Ruby and Ruby on Rails is losing its popularity. He said:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;even if that happens, there will be a lot of projects to maintain and so the job opportunities will still be there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I‚Äôm a little less confident about that statement today. Perhaps that was already happening when I asked him. While there are still a few opportunities (in London), its not looking healthy when compared to other programming languages.&lt;/p&gt;

&lt;h2 id=&quot;is-there-a-reason-to-learn-ruby-today-&quot;&gt;Is there a reason to learn Ruby today? ü§î&lt;/h2&gt;

&lt;p&gt;From a career standpoint, in my opinion, no. I think that if you haven‚Äôt already had experience with Ruby, you should avoid it, especially if you‚Äôre a beginner. There are other languages that may be more worth investing your time into, particularly due to the job opportunities.&lt;/p&gt;

&lt;p&gt;As of &lt;strong&gt;3rd of June 2020&lt;/strong&gt;, when searching for job opportunities from &lt;a href=&quot;https://indeed.co.uk&quot;&gt;Indeed&lt;/a&gt;, I‚Äôve filtered on job title: &lt;strong&gt;&amp;lt;programming language&amp;gt; Developer&lt;/strong&gt; from &lt;strong&gt;London&lt;/strong&gt; (which is the same filter as the blog post above) for some modern programming languages. Here are the results:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;‚ÄØLanguage‚ÄØ&lt;/th&gt;
      &lt;th&gt;Number Of Jobs&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;C#&lt;/td&gt;
      &lt;td&gt;865&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C++&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Go&lt;/td&gt;
      &lt;td&gt;568&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;1727&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JavaScript&lt;/td&gt;
      &lt;td&gt;1589&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PHP&lt;/td&gt;
      &lt;td&gt;356&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Python&lt;/td&gt;
      &lt;td&gt;1076&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ruby&lt;/td&gt;
      &lt;td&gt;266&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Based on these numbers alone, as a beginner, you‚Äôre better off choosing between JavaScript, Python, C# or Java. In fact, all of those Ruby Job Opportunities seem to start at &lt;strong&gt;¬£45,000&lt;/strong&gt; anyway meaning that they‚Äôre not roles aimed towards juniors.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-1.png&quot; style=&quot;border: 1px solid #ccc&quot; /&gt;
&lt;em&gt;Job opportunities on Indeed.co.uk as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;already-an-experienced-developer-&quot;&gt;Already An Experienced Developer? ü§ì&lt;/h2&gt;

&lt;p&gt;What if you‚Äôre an experienced developer. Is there value in learning Ruby? Maybe.&lt;/p&gt;

&lt;p&gt;According to the very recent &lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#top-paying-technologies&quot;&gt;2020 Stack Overflow Survey&lt;/a&gt;. Despite Ruby‚Äôs decline, it is in the most top paying technologies ranking at 5th place globally.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-2.png&quot; /&gt;
&lt;em&gt;Top Paying Technologies - Stack Overflow Survey 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While it‚Äôs true that there are fewer Ruby job opportunities, the salaries for those jobs start at &lt;strong&gt;¬£45,000&lt;/strong&gt; and can be as high as &lt;strong&gt;¬£100k&lt;/strong&gt; full-time. There seems to be a high number of contract work as well, starting at &lt;strong&gt;¬£450&lt;/strong&gt; per day and as high as &lt;strong&gt;¬£650&lt;/strong&gt; per day.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-3.png&quot; style=&quot;border: 1px solid #ccc&quot; /&gt;
&lt;em&gt;Ruby Developer Salary Estimates on Indeed.co.uk as of June 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you already experienced with Ruby then there is value continue using it as the salaries are very generous, the disadvantages are that there are fewer opportunities meaning its harder to get a (Ruby Developer) role if that‚Äôs all you can do.&lt;/p&gt;

&lt;p&gt;Its like my old colleague said:&lt;/p&gt;

&lt;h6 id=&quot;there-will-be-a-lot-of-projects-to-maintain-and-so-the-job-opportunities-will-still-be-there&quot;&gt;‚Ä¶there will be a lot of projects to maintain and so the job opportunities will still be there.&lt;/h6&gt;

&lt;p&gt;It would seem there are some opportunities but very few when compared to similar programming languages like Python and JavaScript.&lt;/p&gt;

&lt;p&gt;There are other considerations such as, will there be innovation? New interesting greenfield projects you‚Äôll be working on? Or will it be legacy projects and maintenance?&lt;/p&gt;

&lt;p&gt;Will you even enjoy Ruby? While I personally love Ruby, according to the &lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-languages-dreaded&quot;&gt;2020 Stack Overflow Survey&lt;/a&gt;, Ruby is &lt;strong&gt;7th most dreaded Programming language&lt;/strong&gt;, one below PHP who is 6th place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/is-ruby-on-a-decline-4.png&quot; /&gt;
&lt;em&gt;Most Dreaded - Stack Overflow Survey 2020&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;An experienced developer wouldn‚Äôt struggle too much to learn Ruby quickly but there are again other programming languages which pay just as well and at the same time seem to be evolving whereas Ruby is a little slow (no pun intended) to innovate, improve or grow. Even PHP is getting better with each version.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;It‚Äôs a shame, I really liked Ruby. I actually initially moved on from Ruby because I had moved out of London to an area where there was only &lt;strong&gt;one&lt;/strong&gt; Ruby position where I had interviewed and didn‚Äôt get the role, I wrote about my &lt;a href=&quot;/moving-from-ruby-to-php/&quot;&gt;move from Ruby to PHP here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In January 2019, a recruiter approached me with a remote Ruby opportunity. I had said to him that I would normally not proceed with that role because Ruby seemed to be losing its popularity and he didn‚Äôt believe me, he recruits for Ruby roles on a daily basis and was convinced I was wrong. He probably had a few opportunities on his desk but perhaps not looking at the bigger picture.&lt;/p&gt;

&lt;p&gt;That said, I did actually complete a tech test for them and &lt;a href=&quot;/prime-factorization/&quot;&gt;wrote a blog post about it&lt;/a&gt;. Really enjoyed completing that one as well although I didn‚Äôt receive a response from the company after submitting it.&lt;/p&gt;

&lt;p&gt;Given the decline in job opportunities for Ruby, I personally would consider specializing in other programming languages. As mentioned above, particularly if you live in London, specializing in JavaScript, Java, Python or C# would be my top picks.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I love Ruby but would I recommend learning it today? No.</summary></entry><entry><title type="html">Achieve Your Most Ambitious Goals</title><link href="http://jameslieu.github.io/achieve-your-most-ambitious-goals/" rel="alternate" type="text/html" title="Achieve Your Most Ambitious Goals" /><published>2020-06-01T00:00:00+01:00</published><updated>2020-06-01T00:00:00+01:00</updated><id>http://jameslieu.github.io/achieve-your-most-ambitious-goals</id><content type="html" xml:base="http://jameslieu.github.io/achieve-your-most-ambitious-goals/">&lt;p&gt;I highly recommend this TED talk: &lt;a href=&quot;https://www.youtube.com/watch?v=TQMbvJNRpLE&quot;&gt;How to Achieve Your Most Ambitious Goals&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author talks about how he applies marginal changes in his routine to get things done.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Even a marginal improvement in our process can have a huge impact on our end result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;putting-it-into-practice-&quot;&gt;Putting it into Practice üèÉ&lt;/h2&gt;

&lt;p&gt;Imagine wanting to finish a book üìñ.&lt;/p&gt;

&lt;p&gt;Instead of thinking about the end goal of reading the whole thing, change your mindset to think about the smallest step to achieving that goal instead.&lt;/p&gt;

&lt;p&gt;Start with &lt;strong&gt;one word&lt;/strong&gt;,  that step of reading &lt;strong&gt;one word&lt;/strong&gt; becomes reading &lt;strong&gt;two words&lt;/strong&gt;, then &lt;strong&gt;ten words&lt;/strong&gt;. That then becomes reading &lt;strong&gt;one paragraph&lt;/strong&gt; which then becomes reading &lt;strong&gt;a chapter&lt;/strong&gt; so on and so fourth until you finish your book. üìï&lt;/p&gt;

&lt;h3 id=&quot;-even-the-tiniest-action-is-worthwhile&quot;&gt;üòä Even the tiniest action is worthwhile&lt;/h3&gt;

&lt;p&gt;How I currently &lt;a href=&quot;/how-i-build-habits&quot;&gt;build my habit&lt;/a&gt; for reading, is to just set the task to &lt;strong&gt;10 pages&lt;/strong&gt;. Still a small task, not quite as small as starting with a single word, I do like this idea of breaking that task down even further. Progressing with the mentality that even the tiniest action is worthwhile and that those actions can compound, which can have a huge impact on our end result.&lt;/p&gt;

&lt;p&gt;It is this mindset that can motivate you to do &lt;em&gt;something&lt;/em&gt;. To progress you into the right direction whatever that may be.&lt;/p&gt;

&lt;p&gt;Simply putting down the tv remote can be considered its own action, putting on your running clothes, stepping out of your front door, take one step, then two steps then a walk, then a jog, then you‚Äôll be running before you know it üèÉ.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;This mindset resonates with &lt;a href=&quot;/how-i-build-habits&quot;&gt;how I build my habits&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instead of focusing on the end result and risk being put off by it, focus on the smallest step first, even doing just that is still progress, and if you‚Äôre able to do this consistently, you‚Äôll be surprised how productive you can be.&lt;/p&gt;

&lt;p&gt;Remember the key take away:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make any task more approachable and apply a marginal adjustment to your routine.&lt;/strong&gt; üí™ üí™&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">Even a marginal improvement in our process can have a huge impact on our end result.</summary></entry><entry><title type="html">How To Write a Programming Journal</title><link href="http://jameslieu.github.io/how-to-write-a-programming-journal/" rel="alternate" type="text/html" title="How To Write a Programming Journal" /><published>2020-05-30T00:00:00+01:00</published><updated>2020-05-30T00:00:00+01:00</updated><id>http://jameslieu.github.io/how-to-write-a-programming-journal</id><content type="html" xml:base="http://jameslieu.github.io/how-to-write-a-programming-journal/">&lt;p&gt;I‚Äôve been going through my old notes and found this section: ‚ÄúHow to write a programming journal‚Äù written on &lt;strong&gt;8th July 2018&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This was when I had decided to start daily journaling about programming topics and challenges I‚Äôve encountered (although I had skipped many days and stopped altogether at the end of the year).&lt;/p&gt;

&lt;p&gt;I likely had done some research on writing a programming journal may have copied some of the content on this post. I can‚Äôt remember whether I wrote my own take on the research I did on this or whether it is a direct copy-and-paste. Regardless, I‚Äôll share my notes here.&lt;/p&gt;

&lt;h2 id=&quot;the-benefits-of-journaling-&quot;&gt;The Benefits of Journaling üìì&lt;/h2&gt;

&lt;h6 id=&quot;-it-helps-you-articulate-your-thoughts&quot;&gt;ü§î It helps you articulate your thoughts.&lt;/h6&gt;

&lt;p&gt;If you‚Äôre like me, you probably tend to ‚Äúthink through‚Äù your coding problems. Trying to implement an algorithm? You run each step through your mind. Need to design a new class? You sit in front of a blank class file, thinking about what variables and methods it‚Äôll need. Stuff like that.&lt;/p&gt;

&lt;p&gt;And that‚Äôs fine for small stuff, but can be unwieldy ‚Äî even counterproductive ‚Äî when you have to tackle something more advanced and/or complex.&lt;/p&gt;

&lt;p&gt;That‚Äôs when a journal comes in handy. It gives you a place to work through your thoughts (e.g. algorithm steps, design process, or whatever else) in a concrete way. You can see everything before you. Not only does it make you less prone to errors, but it‚Äôll help solidify those concepts in your mind.&lt;/p&gt;

&lt;h6 id=&quot;-it-can-make-you-more-productive&quot;&gt;üí™ It can make you more productive.&lt;/h6&gt;

&lt;p&gt;The above-mentioned process of ‚Äúunloading your thoughts‚Äù is more important than you might realize. As it turns out, the simple act of jotting down a task/problem/thought can free up your mind and improve your concentration.&lt;/p&gt;

&lt;p&gt;For example, unloading the details of that newly-designed algorithm into your journal can let you focus on other tasks without wasting ‚Äúbrain CPU cycles‚Äù on keeping those details at the back of your mind.&lt;/p&gt;

&lt;p&gt;A journal also forces you to slow down and think. It‚Äôs tempting to rush into an implementation, and sometimes that works out fine, but you‚Äôll be better off if you think through the entire solution before you write even one line of code. One hour of planning can prevent many hours of debugging!&lt;/p&gt;

&lt;h6 id=&quot;-it-records-a-history-of-your-progress-and-development&quot;&gt;üìà It records a history of your progress and development.&lt;/h6&gt;

&lt;p&gt;This may be the biggest benefit of journaling, especially for new coders. The hardest part about being a newbie is being blind to your own progress and feeling like you aren‚Äôt moving forward. But each journal entry represents a discrete achievement. It feels good, and that‚Äôs priceless when learning.&lt;/p&gt;

&lt;p&gt;It‚Äôs also useful for staying motivated on long-term projects because the journal acts as an objective reminder of how far you‚Äôve come. When you feel like you aren‚Äôt making progress, the journal tells you that you have ‚Äî and that can be a great motivating boost.&lt;/p&gt;

&lt;p&gt;Lastly, a journal can be physical evidence when you run into patent or copyright issues, but only if you date and sign your entries. This probably won‚Äôt be much of an issue unless you work on big projects with millions on the line, though.&lt;/p&gt;

&lt;h2 id=&quot;what-to-write-in-a-programming-journal-&quot;&gt;What to Write in a Programming Journal üìì&lt;/h2&gt;

&lt;h6 id=&quot;-date-and-signature&quot;&gt;üìÜ Date and signature&lt;/h6&gt;
&lt;p&gt;Always date your entries for posterity. If your note-taking app can do it automatically, even better.&lt;/p&gt;

&lt;h6 id=&quot;-problems-encountered&quot;&gt;‚Åâ Problems encountered&lt;/h6&gt;
&lt;p&gt;When you run into an evasive bug or a conceptually-tough algorithm, write about it. Start with a description, when it seems to occur, and a list of possible causes. If you can reproduce it, include those steps. Sometimes the act of writing these things can lead you to a solution.&lt;/p&gt;

&lt;h6 id=&quot;-solutions-explored&quot;&gt;üéâ Solutions explored&lt;/h6&gt;
&lt;p&gt;As you try to solve the problems above, record your attempts to fix them. If the solution works, great! If it doesn‚Äôt, record why it failed. If a solution is suboptimal, make note of the shortcomings so you can iterate later.&lt;/p&gt;

&lt;p&gt;This methodical approach to bug-fixing is extremely helpful, especially when you‚Äôre first starting out and feel overwhelmed by a bug or algorithm ‚Äî but veterans can benefit from this too.&lt;/p&gt;

&lt;h6 id=&quot;-log-your-successes&quot;&gt;üìù Log your successes&lt;/h6&gt;
&lt;p&gt;Keep a separate list of every win along the way, perhaps in the back of your notebook. Did that algorithm finally click? Or maybe your five-day search for a bug finally paid off? Write those wins down! Later, when you‚Äôre feeling stupid or unproductive, you can refer back and see all of the things you‚Äôve accomplished.&lt;/p&gt;

&lt;p&gt;It‚Äôs a simple thing, but can have huge results. I‚Äôve personally found it effective in defeating programming burnout. And as your ‚ÄúHall of Successes‚Äù grows longer, it becomes more powerful as a reminder of your skills and progress.&lt;/p&gt;

&lt;h6 id=&quot;-things-to-revisit-later&quot;&gt;ü§ì Things to revisit later&lt;/h6&gt;
&lt;p&gt;A bug-tracker might be better for tracking todos and bugs (duh) but a journal can be great for jotting down concepts, algorithms, questions, topics, and other ‚Äúthings‚Äù that you can‚Äôt look into right now but want to research later.&lt;/p&gt;

&lt;h6 id=&quot;-ambitions-and-goals&quot;&gt;ü•á Ambitions and goals&lt;/h6&gt;

&lt;p&gt;This one‚Äôs not so much about programming as it is about your future as a programmer. Where do you eventually want to end up? How did today‚Äôs session or this year‚Äôs project take you toward that goal? Or did it set you back? These kinds of entries can be great for re-centering yourself and your direction.&lt;/p&gt;

&lt;h6 id=&quot;-lessons-learned&quot;&gt;ü§¶ Lessons learned&lt;/h6&gt;
&lt;p&gt;After every session, it can be nice to recap everything you did and think about what you learned. Similarly, you should think about recapping every major milestone on your current project and the lessons you‚Äôve learned. This is why developers do post-mortems ‚Äî by articulating lessons learned, you‚Äôre more likely to remember them going forward.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;While I hadn‚Äôt written in my programming journal in a while, I can see why it can be useful, especially if you‚Äôre a junior.&lt;/p&gt;

&lt;p&gt;I‚Äôve been reading back on my old journal entries written in 2018. It has some notes I made of concepts or questions I had, notes of events of that particular day and how I felt on those days including decisions that were made by the team or by management. Its a great way to see how I‚Äôve grown since writing those entries.&lt;/p&gt;

&lt;p&gt;I don‚Äôt know whether I‚Äôll start journaling again but in many ways, these blog posts I‚Äôm writing are a form of journaling for me. I enjoy writing them as well as reading through them retrospectively. I may start to go through my old journal entries and create blog posts on the ones I think would be good to share.&lt;/p&gt;</content><author><name>James Lieu</name></author><summary type="html">I've been going through my old notes and found this section. &quot;How to write a programming journal&quot; written on 8th July 2018.</summary></entry></feed>