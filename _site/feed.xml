<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jameslieu.github.io</title>
    <description>James Lieu</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 01 Apr 2020 17:51:24 +0100</pubDate>
    <lastBuildDate>Wed, 01 Apr 2020 17:51:24 +0100</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Introduction to SNS and SQS</title>
        <description>&lt;p&gt;So for this post I’ll be covering a basic overview of Amazon’s Simple Queue Service (known as SQS) and Amazon’s Simple Notification Service (known as SNS).&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;agenda&quot;&gt;Agenda&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What is SQS?&lt;/li&gt;
  &lt;li&gt;What is SNS?&lt;/li&gt;
  &lt;li&gt;The difference between SNS and SQS&lt;/li&gt;
  &lt;li&gt;Advantages of using SNS and SQS together&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll be running through briefly, what is SQS before moving on to, what is SNS? The differences between the two and the advantages of using them together.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;what-is-amazons-simple-queue-service-sqs&quot;&gt;What is Amazon’s Simple Queue Service (SQS)?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/media/sqs-logo.png&quot; style=&quot;float: right; height: 200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SQS is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications.&lt;/p&gt;

&lt;p&gt;Using SQS, you can send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available
 
 
 &lt;/p&gt;

&lt;hr /&gt;

&lt;h6 id=&quot;sqs-offers-two-types-of-message-queues&quot;&gt;SQS offers two types of message queues:&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Standard Queues&lt;/th&gt;
      &lt;th&gt;FIFO (First in, First Out) Queues&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Unlimited Throughput: Support a nearly unlimited number of transactions per second per API action.&lt;/td&gt;
      &lt;td&gt;High Throughput: By default, FIFO queues support up to 300 messages per second&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Best-Effort Ordering: Occasionally, messages might be delivered in an order different from which they were sent.&lt;/td&gt;
      &lt;td&gt;Exactly-Once Processing: A message is delivered once and remains available until a consumer processes and deletes it. Duplicates aren’t introduced into the queue.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;At-Least-Once Delivery: A delivered at least once, but occasionally more than one copy of a message is delivered.&lt;/td&gt;
      &lt;td&gt;First-In-First-Out Delivery: The order in which messages are sent and received is strictly preserved (i.e. First-In-First-Out).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/media/sqs-1.png&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/assets/media/sqs-2.png&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;working-with-sqs-messages&quot;&gt;Working with SQS Messages&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Messages are persisted and is stored for some configurable duration. The default is 4 days but it can be up to 14 days before they’re automatically deleted.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Messages can contain up to 256 KB of text data, including XML, JSON and unformatted text&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An external service is needed to poll and grab messages from SQS to process. Once the service has successfully processed them, the message can be deleted from the queue.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Alternatively, you can configure your queue to trigger a lambda function to process the message. The lambda will only delete the message from the queue if your function has returned successfully without any errors. If the function fails to process, a &lt;strong&gt;dead-letter queue&lt;/strong&gt; can be leveraged to store those failed messages&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;what-is-a-dead-letter-queue-dlq&quot;&gt;What is a Dead-letter queue (DLQ)?&lt;/h4&gt;

&lt;p&gt;A dead-letter queue is simply an SQS queue for messages that can’t be delivered successfully, for example due to client or server errors.&lt;/p&gt;

&lt;p&gt;Those messages can be held in this queue for reprocessing, we can also configure an alarm for messages arriving into this queue, as well as examine them for further analysis&lt;/p&gt;

&lt;h3 id=&quot;quick-summary&quot;&gt;Quick Summary&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A fully managed message queuing service&lt;/li&gt;
  &lt;li&gt;Send, store, and receive messages&lt;/li&gt;
  &lt;li&gt;Supports Lambda triggers&lt;/li&gt;
  &lt;li&gt;Dead letter queue support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So just a quick summary, SQS is a fully managed queuing service. It can send store and receive messages. It supports lambda triggers and can be used as a dead letter queue for storing failed messages.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;what-is-amazons-simple-notification-service-sns&quot;&gt;What is Amazon’s Simple Notification Service (SNS)?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/media/sns-logo.png&quot; style=&quot;float: right; height: 200px;&quot; /&gt;
SNS is a fully managed publish/subscribe messaging service that coordinates and manages the delivery or sending of messages to subscribing endpoints or clients.&lt;/p&gt;

&lt;p&gt;It provides ‘topics’ which are messaging channels that any number of subscribers can subscribe to. When the Topic receives an event or message, it pushes it to all subscribers at the same time.&lt;/p&gt;

&lt;p&gt; 
 
 &lt;/p&gt;

&lt;p&gt;There are two types of clients to be aware of, subscribers and publishers&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;subscribers&quot;&gt;Subscribers&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Web servers&lt;/li&gt;
  &lt;li&gt;Email&lt;/li&gt;
  &lt;li&gt;SQS queues&lt;/li&gt;
  &lt;li&gt;Lambda functions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Subscribers (i.e. web servers, email addresses,  SQS queues,  Lambda functions) consume or receive messages from the topic they’re subscribed to.&lt;/p&gt;

&lt;h4 id=&quot;publishers&quot;&gt;Publishers&lt;/h4&gt;

&lt;p&gt;Publishers such as distributed systems, microservices and other AWS services can communicate asynchronously with subscribers by producing and sending messages to an SNS topic&lt;/p&gt;

&lt;h3 id=&quot;basic-usage&quot;&gt;Basic Usage&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-2.png&quot; style=&quot;height: 250px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To use SNS, a topic needs to be created. We can control access to it by defining policies that determine which publishers and subscribers can communicate with it.
 
A message is sent directly to the topic. SNS matches the topic to a list of subscribers who have subscribed to it, and delivers the message to each of those subscribers.&lt;/p&gt;

&lt;p&gt;I’ll run through some common scenarios.&lt;/p&gt;

&lt;h4 id=&quot;scenario-1-message-fanout&quot;&gt;Scenario 1: Message Fanout&lt;/h4&gt;

&lt;p&gt;So message fanout occurs when a message, is published to a topic, which is then pushed to multiple subscribers or endpoints.
This provides asynchronous event notifications, which in turn allows for parallel processing.  
 
&lt;img src=&quot;/assets/media/sns-3.png&quot; style=&quot;height: 250px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For example, imagine a topic which has some SQS queues subscribed to it, and imagine we have an application that sends a message to this topic whenever an order is placed for a product.&lt;/p&gt;

&lt;p&gt;When an order is placed, the SQS queues would receive identical messages for that new order at the same time. A service receiving the message from one of the queues could be responsible for the processing of the order, while the other queue can be used by a different service to store the ‘order data’ in a database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-4.png&quot; style=&quot;height: 200px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;scenario-2-application-and-system-alerts&quot;&gt;Scenario 2: Application and System Alerts&lt;/h4&gt;

&lt;p&gt;Application and System alerts, so notifications or alerts that are triggered by a breach of predefined thresholds for monitoring for example&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-5.png&quot; style=&quot;height: 150px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;other-scenarios&quot;&gt;Other Scenarios&lt;/h4&gt;

&lt;p&gt;Other Scenarios can be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Push email or text messaging i.e. Targeted news headlines to subscribers by email or SMS&lt;/li&gt;
  &lt;li&gt;Mobile push notifications i.e. Send messages directly to mobile apps, indicating that an update is available for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-6.png&quot; style=&quot;height: 250px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;message-delivery-retries&quot;&gt;Message Delivery Retries&lt;/h3&gt;

&lt;p&gt;SNS defines a delivery policy for each delivery protocol. The delivery policy defines how SNS, retries the delivery of a message if it is undeliverable for whatever reason.
 
Apart from HTTP, delivery protocols do not support custom delivery policies, so you can’t customise SNS-defined delivery policies.&lt;/p&gt;

&lt;p&gt;When the delivery policy is exhausted, SNS stops retrying the delivery and discards the message. Although, if a dead-letter queue, is configured to the subscription however, then the message will be held there. The dead letter queue is configured on the subscription rather than a topic because message deliveries happen at the subscription level.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-7.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-differences-between-sns-and-sqs&quot;&gt;The differences between SNS and SQS&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;img src=&quot;/assets/media/sns-logo.png&quot; style=&quot;height: 150px;&quot; /&gt;&lt;/th&gt;
      &lt;th&gt;&lt;img src=&quot;/assets/media/sqs-logo.png&quot; style=&quot;height: 150px;&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Fully managed publish-subscribe system.&lt;/td&gt;
      &lt;td&gt;Fully managed Queuing system&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;There is no persistence. So the message isn’t stored by SNS.&lt;/td&gt;
      &lt;td&gt;Decoupling applications / Parallel asynchronous processing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Fanout - Processing the same message in multiple ways&lt;/td&gt;
      &lt;td&gt;Messages are persisted for some (configurable) duration&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Push mechanism - Messages are pushed to subscribers/consumers&lt;/td&gt;
      &lt;td&gt;Pull mechanism - Receivers must poll and pull messages&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;SNS is a distributed publish-subscribe system.  There is no persistence, so the message isn’t stored by SNS.
Leveraging SNS allows for processing the same message in multiple ways and at the same time. It uses a push mechanism, so messages are pushed to subscribers.&lt;/p&gt;

&lt;p&gt;Whereas SQS is a queuing system, used for decoupling applications and allowing parallel asynchronous processing.  Messages are persisted and is stored for some configurable duration. It can be up to 14 days before they’re automatically deleted
SQS uses a pull mechanism – So messages are NOT pushed to receivers. Receivers would have to poll or pull messages. Although SQS does support lambda triggers so we don’t necessarily have to poll for messages, we can leverage that instead.&lt;/p&gt;

&lt;h3 id=&quot;why-might-we-use-sns-with-sqs-together&quot;&gt;Why might we use SNS with SQS together?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/sns-8.png&quot; style=&quot;height: 250px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There may be different kinds of subscribers of the same topic where, some need the immediate delivery of messages such as alerts or email. But others might require the message to persist, for later usage or processing.&lt;/p&gt;

&lt;h5 id=&quot;asynchronous-processing&quot;&gt;Asynchronous Processing&lt;/h5&gt;
&lt;p&gt;When a message is published to a topic, it can be distributed to multiple SQS queues which can then be processed in parallel.&lt;/p&gt;

&lt;h5 id=&quot;persistent-storage&quot;&gt;Persistent Storage&lt;/h5&gt;
&lt;p&gt;By leveraging SQS, the message can be stored, the service can poll and receive the message as and when it decides. If the service were to become unavailable for some reason, the message would still be available within the queue.  Once the service is available again, it can then continue to poll and process those messages.&lt;/p&gt;

&lt;h5 id=&quot;dead-letter-queue&quot;&gt;Dead letter queue&lt;/h5&gt;
&lt;p&gt;If SNS pushes a notification directly to a subscribed Service, and that service is unavailable, then the message will be lost. Leveraging dead-letter queues will solve this issue.&lt;/p&gt;

&lt;p&gt;Also, even if the service has ‘received’ the message. What happens if an error occurs during processing or that processing fails? The message can be pushed to this queue making it available for repossessing or further analysis. And configured to only delete the message when processed successfully.&lt;/p&gt;

&lt;h5 id=&quot;achieve-guaranteed-delivery&quot;&gt;Achieve Guaranteed Delivery&lt;/h5&gt;
&lt;p&gt;So by coupling SNS with SQS, we can achieve guaranteed delivery by receiving messages at our own pace.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;So to summarize:
SNS distributes several copies of the same message to several subscribers, to be processed in parallel.
SQS is mainly used to decouple or integrate applications. It also allows clients to be offline and is tolerant to network and host failures.&lt;/p&gt;

&lt;p&gt;Coupling the two together we can achieve:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Parallel asynchronous processing&lt;/li&gt;
  &lt;li&gt;Fault tolerant systems&lt;/li&gt;
  &lt;li&gt;Guaranteed delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As well as the other benefits mentioned.&lt;/p&gt;

&lt;p&gt;So that concludes my basic overview of the SNS and SQS.
We’ve covered what is SQS, what is SNS, the difference between the two and the advantages of using them together.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 16:00:00 +0100</pubDate>
        <link>http://localhost:4000/aws/sqs/sns/2020/04/01/introduction-to-sqs-and-sns/</link>
        <guid isPermaLink="true">http://localhost:4000/aws/sqs/sns/2020/04/01/introduction-to-sqs-and-sns/</guid>
        
        
        <category>AWS</category>
        
        <category>SQS</category>
        
        <category>SNS</category>
        
      </item>
    
      <item>
        <title>Mocking In JS</title>
        <description>&lt;p&gt;Proxyquire VS SinonJS&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The purpose of this post is to compare the libraries we’re currently using for mocking in our tests.
The two primary libraries we’re using are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Proxyquire&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sinon&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;At the moment we’re using those interchangeably, and there seems to be some confusion to which one we should use or sometimes even both are used in the same test. The initial motivation for writing this blog was because of some of the challenges or confusion that we have faced when attempting to mock/stub the AWS SDK in our unit tests. So I have put together these notes to compare the ways we can achieve the same test for each library.&lt;/p&gt;

&lt;hr /&gt;
&lt;h6 id=&quot;proxyquire&quot;&gt;&lt;a href=&quot;https://github.com/thlorenz/proxyquire&quot;&gt;Proxyquire&lt;/a&gt;&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;Takes over require and lets you inject fakes anywhere in the dependency chain.&lt;/li&gt;
  &lt;li&gt;Thus it still loads the original, just replaces things with what you define.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;sinonjs&quot;&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon&quot;&gt;SinonJS&lt;/a&gt;&lt;/h6&gt;

&lt;ul&gt;
  &lt;li&gt;Doesn’t take over require&lt;/li&gt;
  &lt;li&gt;It’s a more traditional mocking framework. Replace specified methods with fakes, or create a mock that tracks when it was called.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;examples&quot;&gt;Examples&lt;/h5&gt;

&lt;p&gt;Here is some example code I can use to demonstrate both Proxyquire and Sinon to see the difference.&lt;/p&gt;

&lt;p&gt;Consider the following implementation:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aws-sdk&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aws&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receiveParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;QueueUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;http://example.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;MaxNumberOfMessages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;WaitTimeSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;receiveParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a basic example of using the aws-sdk library. We have an exampleFunction which calls SQS’s receiveMessage which then calls the sendMessage if the call was successful. If the sendMessage call is successful we assign the response to the result variable which is then returned.&lt;/p&gt;

&lt;p&gt;Below we’ll show an example of how we might write a unit test (for success) for this with each library so we can compare the two:&lt;/p&gt;

&lt;h6 id=&quot;proxyrequire-example&quot;&gt;&lt;a href=&quot;https://github.com/thlorenz/proxyquire&quot;&gt;Proxyrequire&lt;/a&gt; Example&lt;/h6&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxyquire&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;proxyquire&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ava&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;test exampleFunction returns bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxyquire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../src/aws-sdk-sqs-example&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aws-sdk&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With Proxyquire, we can take over the require statement to import the exampleFunction but also creating fake data to replace the actual aws-sdk functions in order to assert the values we want. Proxyquire will only replace the functions which we define while still allowing the other available functions to work and be used as normal. Which means Proxyquire can work very well as a feature test.&lt;/p&gt;

&lt;p&gt;One thing I also noticed (particularly with this example) was that there interesting behavior in regards to validation. The receiveMessage function has validation. If the receiveParams passed in were to be invalid, then the Promise will be rejected. This can be considered a positive or negative outcome as it encourages the tests to be written with valid parameters but at the same time its not a true mock/stub and was a little unexpected.&lt;/p&gt;

&lt;p&gt;One thing you can’t do is assert the stub. we can only assert the values based off what we’ve stubbed and returned&lt;/p&gt;

&lt;h6 id=&quot;sinon-example&quot;&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon&quot;&gt;Sinon&lt;/a&gt; Example&lt;/h6&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../src/aws-sdk-sqs-example&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aws-sdk&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ava&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;test exampleFunction returns bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqsStub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receiveMessageSpy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sendMessageSpy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;sqsStub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receiveMessageSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sendMessageSpy&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calledOnce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;receiveMessageSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calledOnce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendMessageSpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sinon is considered a ‘true’ mock/stub/spy framework. It is also familiar in its use case.&lt;/p&gt;

&lt;p&gt;The external libraries/classes/functions are completely mocked and thus allowing more flexibility, particularly with asserting them (including the number of times a mock as called). Not only can we determine what is returned from a function, we can configure the different return values depending on how many times a function is called i.e. a difference value if the function was called a second time.&lt;/p&gt;

&lt;h6 id=&quot;proxyquire-with-sinon-example&quot;&gt;Proxyquire with Sinon Example&lt;/h6&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxyquire&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;proxyquire&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ava&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;test exampleFunction using both proxyquire and sinon&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqsStubs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sqsStubs&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proxyquire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../src/aws-sdk-sqs-example&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aws-sdk&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calledOnce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sqsStubs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sinon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calledOnce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sqsStubs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is possible to use both at the same time. Although its worth considering what value this might bring if the test can be achieved with just one of them.&lt;/p&gt;

&lt;h6 id=&quot;aws-sdk-mock-example&quot;&gt;&lt;a href=&quot;https://github.com/dwyl/aws-sdk-mock&quot;&gt;aws-sdk-mock&lt;/a&gt; Example&lt;/h6&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../src/aws-sdk-sqs-example&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;aws-sdk-mock&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ava&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;test exampleFunction returns bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receieveMessageResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;QueueUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;http://example.com/test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;MessageBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;test 123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;receiveMessage&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;receieveMessageResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;SQS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awsSdkSqsExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Its worth also mentioning that specifically for mocking the aws-sdk there is another library we can use, aws-sdk-mock. This library is really designed for syntactic sugar and actually uses Sinon to do its mocking. It does look cleaner and more readable. So this can also be an option to consider as well. There does seem to be a limitation for asserting whether the mock was called but I believe there is an option to use a “Sinon Spy” with this library which then allows for adding those assertions.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;p&gt;Any of the above libraries are fit for our use cases. And there’s nothing particularly wrong with using all three. And the examples that were provided are very basic and may not even be the best way of writing those tests, there are more functionality and utility that I can see in the official documentation so its worth having a look at those as well (links are at the bottom).&lt;/p&gt;

&lt;p&gt;Its worth thinking about considering some consistency in how we use these libraries, to avoid confusion as well as improve maintainability of our own tests.&lt;/p&gt;

&lt;p&gt;For some, Proxyquire feels more intuitive than Sinon. Once the ‘stubs’ are defined, its can become clearer to read what will happen once those are called. The advantage of defining exactly which functions needs stubbing allows for the some degree of ‘feature testing’ which can be useful.&lt;/p&gt;

&lt;p&gt;If we’re unit testing, we need to decide how ‘isolated’ is our test going to be, if we’re intending to test in full isolation then Sinon would be a better fit. Not only does it fully mock/stub the external libraries/functions (including assertions), but we’re also familiar with its ‘style’ as it is similar to other mocking frameworks we’re used to and currently using in other projects.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;external-resources&quot;&gt;External Resources&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thlorenz/proxyquire&quot;&gt;https://github.com/thlorenz/proxyquire&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon&quot;&gt;https://github.com/sinonjs/sinon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dwyl/aws-sdk-mock&quot;&gt;https://github.com/dwyl/aws-sdk-mock&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/javascript/2020/04/01/mocking-in-js/</link>
        <guid isPermaLink="true">http://localhost:4000/javascript/2020/04/01/mocking-in-js/</guid>
        
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        <title>The S.P.A Argument</title>
        <description>&lt;p&gt;There was a short debate I had with some people regarding whether SPAs are necessary based off an article on the subject.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here’s the article
https://journal.plausible.io/you-probably-dont-need-a-single-page-app&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It all comes down to tradeoffs
As with everything in programming, there isn’t a single answer in the SPA vs traditional architecture dilemma. There are cases where it makes sense to go with a SPA because you need a snappy, real-time UI. However, we should recognize that this comes at a cost to the development speed. And if a single-page app is not a requirement, we can avoid the additional complexity and move much quicker by going the traditional route.
Picking the right architecture for the job makes a huge difference in productivity, and ultimately, success. We should aim to have both architectures in our toolbox, so we can use the optimal solution in each case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not sure if this article was a bash at JS developers, but more so debating whether ‘defaulting’ to SPAs is the best solution as a starting point. Why not just build your app in NodeJS/ExpressJS, thats still Javascript and I don’t see anything wrong with this.&lt;/p&gt;

&lt;p&gt;I actually have some personal experience with this in my previous company, we were rewriting a legacy app, it used to be built with Ruby on Rails but the company wanted to use PHP instead primarily because of how difficult it was to find a Rails dev (in Milton Keynes). The senior developer and myself had started at the same time, But he being the senior there had selected the tech stack: Laravel API with an Angular 2 (SPA).&lt;/p&gt;

&lt;p&gt;Developing with Laravel was a breeze and he was already well-versed with it, but why did he go for Angular 2? Or an SPA for that matter. When I asked him, he basically said that it was ‘modern’ (and I wouldn’t be surprised if he just wanted to learn the tech).&lt;/p&gt;

&lt;p&gt;After two years of developing with it, he openly admitted regretting going that route when comparing to just using the Laravel framework to handle everything incl the front end, then perhaps going with the hybrid option and using VueJS to apply the rich UI interactions.&lt;/p&gt;

&lt;p&gt;The problems we’ve had with Angular were error handling, guards, intercepting calls (to handle refresh tokens) to name a few. These things can go completely without when going the traditional route, Laravel would’ve handled that stuff for us out of the box. I personally don’t regret learning Angular but I can see why my colleague says he has regrets over it, it took us substantially longer to develop anything and the question was whether it was even &lt;em&gt;necessary&lt;/em&gt; for &lt;em&gt;this particular app&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The SPA route ‘arguably’ adds extra complexity and setup costs when compared to the traditional route and I think that was where the author of that article was getting at.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Mar 2020 14:36:00 +0100</pubDate>
        <link>http://localhost:4000/javascript/2020/03/31/the-spa-argument/</link>
        <guid isPermaLink="true">http://localhost:4000/javascript/2020/03/31/the-spa-argument/</guid>
        
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        <title>Interesting Conversation On Salary</title>
        <description>&lt;p&gt;I had an interesting discussion on Slack today.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;We were initially talking about how the interview process for a individual (let’s call him Person-A) was tough in the US market. Its apparently quite different and difficult. I had praised the way Person-A handled it however. He mentioned he did a ton of research on the market, spoken with other developers at the company and really seems to know what he is worth and what offer would be deemed acceptable.&lt;/p&gt;

&lt;p&gt;It kind of escalated after somebody suggested that they would love to see open salaries and that it would be really interesting. I would agree, but I wonder if something similar to the BBC whereby they basically compared the top paid male presenters vs top paid female presenters. But they failed to include any other information such as years of experience, number of viewers, how much value and money they bring to the company or anything related to how successful the presenters were.&lt;/p&gt;

&lt;p&gt;Here was my actual response:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;I would say that the problem with open salaries is that it will never paint the full picture. Some people may have jumped from one company to the next, whereas others are perfectly comfortable staying at the same company for up to 5+ years. Some people are perfectly happy to work unsociable hours such as weekends etc whereas the other requires more fixed times.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;For example, imagine two developers both with 5 years experience. ‘Developer A’ stayed at their company for 5 years, the other (Developer B) moved from job to job up to at least 3 times. It is more likely ‘Developer B’ has the higher salary despite having the same number of year experience than ‘Developer A’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The reality is that the best way to boost your salary is to move from company to company. Pay rises at the same company will rarely exceed more than 3% even with negotiation. Whereas when moving to a new company its possible to grow your salary up to 30% (well at least that’s what I did, although I was probably in the right place at the right time).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And when they responded with how if ‘Developer A’ were a women and more senior than ‘Developer B’; a man, then ‘Developer B’ will make more money… Here was my response:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hmm, I’m not informed about any that to comment. All I’m sure of is that an individual’s salary is usually dictated through negotiation. Which is why I commend &lt;strong&gt;Person-A&lt;/strong&gt;’s methods. He did the research and due diligence has kept him knowledgeable on when he was receiving low-ball offers and stood his ground. I bet if he wanted to, he could’ve accepted those offers and be done with it (with a low salary).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It kind of went back and fourth a little, but ultimately, I think what I was saying struck a nerve with some of those in the conversation. I guess they feel like its not fair that you would have to negotiate your salary and that you should just be paid what you’re worth. I actually agree, but the question and the challenge is &lt;strong&gt;how do you demonstrate to the employer how much you’re worth?&lt;/strong&gt; Surely by making a counter offer and then justifying why this offer would be deemed fair to you, which is basically negotiating right?&lt;/p&gt;

&lt;p&gt;Its a tough conversation to have because these can be quite sensitive to those involved and its fairly easy to offend someone with topics like these. I think where it went wrong was because some people in the discussion kept put the example individuals into a group identity i.e. A woman or colour or a ethnic minority. Basically anyone not a cisgender white man.&lt;/p&gt;

&lt;p&gt;The whole discussion started to get a little ridiculous, one person started to get a little annoyed when I said that the solution to getting a good salary is to improve your negotiation skills, but I feel like she misunderstood and sarcastically said something along the lines of ‘Yeah sure! we women need to get better at what men are good at’… I don’t remember specifically mentioning women at all, and when I tried to explain that by saying ‘And guys, I didn’t say anything about women not being able to do this’, one person accused me of not including her and one other person (both were women) because I used the word ‘guys’, which by the way, I used as a gender-neutral term.&lt;/p&gt;

&lt;p&gt;I then proceeded to give an example of my original point in order to stay on topic:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I can give you an example, (although this is anecdotal).
My sister (who is an architect) once applied for a position (which also outlines the salary range). She passed the interview and when they made an offer, she gave an counter offer of 10k more. She then proceeded to explain in detail why she believes she is worth that much and what value she brings to the company. The company hired her&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After this I was accused of ‘mansplaining’. At this point, I felt the conversation was no longer constructive and that I was never going to learn anything new from that point on. I think in some ways its a real shame it ended up this way. Conversations like these are important and I believe will help a lot of people both men and women who are actually less than what they’re worth.&lt;/p&gt;

&lt;p&gt;There are many factors to consider when receiving an offer at a particular company. What is the company’s situation? Are they desperate to fill the position due to deadlines and requirements? Are they desperate to fill a position that will be available as an existing employee is moving on from the company ? Do they have the budget to match even your minimum offer or exceed it by a significantly higher amount?&lt;/p&gt;

&lt;p&gt;Crazily enough, the company can be considering similar factors which considering a candidate. Is the candidate desperate to fill the role? Is the candidate unemployed or going to be soon? What is their minimum range and will they negotiate? What actual experience do they have? Are they the best candidate we have based on the shortlist of candidates we’ve also interviewed? etc&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Instead of pointing fingers and blaming others for things you have no control over, instead focus on what you do have control over. Do your research, know how much the market rate is and what your position is in regards to how much salary you can realistically achieve. Once you have a minimum range, then make sure you don’t accept any less, and be prepared to justify why. You can’t just say that you want 10k more and expect them to simply agree based on your character.
You can say that you want 10k more because of the experience and value you can bring to the company.&lt;/p&gt;

&lt;p&gt;You can dislike the game but ultimately the rules are set, are you going to complain or take the steps necessary to get better at the game and achieve the results you want?&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Mar 2019 00:19:00 +0000</pubDate>
        <link>http://localhost:4000/salary/2019/03/01/interesting-conversation-on-salary/</link>
        <guid isPermaLink="true">http://localhost:4000/salary/2019/03/01/interesting-conversation-on-salary/</guid>
        
        
        <category>Salary</category>
        
      </item>
    
      <item>
        <title>To Hire a Junior Vs Senior Developer</title>
        <description>&lt;p&gt;Just read an interesting post from LinkedIn regarding hiring practices between junior or senior engineers. I didn’t feel I was at liberty to comment (as I’m not a hiring manager) but I had some thoughts.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here is the question:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;When hiring, you often have a choice between a more junior person who may not have all the required experience but for whom the job will be an exciting challenge, and a more senior person who certainly has the skills but who won’t be as challenged by the role. I’ve seen success over the years with both approaches. Do you have a bias for one or the other? Or it depends? On what?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well I guess it depends on why the role needs to be filled. Sometimes a role exists because there is a lot of work to be done, if this is the case, how fast will the junior get up to speed? If the answer is ‘fast enough’ then maybe. If this is the case, then could be an advantage for the company and they should look at the pros and cons between hiring the senior and the junior. While it may be on a per company basis and per candidate basis, here is what I believe are the pros and cons (generally speaking) for hiring:&lt;/p&gt;

&lt;h6 id=&quot;junior&quot;&gt;Junior:&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Pros
    &lt;ul&gt;
      &lt;li&gt;You can justify a lower salary&lt;/li&gt;
      &lt;li&gt;They may be eager to learn and put in some extra hours&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cons
    &lt;ul&gt;
      &lt;li&gt;It’ll take longer to get up to speed&lt;/li&gt;
      &lt;li&gt;It’ll take more of the other developers time meaning, the productivity of the development team will drop&lt;/li&gt;
      &lt;li&gt;May not have the confidence to add to the product development discussions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;senior&quot;&gt;Senior:&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Pros
    &lt;ul&gt;
      &lt;li&gt;They will get up to speed faster&lt;/li&gt;
      &lt;li&gt;May be able to get by without taking anybody’s time&lt;/li&gt;
      &lt;li&gt;Will be more inclined to add to the discussions surrounding the product development&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cons
    &lt;ul&gt;
      &lt;li&gt;Their salary will be higher&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my opinion, the reality is, that the only reason a company needs to fill a role is because they need to increase productivity. What will the role require? Is it to delegate some of the more simpler easier development tasks to somebody else? Is it to fill a role which used to be filled by another developer (junior, mid-level or senior) who has left the company? Or is the work going to be ‘high level’ and they need someone who needs to be able to keep up with the other developers on the team (all of whom are mid-senior level)?&lt;/p&gt;

&lt;p&gt;And back to the original question, just because the senior wouldn’t feel challenged, doesn’t mean that he is of less value to the company. The only thing I can see it being a problem is that the senior may decide to leave the company sooner than the junior would. But before then, how much more productivity would that senior have brought to the company during his or her time there (when being compared with the junior developer)?&lt;/p&gt;

&lt;p&gt;In fact, once the junior gains more experience then it’s possible that he or she will no longer feel challenged as well. And in some ways, are more likely to leave the company earlier because, moving jobs from junior to a mid-level (or even senior) developer will yield a greater salary increase, than if a senior changes roles, as the senior could already be at the top end of the salary ceiling of their specialty (or near it). Also the senior could’ve already moved from job to job when he or she were a junior themselves, and therefore more likely to ‘settle down’ with the company they’re in.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I appreciate and understand why the person might ask the question or start a debate on the topic. Although, in my opinion, the only reason to consider a junior is either, the company has a lower budget than the senior developer market rate. Or it may be that the role simply can’t be filled due to the product or technology they’re using perhaps i.e. legacy code or technology that no one else is using.&lt;/p&gt;

&lt;p&gt;If they have a budget for a senior developer, then in my opinion, they should just hire a senior developer, there is no benefit to hiring somebody who will return less productivity than the other.&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Feb 2019 19:11:00 +0000</pubDate>
        <link>http://localhost:4000/hire/junior/senior/developer/2019/02/09/to-hire-a-junior-vs-senior-developer/</link>
        <guid isPermaLink="true">http://localhost:4000/hire/junior/senior/developer/2019/02/09/to-hire-a-junior-vs-senior-developer/</guid>
        
        
        <category>Hire</category>
        
        <category>Junior</category>
        
        <category>Senior</category>
        
        <category>Developer</category>
        
      </item>
    
      <item>
        <title>Moving From Ruby To PHP</title>
        <description>&lt;p&gt;When I changed jobs from a Ruby role to a PHP role. A lot of people asked why? They anecdotally tell me that it is often the other way round where developers who specialised in PHP, moves to Ruby instead (Well at least this was the common talk back in 2016).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The main reason to be honest was that I relocated from London to Milton Keynes. In London there is a huge demand of Ruby roles available and they also appear to be prepared to pay top dollar for the developers as well, presumably due to the demand.&lt;/p&gt;

&lt;p&gt;However, in Milton Keynes, there were only a handful of companies who were looking for developers who had Ruby experience. Fewer than 5 I’d say. When I relocated, I did apply for those roles but in the event I didn’t get an offer, then I would’ve had to stay at my current role based in London.&lt;/p&gt;

&lt;p&gt;I didn’t mind too much, the company took good care of me and I had a great team to work with but my wife and I just had a child (less than a month old), the commute, both in the morning and evening would mean I’ll be out of the house for long periods and so I wouldn’t be able to help her as much as I would’ve liked.&lt;/p&gt;

&lt;p&gt;I looked at other developer roles in the area and found that there were a few that stood out for me in terms of opportunity count. C# and PHP roles. Given that I was going to move within a few months I needed to decided between PHP and C#, which to go for and study up fast. PHP being a scripting language and having many similarities to Ruby, that made it an easy choice. I’ve dabbled with C# for a bit, but the learning curve definitely feels steeper and time wasn’t a luxury I could afford at that moment.&lt;/p&gt;

&lt;p&gt;Anyway, while I was learning PHP and building a portfolio of projects, I was also applying for opportunities. I’m pretty honest in my CV and mentioned my proficiency with Ruby and JavaScript, but also learning PHP. After speaking with many recruiters, I managed to secure two interviews in the same week, both based in Milton Keynes.&lt;/p&gt;

&lt;p&gt;The first one was for a PHP role, on the job spec it mentioned ‘Ruby experience desirable’. Perfect, I might be able to secure this one if I do well enough. They provided a mini test to do at home which was to build this HTML page with CSS to match an screenshot of their own page. At the interview I was asked to create 3 input fields and save the contents to the database. Easy enough.&lt;/p&gt;

&lt;p&gt;The second company I interviewed with was a front end role, they asked basic questions and they provided a quick question/answer test to fill in. I remember doing very poorly at this stage but I think I interviewed well.&lt;/p&gt;

&lt;p&gt;At the end of all of this, I had gotten offers from both companies and I used this situation to my advantage and negotiated a higher salary. I went with the first company as they were using PHP which I believed will be better for my career moving forward even though the other company offered more money.&lt;/p&gt;

&lt;p&gt;So that’s how I ended up moving to a PHP role. The key thing (in my opinion) here was my willingness to adapt to the environment I’m in. Its not too difficult to switch tech-stacks once you have some grounding on the fundamentals, but the deterrent for some people seems to be learning something new or stepping outside your comfort zone. In order to survive in this industry, I believe you have to keep on learning and improving, staying stagnant just because you feel like you have job security can be dire if you’re not prepared. In fact, I was recently made redundant and I managed to solve that situation very quickly because I was prepared. You can read more about that experience &lt;a href=&quot;https://jameslieu.github.io/redundancy/2019/02/01/redundancy-and-how-i-handled-it/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In hindsight, I definitely felt I made the right choice choosing that offer over the other, I was lucky to have had the opportunity to work with a really good PHP developer at that company. He taught me a lot and my experience and growth there was pretty huge.&lt;/p&gt;

&lt;p&gt;Would I go back to using Ruby again? I don’t know to be honest, I actually really enjoyed Ruby and how elegant it is to work with, I’ve also had the opportunity to work with it in a technical test (which I wrote a &lt;a href=&quot;https://jameslieu.github.io/ruby/prime-numbers/prime-factors/2019/01/31/prime-factorization/&quot;&gt;blog post&lt;/a&gt; about) but the trends are suggesting that it is a dying language, there seems to be fewer companies using it and it doesn’t look to be change its downward course anytime soon.&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Feb 2019 21:41:00 +0000</pubDate>
        <link>http://localhost:4000/ruby/php/2019/02/07/moving-from-ruby-to-php/</link>
        <guid isPermaLink="true">http://localhost:4000/ruby/php/2019/02/07/moving-from-ruby-to-php/</guid>
        
        
        <category>Ruby</category>
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Being The Glue</title>
        <description>&lt;p&gt;I read this interesting &lt;a href=&quot;https://www.slideshare.net/TanyaReilly/being-glue&quot;&gt;SlideShare article&lt;/a&gt; today.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;It was about a software engineer who used some of her time not only to work on the codebase of her company but to also to solve other problems outside the scope of her role. She wasn’t too confident with her skills as a developer, working with this codebase and its complexity but she did identify some other unrelated improvements for her team such as realising that her team is often interrupted by questions on Slack, so she began to document the answers thus the team gets fewer interruptions.&lt;/p&gt;

&lt;p&gt;Another example was that she remembers her difficult first few weeks so she wrote onboarding documents so new employees joining the team will have an easier time. After doing these managerial and leadership tasks, her team started to treat her as an unofficial lead.&lt;/p&gt;

&lt;p&gt;However, by doing all of this, she didn’t contribute much to her actual role, it seems she didn’t contribute to the codebase very much at all and her ‘actual’ resposibilities were left or delegated to somebody else maybe.&lt;/p&gt;

&lt;p&gt;She’s made a huge impact regardless, but in the form of other improvements and yet when it came to the companies promotion process, she was not considered for promotion. The reasons were that her project wasn’t finished, she wasn’t producing much code and she didn’t have enough ‘impact’ yet. She outlined all of the impactful things she’s done over the years but their response was “Yeah but what was your technical contribution”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Yeah but what was your technical contribution”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess the promotion would mean that, had she been considered, her role would change from &lt;strong&gt;Engineer&lt;/strong&gt; to &lt;strong&gt;Senior Engineer&lt;/strong&gt;. And I guess that particular role would not be a good fit for her, given that her contributions related to her actual role were maybe less than ideal.&lt;/p&gt;

&lt;p&gt;We really should be asking &lt;strong&gt;“would her current skillset fit a Senior Engineer role”?&lt;/strong&gt; Perhaps the reason she’s made it this far, was because she’s brought value to the company in other ways. Assuming she didn’t do any of these other tasks, would she have even made this this far?&lt;/p&gt;

&lt;p&gt;It could well be that (at that particular company) an &lt;em&gt;Engineer’s salary&lt;/em&gt; is &lt;strong&gt;equal or potentially higher&lt;/strong&gt; than a &lt;em&gt;Product Manager’s salary&lt;/em&gt;, if this is true then arguably she was being paid &lt;em&gt;more&lt;/em&gt; or at a &lt;em&gt;premium&lt;/em&gt; to do tasks that a &lt;em&gt;Product Manager&lt;/em&gt; would typically be doing perhaps? (All Speculation at this point, I don’t actually know if this were the case).&lt;/p&gt;

&lt;h3 id=&quot;my-opinion&quot;&gt;My Opinion&lt;/h3&gt;
&lt;p&gt;A little controversal to say but I believe you should just do the work you were hired to do within the hours you’re obligated to do it in.&lt;/p&gt;

&lt;p&gt;Don’t go out of your way to do anything more than what you’re asked to. If I identify a more efficient way to do something or improving a workflow of some sort, I would run it by the team during stand up and make sure that everyone is not only onboard, but is aware that I’m doing these things and during work hours. Keep a record of the work and see if you can’t do a before/after benchmark on whatever you did to improve things. If you’re asked to work more hours or stay late, always ask whether you’re being compensated for it or get time off in lieu.&lt;/p&gt;

&lt;p&gt;The only time I would consider going against this rule is if I can see how doing this benefits me personally. For example, the opportunity to network with other people within the company, improve my communication or sales skills, learning a new technology or automating processes which I can then have for personal use.&lt;/p&gt;

&lt;p&gt;It sounded like the person in the example basically took on other work because she wasn’t confident with the technical side of things. Or was worried she worked too slowly, or was worried that she asked too many questions. The advice I would take is to not stop asking questions, maybe study in their own time regarding the technology that she’s not sure off and be sure to take notes, you’ll get up to speed eventually.&lt;/p&gt;

&lt;p&gt;The reality is that she was hired to fill a role, but she didn’t really ‘perform’ as per the expectation of the role, so should she really have been promoted for it?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;..she didn’t really &lt;em&gt;perform&lt;/em&gt; as per the expectation of the role&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not saying that she doesn’t deserve it either, but the great job she did is arguably tasks that belong to a different position/role and therefore she should technically be reviewed based on that instead. I’m guessing a Project Manager type role and Software Developer roles pay differently. Would she have accepted a ‘promotion’ into a Project Manager role whereby she would potentially get ‘Project manager rates’ which could mean a paycut?&lt;/p&gt;

&lt;p&gt;Stay focused on the task at hand and don’t sell yourself short. Never ‘expect’ to get a promotion just because you’ve worked more overtime etc. But if you did do a great job and feel like you deserve a promotion, be sure to bring forth a all of the reasons why and list them out during the performance review meeting. If the company still doesn’t give you the promotion you think you deserve, then you’ll need to consider whether you want to be in a company which values you or not.&lt;/p&gt;

&lt;p&gt;For me personally, the moral of this story is to stop volunteering. Its a nice thing to do but if you don’t gain anything from it or are not rewarded for it then I think you’ll start feeling resentful and that’s not good for you.&lt;/p&gt;

&lt;p&gt;An interesting article to read, nice to learn about different perspectives and consider how I would approach the same problem if I were in their shoes.&lt;/p&gt;

&lt;p&gt;A smart person learns from their mistakes, a wise person learns from other people’s mistakes.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 19:57:00 +0000</pubDate>
        <link>http://localhost:4000/being/glue/2019/02/04/being-the-glue/</link>
        <guid isPermaLink="true">http://localhost:4000/being/glue/2019/02/04/being-the-glue/</guid>
        
        
        <category>Being</category>
        
        <category>Glue</category>
        
      </item>
    
      <item>
        <title>Achieving Inbox Zero</title>
        <description>&lt;p&gt;There was a time when my email inbox had gotten so cluttered and had 4000+ unread messages, maybe another 5000 read messages as well.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Loads of promotional, spam, order confirmations, recruiter emails, notifications, receipts and irrelevant/useless emails kept over that past 9-10 years. Could be worse though, I’ve seen somebody who had 13000+ unread messages, this is not including their read messages.&lt;/p&gt;

&lt;p&gt;I’ve stumbled across a blog I read online (though I didn’t think to save the link) which talked about “Inbox Zero”. The idea was to set up a email management system in order to boost productivity. Start by setting up some labels for common emails you normally get such as ‘Receipts’, ‘Business’ and ‘Personal’. When you receive these particular emails, when you’ve read them and actioned any task associated with them, attach the relevant label and then archive it. Archiving emails just removes it from your ‘inbox’ but will still be available and searchable either within the label category or via the search feature of your email client. Any other emails, you delete as they’re end up cluttering your email inbox.&lt;/p&gt;

&lt;p&gt;If done correctly, you should always have 0 read or unread emails in your inbox, any new emails will be immediately visible and in bold (as they’re unread). Once you’ve read and actioned them, they will either be labelled then archived or immediately deleted.&lt;/p&gt;

&lt;p&gt;I also believe it was designed to allow you to treat your emails as some sort of to-do list where by each email needs to be actioned in one form or another. For example, if it were a car insurance renewal reminder email, it would mean its time to consider new quotes for car insurance or simply allow the renewal to go ahead. I need to action this before archiving or deleting the email, so if this email is still visible in my inbox, it implicitly says that this task has not been addressed or completed yet.&lt;/p&gt;

&lt;p&gt;For me to implement this strategy, the first step I needed to do was to completely clear down my own inbox. Gmail already provided a tab system where they automatically filter your emails by tabs I.e. Social, Promotions, Updates etc. I know that I don’t need any ‘Social’ or ‘Promotions’ related emails, so I deleted all of them first. That alone deleted thousands of unwanted and unnecessary emails. I then looked to see any common ‘senders’ such as emails from ‘indeed’ or ‘amazon’ which were not ones that I cared about such as order dispatched or recommendations (which we not in the filtered ‘Promotions’ tab) and deleted those in bulk as well.&lt;/p&gt;

&lt;p&gt;I didn’t do this in one evening, deleting all of these emails were done incrementally over the span of a week or so before I managed to whittle it down to fewer than 1000. By this point, I had to go through these emails and decide whether I wanted to keep and archive them or delete them. Some emails were a pain because I sent them to myself, often documents or zip files that I needed to move across computers, and I didn’t think to give them any context and left the subject blank. A silly habit which now meant I had to download the files and check they were still things I needed. Often they were not, so I deleted most of them.&lt;/p&gt;

&lt;p&gt;It’s taken a while but I’ve eventually managed to reduce my inbox to 0 emails. Each time I check my inbox, there will usually be fewer than 10 available to read and to either be archived or deleted thus keeping the inbox count to 0. I think there were more to this in the email management system, such as delegating tasks or defer them, I probably won’t be utilising all of these other techniques on top of all of this, the reduced inbox count is fine for now.&lt;/p&gt;

&lt;p&gt;Having experienced “Inbox Zero”, I highly recommend it, the organised nature of it all really keeps everything clean and in order. It makes me confident that everything I have archived is somewhat important or worth keeping, it keeps the memory usage way down, and treating the emails as a sort of to-do list is also a bonus. Definitely worth it.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Feb 2019 20:19:00 +0000</pubDate>
        <link>http://localhost:4000/inbox/zero/email/2019/02/03/achieving-inbox-zero/</link>
        <guid isPermaLink="true">http://localhost:4000/inbox/zero/email/2019/02/03/achieving-inbox-zero/</guid>
        
        
        <category>Inbox</category>
        
        <category>Zero</category>
        
        <category>Email</category>
        
      </item>
    
      <item>
        <title>Why Am I Blogging?</title>
        <description>&lt;p&gt;You may have noticed that there is a hiatus in blog posts between 2016 and 2019&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;To be honest, I basically forgot about the blog really. It wasn’t on my list of priorities, and I guess I initially started the blog to help with my
chances for job opportunities. Being a junior at the time, it was tough to brake into a role without some experience under your belt.&lt;/p&gt;

&lt;p&gt;Also I didn’t really have any topics to blog about. Initially the blog was supposed to only have programming related topics, but my stance on that has changed now,
I’ll blog about anything that I find interesting to write about from now on.&lt;/p&gt;

&lt;p&gt;I had to restore my blog a little by updating the Ruby Gems this blog was using. Once that was all done, it was rather easy to start creating posts. Jekyll is an amazing tool for this
and I’m glad I was able to create content immediately because of it.&lt;/p&gt;

&lt;p&gt;The reason I’ve started blogging again was due to watching a Youtube video about how to be successful or something similar, the content creator gave his top X tips
and one of the things he recommends was to write in a journal or blog. Writing regularly will likely improve my communication skills. It’s also really fun to read
back on something I’ve written after a long while and compare it to my current way of thinking today. I actually started a programming journal but that has some really personal experiences with programming and
I often forget to fill it in or have any content for it.&lt;/p&gt;

&lt;p&gt;So much has changed since my last blog post (before the hiatus in 2016) and my experience as a developer has grown quite a bit. My career path has switched between technology stacks quite a few times as well.
I’m also reading more personal development books and I’m thinking of writing reviews on the ones that have an impact on my life. Sharing this knowledge also helps me
develop myself further as well by becoming better at articulating something as well as testing to see if I truly understand what topic I’m writing about. I’m also not expecting
anyone to read this blog either, this is really for personal use.&lt;/p&gt;

&lt;p&gt;I’m not sure how long I’d be able to maintain or add new content to the blog, but I’ll take on the challenge nonetheless.&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Feb 2019 22:00:00 +0000</pubDate>
        <link>http://localhost:4000/blogging/2019/02/02/why-am-i-blogging/</link>
        <guid isPermaLink="true">http://localhost:4000/blogging/2019/02/02/why-am-i-blogging/</guid>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Redundancy And How I Handled It</title>
        <description>&lt;p&gt;It was the start of the new year, we had all just come back in from the Christmas / New year break. Usually the conversations begin with how was your break? What did you get up to? Did you do any Christmas shopping? It started out like this for me and everyone else in the room but it got a lot less wholesome later on.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Around mid-day I was asked by the CEO of my company to have a chat. We went into a meeting room, my line manager was present. The first thing that was said was ‘I’m sorry to say, but this isn’t good news’.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m sorry to say, but this isn’t good news - CEO of company&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So that was when I was told that my role was at risk of redundancy due to the lack of success from the product I was hired to build and maintain (within a team). Having heard all of this, I sat back and began to intentionally make myself more relaxed as we got into more detail. My notice period was 3 months from the redundancy start date, and we’ll come to the conclusion meeting 2 weeks from ‘today’ to determine whether the redundancy becomes official. The reality was that it was highly unlikely that the role will be safe in my opinion, but this kind of process still needs to be done properly.&lt;/p&gt;

&lt;p&gt;When it was my turn to speak, I had already calmed my nerves by this point and told them that I understood the situation, I appreciate that this was something that had to be done and I thanked them for the opportunity. The CEO was pretty surprised, and respected my response. He thanked me for handling the news well and already offered to give me a good reference and assistance with anything I needed in order for me to take the necessary next steps pertaining the formal notice of risk of redundancy. I was able to work from home from now on which really helped with contacting and communicating with recruiters.&lt;/p&gt;

&lt;p&gt;The process was to begin starting from that day, a letter was handed to me and we were to have another consultation meeting, to give me the opportunity to make my own case or suggestions for alternative work within the company.&lt;/p&gt;

&lt;p&gt;As soon as that meeting had ended, the first thing I did was call my wife to tell her the news but at the same time, that I was pretty prepared to start looking at other opportunities immediately. No prerequisites required nor any up-front work. I then called the recruiter (that got me this job) to see if he had anything. I immediately make my online cv available for other recruiters to find, not before removing my telephone number from my cv and profiles.&lt;/p&gt;

&lt;p&gt;In my mind, I wasn’t too worried. The reason being that I’ve already accounted for this scenario a long while ago. Not that I anticipated a risk of redundancy but having the understanding and foresight that it could happen at any time.&lt;/p&gt;

&lt;p&gt;I had made sure my cv was pretty up-to-date throughout the past year and my personal portfolio of programming projects were also steadily growing. I’ve been working with C# and .NET exclusively for personal projects in order to learn the technology. So all of that was up-to-date and ready to go as well.&lt;/p&gt;

&lt;p&gt;I was on the job hunt immediately and was already being contacted by recruiters over the course of the week. I had deliberately decided to focus my efforts on C# and the Microsoft stack as I think I’ll want to specialise with that technology moving forward. The issue was that I would naturally have very little commercial .NET and C# experience, which is a deterrent to any company HR team who are looking for someone senior etc. Regardless, I persevered and managed to a few telephone interviews booked. I had 3 months of notice period anyway, I would’ve used 1-2 months focusing solely on C#/.NET roles, if I was unable to secure those then I would’ve applied for PHP roles as a fallback plan.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-second-consultancy-meeting&quot;&gt;The Second Consultancy Meeting&lt;/h3&gt;

&lt;p&gt;By the time of the second consultancy meeting, I had already done a telephone interview and had a few more booked later that week. Things were moving quickly, but also positive. I was hoping to find out exactly where I stood with the redundancy and was hoping to find out more about what financial aspects of the redundancy I need to be aware of. I’ve already briefly looked into it on the gov website but I wanted to see whether the company had their own package as well. But they were hoping that I would come up with ideas for alternative work I can do in order to save my employment status. It was disappointing but I had a lengthy chat with my line-manager afterwards and he was very sympathetic and helpful with any questions I had. The CEO also gave me an update call a few days later to answer some of my questions in that meeting as well.&lt;/p&gt;

&lt;p&gt;A few days after the meeting I had a few more telephone interviews, one of which provided me a coding challenge to complete (blog post pending). Coincidently, it’s focus was on solving anagrams. I had already created a &lt;a href=&quot;https://github.com/jameslieu/csharp_projects/tree/master/AnagramSolver&quot;&gt;similar personal project&lt;/a&gt; solving an anagram so it wasn’t too difficult to complete that coding challenge.
I spent a large part of the weekend working on this one however. I’m pretty proud of it and the feedback was positive enough to secure a final face-to-face interview the following week.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;the-redundancy-outcome&quot;&gt;The Redundancy Outcome&lt;/h3&gt;
&lt;p&gt;The final week (week 3) was the busiest. I had a final interview on Monday which turned out really well. Very casual and didn’t require any technical test. They made me an offer. Although I didn’t get the formal document until late Wednesday&lt;/p&gt;

&lt;p&gt;On Tuesday I had my final consultation meeting and it was decided that my role is officially redundant and the notice period of 3 months begins ‘today’.&lt;/p&gt;

&lt;p&gt;The other company (who I did the coding challenge for) wanted to meet on Wednesday for a final face-to-face interview. I met with them, they demoed their products and then they wanted me to explain my thought processes regarding my completed coding challenge. It was quite a long interview (2 hours) it seemed to have gone really well because I was made an offer there and then. Not only did they make me an offer, they offered £2000 more than the top end of what they were initially advertising (making it £4000 more than the first offer I currently have on the table), they wanted me to join their team. I had to tell them that I’ll need time to think about it and consider all of the options before I make a decision.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;they offered £2000 more than the top end of what they were initially advertising&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At around the same time, a recruiter had called me back to inform me that yet another company wanted to meet for an interview. I told him it has to be this week and I already have two offers on the table. He managed to sort one out on the Thursday. So again, I attended this one as well. It also seemed to have gone really well, I was provided a technical test in the same evening which I then proceeded to complete in time for them to make a decision whether to make me an offer. Sadly, they were not able to unless I met with them the following week for a final interview. I quite liked the company as well.&lt;/p&gt;

&lt;p&gt;Furthermore, another company was interested in my CV. This was actually for a Ruby On Rails role based in London. However, they had pretty generous remote working options so I told the recruiter to put me forward and then they sent me a technical test to do. This one was in Ruby and the deadline for this was Friday as well, I’d thought I’ll take on the challenge to see where I get with it. I also completed this on Thursday night. Pretty impressed with myself for being able to solve two tech tests on the same evening. I didn’t hear back from this one, but to be fair I had decided to accept one of the earlier offers as it was in Milton Keynes (where I’m based)&lt;/p&gt;

&lt;p&gt;So on Friday, my wife and I looked at the numbers for the two offers on the table so far, I was also hoping to hear back from the third company, but it wasn’t until the late afternoon did I decide that I shouldn’t delay any longer. We had discovered that although the second company offered a substantially higher base salary, the location of the first was so close to my home that I can essentially give up our second car which brings the overall expenses right down. Based on these figures, going with the second company would only mean that I earn around £1000 more after expenses etc.&lt;/p&gt;

&lt;p&gt;It was a really busy week. But in the end I’m happy with the way things had turned out and the company I had gone with. Its going to be a challenge but the experience can be invaluable. I’ll be starting my first day on 1st February 2019. Looking forward to it.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Its good to look back at this experience an consider what can be learned from it. I managed to cope really well primarily because I had prepared for it. I had also periodically checked the job boards over the past year and know there is still a high demand for developers here in MK&lt;/p&gt;

&lt;p&gt;My CV was up-to-date, I had made sure that I put in the a bullet point for each time I felt I made an impact on this role. I had taken on some commercial C# experience during my time there as well.&lt;/p&gt;

&lt;p&gt;My personal portfolio also had up-to-date projects on there. I created a repo called &lt;a href=&quot;https://github.com/jameslieu/csharp_projects&quot;&gt;csharp_projects&lt;/a&gt; and put all of my C# projects in there. It was quite a good number of projects by this point&lt;/p&gt;

&lt;p&gt;Some of the questions and technical knowledge I was tested on were topics on things I had learned or read about not too long ago, I had also, in my own time, attempted to solve programming problems in C# which really helped. I regularly read articles, read programming blogs and watch programming related videos. This habit of mine has allowed me to gain knowledge on topics that I were able to talk about which really helped with the interviews I had attended. Constantly improving my knowledge and continued learning is something I, as a web developer, should never be ignored. Otherwise, its easy to fall behind and also miss out on potential opportunities.&lt;/p&gt;

&lt;p&gt;I’ve pushed some of my solutions to the technical tests to my &lt;a href=&quot;https://github.com/jameslieu&quot;&gt;Github profile&lt;/a&gt; and I’ll probably write a summary about them all if I think its worth the hassle. In fact, I’ve already created a post yesterday. Click &lt;a href=&quot;http://jameslieu.github.io/ruby/prime-numbers/prime-factors/2019/01/31/prime-factorization/&quot;&gt;here&lt;/a&gt; to check it out.&lt;/p&gt;

&lt;p&gt;While I didn’t actively improve this to prepare me for future interviews, my soft skills seem to be better lately. In these interviews whether it was on the telephone or face-to-face, the feedback overall was pretty good. The people I met seemed to find me likeable and that is definitely due to my soft skills. I’m not too sure how and when I had improved on this, but I wonder if it was because I began reading more self development books and watching videos on personal development as well. In any case, I feel that I, having displayed some good soft skills played a huge role in getting me these offers.&lt;/p&gt;

&lt;p&gt;Again, I didn’t really intentionally prepare any of this, but having done so, it allowed me to swiftly move on and find/gain more opportunities for me. It reminds me of a topic in Jordan Petersons ‘12 Rules For Life’ book, the difference between order and chaos. ‘Order’ being normal day-to-day routines and ‘chaos’ occurring if something unexpected happens which is serious enough to disrupt your life such as receiving an eviction notice or your job role is being made redundant for example. I managed to avoid or substantially reduce ‘chaos’ by being prepared, having all of the necessary resources/steps done and in ‘order’ before ‘chaos’ took control and would therefore cause a tremendous amount of stress in order to deal with and solve the situation.&lt;/p&gt;

&lt;p&gt;Wow this was a long post, I don’t really expect anyone to read this but myself really but writing down my experiences here allows me to have a record of how I handled everything and what my thought process was. I managed to secure 2 (possibly 3) offers in exactly two weeks, in a completely different tech stack and without taking a pay cut.&lt;/p&gt;

&lt;p&gt;I’m pretty proud of myself.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Feb 2019 20:53:00 +0000</pubDate>
        <link>http://localhost:4000/redundancy/2019/02/01/redundancy-and-how-i-handled-it/</link>
        <guid isPermaLink="true">http://localhost:4000/redundancy/2019/02/01/redundancy-and-how-i-handled-it/</guid>
        
        
        <category>redundancy</category>
        
      </item>
    
  </channel>
</rss>
